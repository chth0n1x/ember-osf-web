.eslintrc.js:292:                'no-await-in-loop': 'off',
CHANGELOG.md:1605:    - Disabled `no-await-in-loop` eslint rule for tests
app/application/-components/verify-email-modal/component.ts:84:            const emails = await user.queryHasMany('emails', {
app/application/-components/verify-email-modal/component.ts:124:            await userEmail.save();
app/application/-components/verify-email-modal/component.ts:139:            await timeout(300);
app/authenticators/osf-cookie.ts:41:        let res: RootDocument = await this.currentUser.authenticatedAJAX(
app/authenticators/osf-cookie.ts:50:            res = await this.currentUser.authenticatedAJAX(
app/authenticators/osf-cookie.ts:110:        return await this.authenticate();
app/authenticators/osf-cookie.ts:114:        const res: RootDocument = await this.currentUser.authenticatedAJAX(
app/dashboard/controller.ts:68:        await all([
app/dashboard/controller.ts:81:        await timeout(500);
app/dashboard/controller.ts:84:        await taskFor(this.findNodes).perform();
app/dashboard/controller.ts:95:        const nodes: QueryHasManyResult<Node> = await user!.queryHasMany('sparseNodes', {
app/dashboard/controller.ts:116:            const node = await this.store.findRecord('node', id);
app/dashboard/controller.ts:117:            const linkedNodes: QueryHasManyResult<Node> = await node.queryHasMany('linkedNodes', {
app/dashboard/route.ts:21:            await taskFor(controller.setupTask).perform();
app/decorators/check-auth.ts:47:                    await this.session.authenticate(authenticator);
app/decorators/require-auth.ts:43:                        await this.currentUser.login(
app/goodbye/route.ts:10:        await super.beforeModel(transition);
app/guid-file/route.ts:41:        const institutions = await model.target.get('affiliatedInstitutions');
app/guid-file/route.ts:57:            const file = await this.store.findRecord('file', guid, {include: 'target'});
app/guid-file/route.ts:58:            const target = await file.target as unknown as RegistrationModel;
app/guid-node/files/provider/route.ts:21:        const node = await guidRouteModel.taskInstance;
app/guid-node/files/provider/route.ts:23:            const fileProviders = await node.queryHasMany(
app/guid-node/registrations/controller.ts:46:        const provider = await this.store.findRecord(
app/guid-node/registrations/controller.ts:50:        let schemas: RegistrationSchema[] = await provider.loadAll('schemas');
app/guid-node/registrations/controller.ts:111:        await draftRegistration.save();
app/home/route.ts:10:      await super.beforeModel(transition);
app/instance-initializers/prerender.ts:7:        await ready.ready();
app/institutions/dashboard/-components/institutional-users-list/component.ts:73:        await timeout(500);
app/institutions/dashboard/-components/institutional-users-list/component.ts:75:            const depts: InstitutionDepartmentsModel[] = await this.institution.queryHasMany('departmentMetrics', {
app/institutions/dashboard/route.ts:26:            const institution = await this.store.findRecord('institution', institutionId, {
app/institutions/dashboard/route.ts:31:            const departmentMetrics = await institution.queryHasMany('departmentMetrics');
app/institutions/dashboard/route.ts:32:            const summaryMetrics = await institution.summaryMetrics;
app/institutions/dashboard/route.ts:33:            const userMetricInfo: QueryHasManyResult<never> = await institution.queryHasMany(
app/institutions/index/controller.ts:22:        await timeout(1000);
app/locations/history.ts:26:        await this.ready.ready();
app/locations/history.ts:28:        await waitForQueue('afterRender');
app/meetings/detail/-components/meeting-submissions-list/component.ts:30:        await timeout(500); // debounce
app/meetings/detail/route.ts:15:            const meeting = await this.store.findRecord('meeting', meetingId);
app/meetings/index/-components/meetings-list/component.ts:26:        await timeout(500); // debounce
app/metrics-adapters/keen.ts:97:            const model = await task;
app/metrics-adapters/keen.ts:107:        const node = await this.getCurrentNode();
app/models/base-file-item.ts:63:        const response = await this.currentUser.authenticatedAJAX({
app/models/file.ts:98:        const { data } = await this.currentUser.authenticatedAJAX({
app/models/file.ts:143:        const requestData = await this.currentUser.authenticatedAJAX({
app/models/file.ts:171:        const requestData = await this.currentUser.authenticatedAJAX({
app/models/osf-model.ts:162:        const response: ApiResponseDocument = await this.currentUser.authenticatedAJAX(options);
app/models/osf-model.ts:202:        const currentResults = await this.queryHasMany(relationshipName, queryParams);
app/models/osf-model.ts:210:                await this.loadAll(
app/models/osf-model.ts:317:        const response: ApiResponseDocument = await this.currentUser.authenticatedAJAX({
app/models/osf-model.ts:349:     * const contributors = await node.sparseHasMany(
app/models/osf-model.ts:366:        const response: ResourceCollectionDocument = await this.currentUser.authenticatedAJAX({
app/models/osf-model.ts:398:        do { // eslint-disable-next-line no-await-in-loop
app/models/osf-model.ts:399:            const response = await this.sparseHasMany(relationshipName, fieldset, {
app/models/user-setting.ts:38:        await this.currentUser.authenticatedAJAX({
app/niflheim/controller.ts:917:            // await fetch('https://api.osf.io/v2/users/').then(data => {
app/niflheim/controller.ts:921:            // await fetch('http://localhost:4200/niflheim').then((response: any) =>{
app/niflheim/route.ts:58:            const file = await this.store.findRecord('file', guid, {include: 'target'});
app/niflheim/route.ts:59:            const target = await file.target as unknown as RegistrationModel;
app/packages/files/bitbucket-provider-file.ts:16:            const queryResult = await this.fileModel.queryHasMany('files',
app/packages/files/box-provider-file.ts:16:            const queryResult = await this.fileModel.queryHasMany('files',
app/packages/files/dataverse-provider-file.ts:16:            const queryResult = await this.fileModel.queryHasMany('files',
app/packages/files/dropbox-provider-file.ts:14:            const queryResult = await this.fileModel.queryHasMany('files',
app/packages/files/figshare-provider-file.ts:16:            const queryResult = await this.fileModel.queryHasMany('files',
app/packages/files/file.ts:159:            await this.fileModel.createFolder(newFolderName);
app/packages/files/file.ts:166:                const queryResult = await this.fileModel.queryHasMany('files',
app/packages/files/file.ts:190:        await this.fileModel.updateContents(data);
app/packages/files/file.ts:194:        await this.fileModel.rename(newName, conflict);
app/packages/files/file.ts:200:        return await this.fileModel.move(node, path, provider, options);
app/packages/files/file.ts:206:        return await this.fileModel.copy(node, path, provider, options);
app/packages/files/file.ts:212:        return await this.fileModel.delete();
app/packages/files/file.ts:221:        const responseObject = await this.currentUser.authenticatedAJAX({ url: revisionsLink.toString() });
app/packages/files/github-provider-file.ts:16:            const queryResult = await this.fileModel.queryHasMany('files',
app/packages/files/gitlab-provider-file.ts:16:            const queryResult = await this.fileModel.queryHasMany('files',
app/packages/files/google-drive-provider-file.ts:14:            const queryResult = await this.fileModel.queryHasMany('files',
app/packages/files/one-drive-provider-file.ts:14:            const queryResult = await this.fileModel.queryHasMany('files',
app/packages/files/osf-storage-provider-file.ts:15:            const queryResult = await this.fileModel.queryHasMany('files',
app/packages/files/own-cloud-provider-file.ts:16:            const queryResult = await this.fileModel.queryHasMany('files',
app/packages/files/provider-file.ts:91:        await this.fileModel.createFolder(newFolderName);
app/packages/files/provider-file.ts:97:            const queryResult = await this.fileModel.queryHasMany('files',
app/packages/files/s3-provider-file.ts:16:            const queryResult = await this.fileModel.queryHasMany('files',
app/packages/registration-schema/validations.ts:82:        let validateLicenseTarget = await content.license;
app/register/controller.ts:72:        const provider: PreprintProvider = await this.store.findRecord('preprint-provider', preprintProviderId);
app/register/route.ts:11:        await super.beforeModel(transition);
app/resolve-guid/guid-route.ts:30:            model = await this.store.findRecord(this.modelName(), guid, {
app/resolve-guid/route.ts:72:            const guid = await this.store.findRecord('guid', params.guid);
app/services/analytics.ts:188:        await waitForQueue('destroy');
app/services/analytics.ts:191:        await this._sendCountedUsage(this._getPageviewPayload());
app/services/analytics.ts:323:        await this.currentUser.authenticatedAJAX({
app/services/current-user.ts:110:            await this.session.invalidate();
app/services/ready.ts:34:        await waitForQueue('destroy');
app/settings/account/-components/change-password/component.ts:51:        const { validations } = await this.userPassword.validate();
app/settings/account/-components/change-password/component.ts:56:                await this.userPassword.save();
app/settings/account/-components/change-password/component.ts:66:                await timeout(Number(timeOut) + Number(hideDuration));
app/settings/account/-components/connected-emails/component.ts:62:                await newEmail.save();
app/settings/account/-components/connected-emails/component.ts:86:            const emails = await user.queryHasMany(
app/settings/account/-components/connected-emails/component.ts:107:            await email.destroyRecord();
app/settings/account/-components/connected-emails/component.ts:133:            await email.save();
app/settings/account/-components/connected-emails/component.ts:159:            await this.currentUser.authenticatedAJAX({
app/settings/account/-components/connected-identities/component.ts:31:            await identity.destroyRecord();
app/settings/account/-components/default-region/component.ts:50:        const regions = await this.store.findAll('region');
app/settings/account/-components/default-region/component.ts:64:        await user.belongsTo('defaultRegion').reload();
app/settings/account/-components/default-region/component.ts:73:                await this.changeset.save({});
app/settings/account/-components/request-deactivation/component.ts:36:        this.settings = await user.belongsTo('settings').reload();
app/settings/account/-components/request-deactivation/component.ts:44:                await this.settings.save();
app/settings/account/-components/security/component.ts:68:                await this.changeset.save({});
app/settings/account/-components/security/component.ts:91:        const settings = await user.belongsTo('settings').reload();
app/settings/account/-components/security/component.ts:105:        const emails = await user.queryHasMany(
app/settings/account/-components/security/component.ts:117:                await this.settings.save();
app/settings/developer-apps/-components/app-card/component.ts:25:        await this.developerApp.destroyRecord();
app/settings/developer-apps/-components/app-form/component.ts:37:            await this.appTaskInstance;
app/settings/developer-apps/-components/app-form/component.ts:52:                await this.changeset.save({});
app/settings/developer-apps/-components/app-form/component.ts:68:                await this.changeset.save({});
app/settings/developer-apps/-components/app-form/component.ts:82:            await this.developerApp.destroyRecord();
app/settings/developer-apps/-components/client-secret/component.ts:35:            await this.developerApp.save();
app/settings/developer-apps/edit/route.ts:17:            return await this.store.findRecord('developer-app', id, { reload: false });
app/settings/tokens/-components/token-card/component.ts:26:        await this.token.save();
app/settings/tokens/edit/controller.ts:33:        await this.token!.destroyRecord();
app/settings/tokens/edit/route.ts:20:            return await this.store.findRecord('token', id, { reload: false });
app/validators/node-license.ts:27:        const license: License = await get(model, on);
app/validators/password-strength.ts:14:        } = await this.passwordStrength.strength(value);
app/validators/validate-response-format.ts:16:                        // eslint-disable-next-line no-await-in-loop
app/validators/validate-response-format.ts:17:                        await file.reload();
blueprints/acceptance-test/files/tests/acceptance/__name__-test.ts:13:        await visit('/<%= dasherizedModuleName %>');
blueprints/acceptance-test/files/tests/acceptance/__name__-test.ts:17:        await percySnapshot(assert);
blueprints/component-test/engine-files/tests/engines/__engineName__/__testType__/__path__/__test__.ts:13:        await render(hbs`{{<%= componentPathName %>}}`);
blueprints/component-test/engine-files/tests/engines/__engineName__/__testType__/__path__/__test__.ts:18:        await render(hbs`
blueprints/component-test/files/tests/__testType__/__path__/__test__.ts:13:        await render(hbs`{{<%= componentPathName %>}}`);
blueprints/component-test/files/tests/__testType__/__path__/__test__.ts:18:        await render(hbs`
handbook-docs/analytics/template.md:142:await click('button');
handbook-docs/components/delete-button/controller.ts:13:        await timeout(1000);
handbook-docs/components/validated-model-form/route.ts:11:        const node = await this.store.findRecord('node', 'extng');
lib/analytics-page/addon/application/route.ts:23:        const node = await model.reload({
lib/analytics-page/addon/application/route.ts:41:        const node = await taskInstance;
lib/analytics-page/addon/components/analytics-charts/x-chart-wrapper/component.ts:48:        const node = await this.nodeTaskInstance;
lib/analytics-page/addon/components/analytics-charts/x-chart-wrapper/component.ts:50:            let data = await this.keen.queryNode(
lib/app-components/addon/components/project-contributors/list/component.ts:76:        await taskFor(this.saveAndHighlight).perform(contributor);
lib/app-components/addon/components/project-contributors/list/component.ts:96:        await taskFor(this.saveAndHighlight).perform(contributor);
lib/app-components/addon/components/project-contributors/list/component.ts:108:            await contributor.save();
lib/app-components/addon/components/project-contributors/list/component.ts:115:        await timeout(2000);
lib/app-components/addon/components/project-contributors/list/component.ts:128:            await contributor.destroyRecord();
lib/app-components/addon/components/project-contributors/list/component.ts:145:        const contributors = await this.node.queryHasMany(
lib/app-components/addon/components/project-contributors/list/component.ts:162:        await taskFor(this.saveAndHighlight).perform(contributor);
lib/app-components/addon/components/project-contributors/search/component.ts:55:            await contributor.save();
lib/app-components/addon/components/project-contributors/search/component.ts:79:        await timeout(250);
lib/app-components/addon/components/project-contributors/search/component.ts:82:        const results = await this.store.query('user', {
lib/app-components/addon/components/project-contributors/search/unregistered-contributor/component.ts:35:        const { validations } = await this.model!.validate();
lib/app-components/addon/components/project-contributors/search/unregistered-contributor/component.ts:45:            await this.model!.save();
lib/app-components/addon/components/project-metadata/component.ts:33:        await this.node.reload();
lib/collections/addon/components/collection-item-picker/component.ts:51:        await taskFor(this.findNodes).perform();
lib/collections/addon/components/collection-item-picker/component.ts:58:            await timeout(250);
lib/collections/addon/components/collection-item-picker/component.ts:81:        const nodes = await user.queryHasMany('nodes', {
lib/collections/addon/components/collection-item-picker/component.ts:91:        const cgm = await this.collection.queryHasMany('collectedMetadata', {
lib/collections/addon/components/collection-item-picker/component.ts:105:            const moreNodes = await this.loadMore();
lib/collections/addon/components/collections-submission/component.ts:80:        const validatedModels = await Promise.all([
lib/collections/addon/components/collections-submission/component.ts:98:                await this.collectionItem.save();
lib/collections/addon/components/collections-submission/component.ts:100:            await this.collectedMetadatum.save();
lib/collections/addon/components/collections-submission/component.ts:108:            await timeout(1000);
lib/collections/addon/components/discover-page/component.ts:246:            await timeout(500);
lib/collections/addon/components/discover-page/component.ts:250:            const results = await this.query(this.queryAttributes);
lib/collections/addon/components/discover-page/facets/checklist/component.ts:36:            : (await this.store.findAll('collection-provider', {
lib/collections/addon/components/discover-page/facets/checklist/component.ts:40:        const primaryCollections = await Promise.all(
lib/collections/addon/components/discover-page/facets/collection-provider/component.ts:51:            const providers = await this.store.findAll('collection-provider');
lib/collections/addon/guid/route.ts:45:            collection = await this.store.findRecord('collection', collectionId);
lib/collections/addon/guid/route.ts:48:            collection = await provider.primaryCollection;
lib/collections/addon/guid/route.ts:53:            const collectedMetadatum = await this.store.findRecord('collected-metadatum', cgmId);
lib/collections/addon/guid/route.ts:63:            await collectionItem.license;
lib/collections/addon/provider/route.ts:16:            await this.store.findRecord('collection-provider', slugLower);
lib/collections/addon/submit/route.ts:42:        const collection = await provider.primaryCollection;
lib/osf-components/addon/components/ancestry-display/component.ts:42:            const parentNode = await this.node.parent;
lib/osf-components/addon/components/ancestry-display/component.ts:48:        const results = await allSettled([
lib/osf-components/addon/components/citation-viewer/component.ts:60:        const response: SingleResourceDocument = await this.currentUser.authenticatedAJAX({
lib/osf-components/addon/components/citation-viewer/component.ts:70:        const responses: SingleResourceDocument[] = await all(
lib/osf-components/addon/components/citation-viewer/component.ts:86:        await timeout(1000); // debounce
lib/osf-components/addon/components/citation-viewer/component.ts:88:        const citationSearchResults = await this.store.query('citation-style', {
lib/osf-components/addon/components/contributor-list/component.ts:61:            const allContributors = await this.model.loadAll('bibliographicContributors');
lib/osf-components/addon/components/contributor-list/component.ts:67:            const nextPage = await this.model.queryHasMany(
lib/osf-components/addon/components/contributor-list/component.ts:75:            const firstPage = await this.model.bibliographicContributors;
lib/osf-components/addon/components/contributor-list/component.ts:97:            contributor = await this.store.findRecord('contributor', `${this.model.id}-${userID}`);
lib/osf-components/addon/components/contributor-list/component.ts:104:            await contributor!.destroyRecord();
lib/osf-components/addon/components/contributor-list/contributor/component.ts:26:        const user = await this.contributor.users;
lib/osf-components/addon/components/contributor-list/unregistered-contributor/component.ts:59:        const emails = await this.currentUser.user!.queryHasMany('emails', {
lib/osf-components/addon/components/contributor-list/unregistered-contributor/component.ts:71:            const user = await this.contributor.users;
lib/osf-components/addon/components/contributor-list/unregistered-contributor/component.ts:74:                    await user.claimUnregisteredUser(this.nodeId);
lib/osf-components/addon/components/contributor-list/unregistered-contributor/component.ts:79:                        await user.claimUnregisteredUser(this.nodeId, this.emailChangeset!.get('userEmail'));
lib/osf-components/addon/components/contributors/manager/component.ts:59:            const currentPageResult = await model.queryHasMany('contributors', {
lib/osf-components/addon/components/contributors/manager/component.ts:73:            await contributor.save();
lib/osf-components/addon/components/contributors/manager/component.ts:89:            await contributor.save();
lib/osf-components/addon/components/contributors/manager/component.ts:109:            await contributor.save();
lib/osf-components/addon/components/contributors/manager/component.ts:122:            await contributor.destroyRecord();
lib/osf-components/addon/components/contributors/manager/component.ts:155:            await newContributor.save();
lib/osf-components/addon/components/contributors/manager/component.ts:177:            await newContributor.save();
lib/osf-components/addon/components/contributors/user-search/widget/component.ts:48:            await timeout(500);
lib/osf-components/addon/components/contributors/user-search/widget/component.ts:52:        const currentPageResult = await this.store.query('user', {
lib/osf-components/addon/components/copyable-text/component.ts:44:        await timeout(3000);
lib/osf-components/addon/components/debouncer/component.ts:18:        await timeout(this.timeoutInterval);
lib/osf-components/addon/components/debouncer/component.ts:19:        await this.fn();
lib/osf-components/addon/components/delete-button/component.ts:60:            await this.delete();
lib/osf-components/addon/components/draft-registration-card/component.ts:40:        await this.draftRegistration.destroyRecord();
lib/osf-components/addon/components/editable-field/category-manager/component.ts:50:            await this.node.save();
lib/osf-components/addon/components/editable-field/description-manager/component.ts:58:                await this.node.save();
lib/osf-components/addon/components/editable-field/doi-manager/component.ts:68:            const identifiers = await this.node.identifiers;
lib/osf-components/addon/components/editable-field/doi-manager/component.ts:86:                const doi = await identifier.save();
lib/osf-components/addon/components/editable-field/institutions-manager/component.ts:76:            const affiliatedList = await this.node.queryHasMany(
lib/osf-components/addon/components/editable-field/institutions-manager/component.ts:91:            await this.node.updateM2MRelationship('affiliatedInstitutions', this.currentAffiliatedList);
lib/osf-components/addon/components/editable-field/license-manager/component.ts:64:        const provider = await this.node.provider;
lib/osf-components/addon/components/editable-field/license-manager/component.ts:70:        const providerLicenses = await provider
lib/osf-components/addon/components/editable-field/license-manager/component.ts:77:            currentLicense: await this.node.license,
lib/osf-components/addon/components/editable-field/license-manager/component.ts:137:            await this.changeset.save({});
lib/osf-components/addon/components/editable-field/provider-metadata-manager/component.ts:52:                await this.args.registration.save();
lib/osf-components/addon/components/editable-field/publication-doi-manager/component.ts:83:                await this.node.save();
lib/osf-components/addon/components/editable-field/subject-field-manager/component.ts:49:            await this.subjectsManager.saveChanges();
lib/osf-components/addon/components/editable-field/tags-manager/component.ts:66:            await this.registration.save();
lib/osf-components/addon/components/file-actions-menu/delete-modal/component.ts:24:            await taskFor(this.args.file.delete).perform();
lib/osf-components/addon/components/file-browser/delete-file-modal/component.ts:27:                await taskFor(item.delete).perform();
lib/osf-components/addon/components/file-browser/delete-file-modal/component.ts:52:            await taskFor(item.delete).perform();
lib/osf-components/addon/components/file-browser/file-rename-modal/component.ts:77:            await this.args.item.rename(trimmedName, '');
lib/osf-components/addon/components/files/manager/component.ts:137:            const fileProviders = await this.node.files;
lib/osf-components/addon/components/files/manager/component.ts:139:            const rootFolder = await fileProvider.rootFolder;
lib/osf-components/addon/components/files/manager/component.ts:141:            await rootFolder.files;
lib/osf-components/addon/components/files/manager/component.ts:154:        await this.currentFolder.queryHasMany('files', {
lib/osf-components/addon/components/files/manager/component.ts:168:        await this.currentFolder.files;
lib/osf-components/addon/components/files/manager/component.ts:174:        await this.currentFolder.queryHasMany('files', {
lib/osf-components/addon/components/files/manager/component.ts:186:        const file = await this.store
lib/osf-components/addon/components/files/manager/component.ts:215:            await file.delete();
lib/osf-components/addon/components/files/menu/component.ts:77:            ({ newFolderId } = await parentFolder.createFolder(newFolderName));
lib/osf-components/addon/components/files/menu/component.ts:85:        const newFolder = await this.store.findRecord('file', newFolderId);
lib/osf-components/addon/components/files/upload-zone/component.ts:92:        await this.filesManager.addFile(fileId.replace(/^.*\//, ''));
lib/osf-components/addon/components/files/upload-zone/component.ts:102:            [existingFile] = await this.filesManager.currentFolder.queryHasMany('files', {
lib/osf-components/addon/components/license-picker/component.ts:48:            await timeout(500);
lib/osf-components/addon/components/license-picker/component.ts:51:        const licensesAcceptable = await this.provider
lib/osf-components/addon/components/license-picker/component.ts:57:        await this.node.license;
lib/osf-components/addon/components/maintenance-banner/component.ts:48:        const data = await this.currentUser.authenticatedAJAX({ url });
lib/osf-components/addon/components/moderators/add-modal/component.ts:96:            await timeout(500);
lib/osf-components/addon/components/moderators/add-modal/component.ts:97:            return await this.store.query('user', {
lib/osf-components/addon/components/moderators/manager/component.ts:60:            await moderator.save();
lib/osf-components/addon/components/moderators/manager/component.ts:80:            await moderator.destroyRecord();
lib/osf-components/addon/components/moderators/manager/component.ts:105:                this.currentModerator = await this.store.findRecord('moderator', this.currentUser.currentUserId,
lib/osf-components/addon/components/moderators/manager/component.ts:129:                await newModerator.save();
lib/osf-components/addon/components/moderators/manager/component.ts:163:                await newModerator.save();
lib/osf-components/addon/components/move-file-modal/component.ts:105:        const childrenList = await this.currentNode!.queryHasMany('children',
lib/osf-components/addon/components/move-file-modal/component.ts:119:        this.currentNode = await this.store.findRecord('node', id);
lib/osf-components/addon/components/move-file-modal/component.ts:131:            fileList = await this.currentNode!.queryHasMany('files', {
lib/osf-components/addon/components/move-file-modal/component.ts:139:            fileList = await this.currentFolder.getFolderItems(this.folderPage, FileSortKey.AscName, '');
lib/osf-components/addon/components/move-file-modal/component.ts:217:        return await taskFor(file.move).perform(destinationNode, path, provider, options);
lib/osf-components/addon/components/move-file-modal/component.ts:232:            await allSettled(moveTasks);
lib/osf-components/addon/components/move-file-modal/component.ts:242:        return await taskFor(file.copy).perform(destinationNode, path, provider, options);
lib/osf-components/addon/components/move-file-modal/component.ts:257:            await allSettled(copyTasks);
lib/osf-components/addon/components/move-file-modal/template.hbs:34:                                {{t (concat 'osf-components.move_file_modal.'(if @preserveOriginal 'awaiting_copy' 'awaiting_move')) fileName=file.name}}
lib/osf-components/addon/components/new-project-modal/component.ts:72:        this.set('institutions', (await this.currentUser.user!.institutions));
lib/osf-components/addon/components/new-project-modal/component.ts:78:        const regions = await this.store.findAll('region');
lib/osf-components/addon/components/new-project-modal/component.ts:94:        await user.belongsTo('defaultRegion').reload();
lib/osf-components/addon/components/new-project-modal/component.ts:100:        await timeout(500);
lib/osf-components/addon/components/new-project-modal/component.ts:101:        const userNodes = await this.user.queryHasMany('nodes', { filter: { title } });
lib/osf-components/addon/components/new-project-modal/component.ts:136:            await node.save();
lib/osf-components/addon/components/node-card/component.ts:66:                const revisions = await registration.queryHasMany('schemaResponses');
lib/osf-components/addon/components/paginated-list/all/component.ts:23:        const items = await this.store.query(this.modelName, {
lib/osf-components/addon/components/paginated-list/base-data-component.ts:45:            await taskFor(this.loadItemsTask).perform({ reloading });
lib/osf-components/addon/components/paginated-list/has-many/component.ts:33:        const model = await taskFor(this.getModelTask).perform();
lib/osf-components/addon/components/paginated-list/has-many/component.ts:35:            await taskFor(this.loadRelatedCountTask).perform(reloading);
lib/osf-components/addon/components/paginated-list/has-many/component.ts:41:        const items = await model.queryHasMany(
lib/osf-components/addon/components/paginated-list/has-many/component.ts:62:            model = await this.modelTaskInstance;
lib/osf-components/addon/components/paginated-list/has-many/component.ts:73:        const model = await taskFor(this.getModelTask).perform();
lib/osf-components/addon/components/paginated-list/has-many/component.ts:75:            await model.loadRelatedCount(this.relationshipName);
lib/osf-components/addon/components/password-strength-bar/component.ts:43:        await timeout(250);
lib/osf-components/addon/components/password-strength-bar/component.ts:45:        const strength = await this.passwordStrength.strength(value);
lib/osf-components/addon/components/project-selector/component.ts:89:            projectList: await taskFor(this.findNodes).perform(),
lib/osf-components/addon/components/project-selector/component.ts:97:            await timeout(250);
lib/osf-components/addon/components/project-selector/component.ts:105:        const nodes = await user.queryHasMany('nodes', {
lib/osf-components/addon/components/registries/finalize-registration-modal/manager/component.ts:50:            await this.registration.save();
lib/osf-components/addon/components/registries/new-update-modal/component.ts:49:        await newRevision.save();
lib/osf-components/addon/components/registries/overview-form-renderer/component.ts:57:                const registrationSchema = await this.registration.registrationSchema;
lib/osf-components/addon/components/registries/overview-form-renderer/component.ts:59:                const schemaBlocks: SchemaBlock[] = await registrationSchema.loadAll('schemaBlocks');
lib/osf-components/addon/components/registries/overview-form-renderer/component.ts:75:            this.currentModerator = await this.store.findRecord('moderator', this.currentUser.currentUserId!,
lib/osf-components/addon/components/registries/partial-registration-modal/manager/component.ts:33:        const children = await node.queryHasMany('children');
lib/osf-components/addon/components/registries/partial-registration-modal/manager/component.ts:37:                const greatGrandChildren = await taskFor(this.getChildren).perform(child);
lib/osf-components/addon/components/registries/partial-registration-modal/manager/component.ts:48:        const allChildNodesIncludingRoot = (await taskFor(this.getChildren).perform(this.rootNode)) || [];
lib/osf-components/addon/components/registries/registration-list/card/component.ts:66:            const revisions = await this.args.registration.queryHasMany('schemaResponses');
lib/osf-components/addon/components/registries/review-actions-list/component.ts:50:                this.reviewActions = await this.args.registration.reviewActions as ReviewActionModel[];
lib/osf-components/addon/components/registries/review-actions-list/component.ts:53:                this.reviewActions = await this.args.revision.actions as SchemaResponseActionModel[];
lib/osf-components/addon/components/registries/update-dropdown/component.ts:112:                const currentPageResult = await this.args.registration.queryHasMany('schemaResponses', {
lib/osf-components/addon/components/registries/update-dropdown/component.ts:134:        await newRevision.save();
lib/osf-components/addon/components/resources-list/component.ts:46:        const resourceList = await this.args.registration.queryHasMany('resources',
lib/osf-components/addon/components/resources-list/delete-resource/component.ts:23:            await this.args.resource.destroyRecord();
lib/osf-components/addon/components/resources-list/edit-resource/component.ts:63:            await this.resource.save();
lib/osf-components/addon/components/resources-list/edit-resource/component.ts:98:                await this.changeset.save();
lib/osf-components/addon/components/resources-list/edit-resource/component.ts:133:                await this.resource.save();
lib/osf-components/addon/components/resources-list/edit-resource/component.ts:147:        await this.resource?.destroyRecord();
lib/osf-components/addon/components/scheduled-banner/component.ts:36:        const banner = await this.store.findRecord('banner', 'current');
lib/osf-components/addon/components/sign-up-form/component.ts:48:        const { validations } = await this.userRegistration.validate();
lib/osf-components/addon/components/sign-up-form/component.ts:56:            await this.userRegistration.save();
lib/osf-components/addon/components/sign-up-form/component.ts:62:                await this.userRegistration.validate();
lib/osf-components/addon/components/sign-up-form/component.ts:66:                await this.userRegistration.validate();
lib/osf-components/addon/components/sign-up-form/component.ts:82:        await timeout(250);
lib/osf-components/addon/components/sign-up-form/component.ts:85:            return await this.passwordStrength.strength(value);
lib/osf-components/addon/components/storage-provider-manager/storage-manager/component.ts:132:        await taskFor(this.getRootFolder).perform();
lib/osf-components/addon/components/storage-provider-manager/storage-manager/component.ts:133:        await taskFor(this.getCurrentFolderItems).perform();
lib/osf-components/addon/components/storage-provider-manager/storage-manager/component.ts:158:            const items = await this.currentFolder.getFolderItems(this.currentPage, this.sort, this.filter);
lib/osf-components/addon/components/storage-provider-manager/storage-manager/component.ts:167:        await timeout(500);
lib/osf-components/addon/components/storage-provider-manager/storage-manager/component.ts:193:            await this.currentFolder.createFolder(newFolderName);
lib/osf-components/addon/components/subjects/browse/browse-manager/component.ts:45:            const provider = await this.subjectsManager.provider;
lib/osf-components/addon/components/subjects/browse/browse-manager/component.ts:46:            const rootSubjects = await provider.queryHasMany('subjects', {
lib/osf-components/addon/components/subjects/manager/component.ts:110:        const savedSubjects: SubjectModel[] = model.get('isNew') ? model.subjects : (await model.loadAll('subjects'));
lib/osf-components/addon/components/subjects/manager/component.ts:126:            const updateResult: ResourceCollectionDocument = await this.model.updateM2MRelationship(
lib/osf-components/addon/components/subjects/manager/single/component.ts:103:            const children = await subject.queryHasMany('children', {
lib/osf-components/addon/components/subjects/search/component.ts:37:        await timeout(500); // debounce
lib/osf-components/addon/components/subjects/search/component.ts:45:        const filterResults = await provider.queryHasMany('subjects', {
lib/osf-components/addon/components/subjects/search/search-result/component.ts:36:            // eslint-disable-next-line no-await-in-loop
lib/osf-components/addon/components/subjects/search/search-result/component.ts:37:            const nextParent: SubjectModel = await nextParentRef.load();
lib/osf-components/addon/components/subscriptions/manager/component.ts:34:                this.subscriptions = await this.store.query('subscription', {
lib/osf-components/addon/components/subscriptions/manager/component.ts:38:                this.subscriptions = await this.store.findAll('subscription');
lib/osf-components/addon/components/subscriptions/manager/component.ts:55:            await subscription.save();
lib/osf-components/addon/components/time-since/component.ts:32:            // eslint-disable-next-line no-await-in-loop
lib/osf-components/addon/components/time-since/component.ts:33:            await timeout(interval);
lib/osf-components/addon/components/tos-consent-banner/component.ts:42:        const { validations } = await user!.validate();
lib/osf-components/addon/components/tos-consent-banner/component.ts:50:            await user!.save();
lib/osf-components/addon/components/validated-model-form/component.ts:52:        await this.changeset.validate();
lib/osf-components/addon/components/validated-model-form/component.ts:56:                await this.changeset.save({});
lib/osf-components/addon/components/validated-model-form/component.ts:128:            const { validations } = await model.validateAttribute(params.key, params.newValue);
lib/registries/addon/branded/moderation/-components/upload-csv/component.ts:91:        await navigator.clipboard.writeText(mainElement!.textContent!);
lib/registries/addon/branded/new/controller.ts:51:            await newRegistration.save();
lib/registries/addon/branded/new/controller.ts:63:            const schemas = await this.model.schemas;
lib/registries/addon/branded/new/controller.ts:75:        await timeout(500); // debounce
lib/registries/addon/branded/new/controller.ts:77:            const nodes = await this.currentUser.user!.queryHasMany('nodes',
lib/registries/addon/components/comment-card/component.ts:62:        const userReports = await this.comment.reports;
lib/registries/addon/components/comment-card/component.ts:75:            await userReport.destroyRecord();
lib/registries/addon/components/comment-card/component.ts:92:            const replies = await this.comment.replies;
lib/registries/addon/components/comment-card/component.ts:97:            const moreReplies = await this.comment.queryHasMany('replies', {
lib/registries/addon/components/make-decision-dropdown/component.ts:138:                await newAction.save();
lib/registries/addon/components/registries-metadata/component.ts:36:        this.provider = await this.registration?.provider;
lib/registries/addon/components/registries-registration-type-facet/component.ts:43:                this.provider = await this.store.findRecord('registration-provider', defaultProviderId);
lib/registries/addon/components/registries-registration-type-facet/component.ts:45:            const metaschemas = await this.provider.queryHasMany('schemas', {
lib/registries/addon/components/registries-states/is-embargoed/component.ts:31:            await this.registration.save();
lib/registries/addon/components/registries-states/is-public/component.ts:56:                await this.changeset.save({});
lib/registries/addon/discover/controller.ts:206:        const results = await this.shareSearch.registrations(new SearchOptions({
lib/registries/addon/discover/controller.ts:216:        const osfProviders = await this.store.query('registration-provider', {
lib/registries/addon/discover/controller.ts:297:        await timeout(250);
lib/registries/addon/discover/controller.ts:299:        const results: SearchResults<ShareRegistration> = await this.shareSearch.registrations(options);
lib/registries/addon/drafts/draft/-components/managers/license-picker-manager/component.ts:43:        const provider = await this.draftManager.draftRegistration.provider;
lib/registries/addon/drafts/draft/-components/managers/license-picker-manager/component.ts:49:        const providerLicenses = await provider
lib/registries/addon/drafts/draft/-components/metadata-institutions-manager/component.ts:38:            await this.node.updateM2MRelationship('affiliatedInstitutions', this.currentAffiliatedList);
lib/registries/addon/drafts/draft/-components/metadata-institutions-manager/component.ts:39:            await this.node.reload();
lib/registries/addon/drafts/draft/-components/metadata-institutions-manager/component.ts:56:                const affiliatedList = await this.node.queryHasMany(
lib/registries/addon/drafts/draft/-components/register/component.ts:55:                await this.node.loadRelatedCount('children');
lib/registries/addon/drafts/draft/draft-registration-manager.ts:109:                await this.draftRegistration.save();
lib/registries/addon/drafts/draft/draft-registration-manager.ts:120:        await timeout(3000); // debounce
lib/registries/addon/drafts/draft/draft-registration-manager.ts:122:        await taskFor(this.saveRegistrationResponses).perform(currentPageManager);
lib/registries/addon/drafts/draft/draft-registration-manager.ts:135:                await this.draftRegistration.save();
lib/registries/addon/drafts/draft/draft-registration-manager.ts:147:        const { draftRegistration, provider } = await this.draftRegistrationTask;
lib/registries/addon/drafts/draft/draft-registration-manager.ts:154:            const node = await this.draftRegistration.branchedFrom;
lib/registries/addon/drafts/draft/draft-registration-manager.ts:160:        const registrationSchema = await this.draftRegistration.registrationSchema;
lib/registries/addon/drafts/draft/draft-registration-manager.ts:161:        const schemaBlocks = await registrationSchema.loadAll('schemaBlocks');
lib/registries/addon/drafts/draft/draft-registration-manager.ts:182:        const { draftRegistration } = await this.draftRegistrationTask;
lib/registries/addon/drafts/draft/draft-registration-manager.ts:194:        await timeout(3000); // debounce
lib/registries/addon/drafts/draft/draft-registration-manager.ts:195:        await taskFor(this.updateDraftRegistrationAndSave).perform();
lib/registries/addon/drafts/draft/draft-registration-manager.ts:203:            await this.draftRegistration.save();
lib/registries/addon/drafts/draft/draft-registration-manager.ts:215:            await this.draftRegistration.destroyRecord();
lib/registries/addon/drafts/draft/draft-registration-manager.ts:230:            await taskFor(this.updateDraftRegistrationAndSave).perform();
lib/registries/addon/drafts/draft/draft-registration-manager.ts:231:            await taskFor(this.saveAllVisitedPages).perform();
lib/registries/addon/drafts/draft/route.ts:37:            const draftRegistration: DraftRegistration = await this.store.findRecord(
lib/registries/addon/drafts/draft/route.ts:48:                [SubjectModel[], ProviderModel] = await Promise.all([
lib/registries/addon/edit-revision/-components/submit-and-decide/component.ts:59:            await schemaResponseAction.save();
lib/registries/addon/edit-revision/-components/submit-and-decide/component.ts:60:            await this.revisionManager.revision.reload();
lib/registries/addon/edit-revision/revision-manager.ts:136:                await this.revision.save();
lib/registries/addon/edit-revision/revision-manager.ts:147:        await timeout(3000); // debounce
lib/registries/addon/edit-revision/revision-manager.ts:149:        await taskFor(this.saveResponses).perform(currentPageManager);
lib/registries/addon/edit-revision/revision-manager.ts:162:                await this.revision.save();
lib/registries/addon/edit-revision/revision-manager.ts:174:        const { revision, provider, registration } = await this.loadModelsTask;
lib/registries/addon/edit-revision/revision-manager.ts:178:        const registrationSchema = await this.revision.registrationSchema;
lib/registries/addon/edit-revision/revision-manager.ts:179:        const schemaBlocks = await registrationSchema.loadAll('schemaBlocks');
lib/registries/addon/edit-revision/revision-manager.ts:200:        const { revision } = await this.loadModelsTask;
lib/registries/addon/edit-revision/revision-manager.ts:212:        await timeout(3000); // debounce
lib/registries/addon/edit-revision/revision-manager.ts:213:        await taskFor(this.updateRevisionAndSave).perform();
lib/registries/addon/edit-revision/revision-manager.ts:222:            await this.revision.save();
lib/registries/addon/edit-revision/revision-manager.ts:234:            await this.revision.destroyRecord();
lib/registries/addon/edit-revision/revision-manager.ts:249:            await taskFor(this.updateRevisionAndSave).perform();
lib/registries/addon/edit-revision/revision-manager.ts:250:            await taskFor(this.saveAllVisitedPages).perform();
lib/registries/addon/edit-revision/route.ts:34:            const revision = await this.store.findRecord('schema-response', revisionId);
lib/registries/addon/edit-revision/route.ts:35:            const registration = await revision.registration;
lib/registries/addon/edit-revision/route.ts:36:            const provider = await registration.provider;
lib/registries/addon/index/controller.ts:25:        const recentRegistrations = await this.store.query('registration', {
lib/registries/addon/overview/-components/diff-manager/component.ts:50:                baseRevision = await this.store.findRecord('schema-response', baseRevisionId);
lib/registries/addon/overview/-components/diff-manager/component.ts:54:            this.baseRevision = await registration.originalResponse;
lib/registries/addon/overview/-components/diff-manager/component.ts:59:                headRevision = await this.store.findRecord('schema-response', headRevisionId);
lib/registries/addon/overview/-components/diff-manager/component.ts:63:            this.headRevision = await registration.latestResponse;
lib/registries/addon/overview/-components/diff-manager/component.ts:65:                this.headRevision = await registration.originalResponse;
lib/registries/addon/overview/-components/overview-header/component.ts:50:            this.currentModerator = await this.store.findRecord('moderator', this.currentUser.currentUserId!,
lib/registries/addon/overview/-components/overview-topbar/component.ts:49:        const collections = await this.store.findAll('collection', {
lib/registries/addon/overview/-components/overview-topbar/component.ts:59:        const bookmarkedRegs = await this.bookmarksCollection.linkedRegistrations;
lib/registries/addon/overview/-components/overview-topbar/component.ts:73:            await this.registration.makeFork();
lib/registries/addon/overview/-components/overview-topbar/component.ts:100:                await this.bookmarksCollection.deleteM2MRelationship(
lib/registries/addon/overview/-components/overview-topbar/component.ts:106:                await this.bookmarksCollection.createM2MRelationship(
lib/registries/addon/overview/files/provider/route.ts:14:        const registration = await overview.taskInstance;
lib/registries/addon/overview/files/provider/route.ts:15:        const fileProviders = await registration!.files;
lib/registries/addon/overview/route.ts:36:        const registration = await model.taskInstance;
lib/registries/addon/overview/route.ts:45:            ] = await all([
lib/registries/addon/services/search.ts:175:            response = await $.ajax({
node-tests/fixtures/blueprints/component-test/default.ts:13:        await render(hbs`{{x-foo}}`);
node-tests/fixtures/blueprints/component-test/default.ts:18:        await render(hbs`
tests/acceptance/dashboard-test.ts:41:        await visit('/dashboard');
tests/acceptance/dashboard-test.ts:49:        await percySnapshot(assert);
tests/acceptance/dashboard-test.ts:56:        await visit('/dashboard');
tests/acceptance/dashboard-test.ts:62:        await untrackedClick('.carousel-control.right');
tests/acceptance/dashboard-test.ts:83:        await visit('/dashboard');
tests/acceptance/dashboard-test.ts:103:        await visit('/dashboard');
tests/acceptance/dashboard-test.ts:106:        await percySnapshot(assert);
tests/acceptance/dashboard-test.ts:113:        await visit('/dashboard');
tests/acceptance/dashboard-test.ts:137:        await visit('/dashboard');
tests/acceptance/dashboard-test.ts:143:        await click('[data-analytics-name="load_nodes"]');
tests/acceptance/dashboard-test.ts:147:        await click('[data-analytics-name="load_nodes"]');
tests/acceptance/dashboard-test.ts:153:        await percySnapshot(assert);
tests/acceptance/dashboard-test.ts:194:        await visit('/dashboard');
tests/acceptance/dashboard-test.ts:204:        await click('[data-test-ascending-sort="last_logged"]');
tests/acceptance/dashboard-test.ts:212:        await click('[data-test-descending-sort="last_logged"]');
tests/acceptance/dashboard-test.ts:220:        await click('[data-test-ascending-sort="title"]');
tests/acceptance/dashboard-test.ts:228:        await click('[data-test-descending-sort="title"]');
tests/acceptance/dashboard-test.ts:274:        await visit('/dashboard');
tests/acceptance/dashboard-test.ts:283:        await fillIn('[data-test-quick-search-input]', 'z');
tests/acceptance/dashboard-test.ts:289:        await fillIn('[data-test-quick-search-input]', 'az');
tests/acceptance/dashboard-test.ts:299:        await visit('/dashboard');
tests/acceptance/dashboard-test.ts:303:        await percySnapshot(assert);
tests/acceptance/dashboard-test.ts:305:        await click('[data-analytics-name="create_new_project"]');
tests/acceptance/dashboard-test.ts:308:        await fillIn('[data-test-new-project-title]', title);
tests/acceptance/dashboard-test.ts:309:        await click('[data-test-create-project-submit]');
tests/acceptance/dashboard-test.ts:310:        await click('[data-test-stay-here]');
tests/acceptance/dashboard-test.ts:322:        await visit('/dashboard');
tests/acceptance/dashboard-test.ts:324:        await click('[data-analytics-name="create_new_project"]');
tests/acceptance/dashboard-test.ts:330:        await click('[data-test-institution-button-row]:nth-child(1) button');
tests/acceptance/dashboard-test.ts:335:        await percySnapshot(assert);
tests/acceptance/dashboard-test.ts:337:        await click('[data-analytics-name="Remove all institutions"]');
tests/acceptance/dashboard-test.ts:343:        await click('[data-analytics-name="Select all institutions"]');
tests/acceptance/dashboard-test.ts:354:        await visit('/dashboard');
tests/acceptance/dashboard-test.ts:357:        await click('[data-analytics-name="create_new_project"]');
tests/acceptance/dashboard-test.ts:358:        await fillIn('[data-test-new-project-title]', title);
tests/acceptance/dashboard-test.ts:359:        await click('[data-analytics-name="cancel"]');
tests/acceptance/dashboard-test.ts:370:        await visit('/dashboard');
tests/acceptance/dashboard-test.ts:373:        await click('[data-analytics-name="create_new_project"]');
tests/acceptance/dashboard-test.ts:374:        await fillIn('[data-test-new-project-title]', title);
tests/acceptance/dashboard-test.ts:375:        await untrackedClick('button[class*="close"]');
tests/acceptance/dashboard-test.ts:425:        await visit('/dashboard');
tests/acceptance/dashboard-test.ts:428:        await click('[data-analytics-name="create_new_project"]');
tests/acceptance/dashboard-test.ts:435:        await fillIn('[data-test-new-project-title]', title);
tests/acceptance/dashboard-test.ts:436:        await untrackedClick('[data-test-select-storage-location] div[class~="ember-power-select-trigger"]');
tests/acceptance/dashboard-test.ts:437:        await selectChoose('[data-test-select-storage-location]', location);
tests/acceptance/dashboard-test.ts:443:        await click('[data-analytics-name="Toggle more"]');
tests/acceptance/dashboard-test.ts:446:        await fillIn('[data-test-project-description-input]', description);
tests/acceptance/dashboard-test.ts:447:        await untrackedClick('[data-test-select-template] div[class~="ember-power-select-trigger"]');
tests/acceptance/dashboard-test.ts:448:        await selectSearch('[data-test-select-template]', templatedFrom);
tests/acceptance/dashboard-test.ts:449:        await percySnapshot(assert);
tests/acceptance/dashboard-test.ts:450:        await selectChoose('[data-test-select-template]', templatedFrom);
tests/acceptance/dashboard-test.ts:451:        await percySnapshot('Acceptance | dashboard | create project modal more toggle | select template');
tests/acceptance/dashboard-test.ts:455:        await click('[data-test-create-project-submit]');
tests/acceptance/dashboard-test.ts:456:        await click('[data-test-stay-here]');
tests/acceptance/guid-file/registration-file-detail-test.ts:32:        await visit(`/--file/${this.file.id}`);
tests/acceptance/guid-file/registration-file-detail-test.ts:43:        await percySnapshot(assert);
tests/acceptance/guid-file/registration-file-detail-test.ts:48:        await visit(`/--file/${this.file.id}`);
tests/acceptance/guid-file/registration-file-detail-test.ts:59:        await percySnapshot('Acceptance | guid file | registration files | mobile view | file renderer');
tests/acceptance/guid-file/registration-file-detail-test.ts:61:        await click('[data-test-versions-button]');
tests/acceptance/guid-file/registration-file-detail-test.ts:64:        await percySnapshot('Acceptance | guid file | registration files | mobile view | revisions');
tests/acceptance/guid-file/registration-file-detail-test.ts:68:        await click('[data-test-file-renderer-button]');
tests/acceptance/guid-file/registration-file-detail-test.ts:74:        await visit(`/--file/${this.file.id}`);
tests/acceptance/guid-file/registration-file-detail-test.ts:83:        await click('[data-test-versions-button]');
tests/acceptance/guid-file/registration-file-detail-test.ts:88:        await click('[data-test-file-version-toggle-button]');
tests/acceptance/guid-file/registration-file-detail-test.ts:90:        await click('[data-test-file-version-date]');
tests/acceptance/guid-file/registration-file-detail-test.ts:93:        await percySnapshot(assert);
tests/acceptance/guid-file/registration-file-detail-test.ts:95:        await click('[data-test-versions-button]');
tests/acceptance/guid-node/files-test.ts:36:        await visit(`/${this.node.id}/files`);
tests/acceptance/guid-node/files-test.ts:49:        await visit(`/${this.node.id}/files`);
tests/acceptance/guid-node/files-test.ts:60:        const node = await this.owner.lookup('service:store').findRecord('node', this.node.id);
tests/acceptance/guid-node/files-test.ts:62:        await visit(`/${this.node.id}/files`);
tests/acceptance/guid-node/files-test.ts:74:        await visit(`/${this.node.id}/files`);
tests/acceptance/guid-node/files-test.ts:89:        await click(`[data-test-file-list-item="${this.file.id}"] [data-test-file-download-share-trigger]`);
tests/acceptance/guid-node/files-test.ts:90:        await percySnapshot(assert);
tests/acceptance/guid-node/files-test.ts:95:        await click(`[data-test-file-list-item="${this.file.id}"] [data-test-file-download-share-trigger]`);
tests/acceptance/guid-node/files-test.ts:98:        await click(`[data-test-select-file="${this.file.id}"]`);
tests/acceptance/guid-node/files-test.ts:103:        await click('[data-test-bulk-copy-trigger]');
tests/acceptance/guid-node/files-test.ts:113:        await visit(`/${this.node.id}/files`);
tests/acceptance/guid-node/files-test.ts:114:        await percySnapshot(assert);
tests/acceptance/guid-node/files-test.ts:122:        await visit(`/${this.node.id}/files`);
tests/acceptance/guid-node/files-test.ts:123:        await click(`[data-test-select-file="${this.file.id}"]`);
tests/acceptance/guid-node/files-test.ts:124:        await percySnapshot(assert);
tests/acceptance/guid-node/files-test.ts:129:        await click('[data-test-bulk-move-trigger]');
tests/acceptance/guid-node/files-test.ts:140:        await visit(`/${this.node.id}/files`);
tests/acceptance/guid-node/forks-test.ts:24:        await visit(url);
tests/acceptance/guid-node/forks-test.ts:27:        await percySnapshot(assert);
tests/acceptance/guid-node/forks-test.ts:48:        await visit(url);
tests/acceptance/guid-node/forks-test.ts:60:        await visit(url);
tests/acceptance/guid-node/forks-test.ts:84:        await visit(url);
tests/acceptance/guid-node/forks-test.ts:111:        await visit(url);
tests/acceptance/guid-node/forks-test.ts:116:        await percySnapshot(assert);
tests/acceptance/guid-node/forks-test.ts:118:        await click('[data-analytics-name="Pagination next"]');
tests/acceptance/guid-node/forks-test.ts:142:        await visit(url);
tests/acceptance/guid-node/forks-test.ts:145:        await click('[data-test-new-fork-button]');
tests/acceptance/guid-node/forks-test.ts:146:        await percySnapshot(assert);
tests/acceptance/guid-node/forks-test.ts:150:        await click('[data-test-cancel-create-fork]');
tests/acceptance/guid-node/forks-test.ts:153:        await click('[data-test-new-fork-button]');
tests/acceptance/guid-node/forks-test.ts:155:        await click('[data-test-confirm-create-fork]');
tests/acceptance/guid-node/registrations-test.ts:33:        await visit(url);
tests/acceptance/guid-node/registrations-test.ts:37:        await percySnapshot(assert);
tests/acceptance/guid-node/registrations-test.ts:61:        await visit(url);
tests/acceptance/guid-node/registrations-test.ts:84:        await visit(url);
tests/acceptance/guid-node/registrations-test.ts:98:        await untrackedClick('[data-test-drafts-tab]');
tests/acceptance/guid-node/registrations-test.ts:128:        await visit(url);
tests/acceptance/guid-node/registrations-test.ts:142:        await untrackedClick('[data-test-drafts-tab]');
tests/acceptance/guid-node/registrations-test.ts:168:        await visit(url);
tests/acceptance/guid-node/registrations-test.ts:180:        await untrackedClick('[data-test-drafts-tab]');
tests/acceptance/guid-node/registrations-test.ts:218:        await visit(url);
tests/acceptance/guid-node/registrations-test.ts:230:        await untrackedClick('[data-test-drafts-tab]');
tests/acceptance/guid-node/registrations-test.ts:258:        await visit(url);
tests/acceptance/guid-node/registrations-test.ts:267:        await percySnapshot(assert);
tests/acceptance/guid-node/registrations-test.ts:269:        await click('[data-analytics-name="Pagination next"]');
tests/acceptance/guid-node/registrations-test.ts:275:        await untrackedClick('[data-test-drafts-tab]');
tests/acceptance/guid-node/registrations-test.ts:317:        await visit(url);
tests/acceptance/guid-node/registrations-test.ts:323:        await untrackedClick('[data-test-drafts-tab]');
tests/acceptance/guid-node/registrations-test.ts:352:        await visit(url);
tests/acceptance/guid-node/registrations-test.ts:358:        await untrackedClick('[data-test-drafts-tab]');
tests/acceptance/guid-node/registrations-test.ts:368:        await click('[data-analytics-name="Pagination next"]');
tests/acceptance/guid-node/registrations-test.ts:371:        await percySnapshot(assert);
tests/acceptance/guid-node/registrations-test.ts:389:        await visit(url);
tests/acceptance/guid-node/registrations-test.ts:393:        await click('[data-test-new-registration-button]');
tests/acceptance/guid-node/registrations-test.ts:394:        await percySnapshot(assert);
tests/acceptance/guid-node/registrations-test.ts:408:        await click('[data-test-new-registration-modal-cancel-button]');
tests/acceptance/guid-node/registrations-test.ts:427:        await visit(url);
tests/acceptance/guid-node/registrations-test.ts:433:            await click('[data-test-new-registration-button]');
tests/acceptance/guid-node/registrations-test.ts:434:            await untrackedClick('[data-test-new-registration-modal-schema="Prereg Challenge"] input');
tests/acceptance/guid-node/registrations-test.ts:435:            await click('[data-test-new-registration-modal-create-draft-button]');
tests/acceptance/guid-node/registrations-test.ts:438:            await untrackedClick('[data-test-prereg-challenge-modal-consent-checkbox]');
tests/acceptance/guid-node/registrations-test.ts:440:            await click('[data-test-prereg-challenge-modal-cancel-button]');
tests/acceptance/guid-registration/forks-test.ts:25:        await visit(url);
tests/acceptance/guid-registration/forks-test.ts:28:        await percySnapshot(assert);
tests/acceptance/guid-registration/forks-test.ts:49:        await visit(url);
tests/acceptance/guid-registration/forks-test.ts:63:        await visit(url);
tests/acceptance/guid-registration/forks-test.ts:87:        await visit(url);
tests/acceptance/guid-registration/forks-test.ts:114:        await visit(url);
tests/acceptance/guid-registration/forks-test.ts:119:        await percySnapshot(assert);
tests/acceptance/guid-registration/forks-test.ts:121:        await click('[data-analytics-name="Pagination next"]');
tests/acceptance/guid-registration/forks-test.ts:146:        await visit(url);
tests/acceptance/guid-registration/forks-test.ts:149:        await click('[data-test-new-fork-button]');
tests/acceptance/guid-registration/forks-test.ts:150:        await percySnapshot(assert);
tests/acceptance/guid-registration/forks-test.ts:154:        await click('[data-test-cancel-create-fork]');
tests/acceptance/guid-registration/forks-test.ts:157:        await click('[data-test-new-fork-button]');
tests/acceptance/guid-registration/forks-test.ts:159:        await click('[data-test-confirm-create-fork]');
tests/acceptance/institutions-test.ts:15:        await visit('/institutions');
tests/acceptance/institutions-test.ts:18:        await percySnapshot(assert);
tests/acceptance/institutions-test.ts:21:        await click('[data-test-more-institutions]');
tests/acceptance/institutions-test.ts:29:        await visit('/institutions');
tests/acceptance/institutions-test.ts:40:        await visit('/institutions');
tests/acceptance/institutions-test.ts:42:        await fillIn('[data-test-institutions-filter]', 'a');
tests/acceptance/institutions-test.ts:46:        await fillIn('[data-test-institutions-filter]', 'az');
tests/acceptance/institutions-test.ts:48:        await fillIn('[data-test-institutions-filter]', 'aa');
tests/acceptance/institutions-test.ts:50:        await fillIn('[data-test-institutions-filter]', 'zz');
tests/acceptance/institutions-test.ts:52:        await fillIn('[data-test-institutions-filter]', 'z');
tests/acceptance/institutions-test.ts:62:        await visit('/institutions');
tests/acceptance/institutions-test.ts:69:        await click('[data-test-descending-sort="title"]');
tests/acceptance/institutions-test.ts:73:        await click('[data-test-ascending-sort="title"]');
tests/acceptance/institutions/dashboard-test.ts:18:        await visit('/institutions/has-users/dashboard');
tests/acceptance/institutions/dashboard-test.ts:24:        await percySnapshot(`${moduleName} - default`);
tests/acceptance/institutions/dashboard-test.ts:26:        await click('[data-test-next-page-button]');
tests/acceptance/institutions/dashboard-test.ts:27:        await percySnapshot(`${moduleName} - next page`);
tests/acceptance/logged-out-homepage-test.ts:19:        await visit('/');
tests/acceptance/logged-out-homepage-test.ts:48:        await percySnapshot('Acceptance | logged-out home page test | carousel exists');
tests/acceptance/logged-out-homepage-test.ts:50:        await click('[data-test-carousel-button-next]');
tests/acceptance/logged-out-homepage-test.ts:52:        await percySnapshot('Acceptance | logged-out home page test | next carousel');
tests/acceptance/logged-out-homepage-test.ts:55:        await click('[data-test-carousel-button-next]');
tests/acceptance/logged-out-homepage-test.ts:74:        await a11yAudit();
tests/acceptance/logged-out-homepage-test.ts:75:        await percySnapshot('Acceptance | logged-out home page test | footer exists');
tests/acceptance/logged-out-homepage-test.ts:79:        await visit('/');
tests/acceptance/logged-out-homepage-test.ts:84:        await settled();
tests/acceptance/logged-out-homepage-test.ts:89:        await a11yAudit();
tests/acceptance/logged-out-homepage-test.ts:90:        await percySnapshot(assert);
tests/acceptance/logged-out-homepage-test.ts:94:        await visit('/');
tests/acceptance/logged-out-homepage-test.ts:96:        await click('[data-test-get-started-button]');
tests/acceptance/meetings/detail-test.ts:24:        await visit('/meetings/testmeeting');
tests/acceptance/meetings/detail-test.ts:26:        await percySnapshot(`${moduleName} - default`);
tests/acceptance/meetings/detail-test.ts:27:        await click('[data-test-meeting-toggle-panel-button]');
tests/acceptance/meetings/detail-test.ts:28:        await click('[data-test-next-page-button]');
tests/acceptance/meetings/detail-test.ts:29:        await percySnapshot(`${moduleName} - panel open & next page`);
tests/acceptance/meetings/index-test.ts:18:        await visit('/meetings');
tests/acceptance/meetings/index-test.ts:20:        await percySnapshot(`${moduleName} - default`);
tests/acceptance/meetings/index-test.ts:21:        await untrackedClick('[data-test-register-button]');
tests/acceptance/meetings/index-test.ts:22:        await untrackedClick('[data-test-upload-button]');
tests/acceptance/meetings/index-test.ts:23:        await click('[data-test-next-page-button]');
tests/acceptance/meetings/index-test.ts:24:        await percySnapshot(`${moduleName} - panels open & next page`);
tests/acceptance/register-test.ts:13:        await visit('/register');
tests/acceptance/register-test.ts:20:        await percySnapshot(assert);
tests/acceptance/register-test.ts:24:        await visit('/register?next=foo');
tests/acceptance/register-test.ts:36:            await visit('/register?campaign=osf-registries');
tests/acceptance/register-test.ts:47:            await percySnapshot(assert);
tests/acceptance/register-test.ts:51:            await visit('/register?campaign=osf-preprints');
tests/acceptance/register-test.ts:62:            await percySnapshot(assert);
tests/acceptance/register-test.ts:66:            await visit('/register?campaign=thesiscommons-preprints');
tests/acceptance/register-test.ts:76:            await percySnapshot(assert);
tests/acceptance/register-test.ts:80:            await visit('/register?campaign=preprintrxiv-preprints');
tests/acceptance/register-test.ts:90:            await percySnapshot(assert);
tests/acceptance/register-test.ts:94:            await visit('/register?campaign=paperxiv-preprints');
tests/acceptance/register-test.ts:104:            await percySnapshot(assert);
tests/acceptance/register-test.ts:108:            await visit('/register?campaign=thesisrxiv-preprints');
tests/acceptance/register-test.ts:118:            await percySnapshot(assert);
tests/acceptance/register-test.ts:122:            await visit('/register?campaign=workrxiv-preprints');
tests/acceptance/register-test.ts:132:            await percySnapshot(assert);
tests/acceptance/register-test.ts:136:            await visit('/register?campaign=docrxiv-preprints');
tests/acceptance/register-test.ts:146:            await percySnapshot(assert);
tests/acceptance/resolve-guid-test.ts:53:            await visit(`/${file.id}`);
tests/acceptance/resolve-guid-test.ts:60:            await visit(`/${file.id}/metadata`);
tests/acceptance/resolve-guid-test.ts:69:            const analyticsEngine = await loadEngine('analytics-page', 'guid-node.analytics');
tests/acceptance/resolve-guid-test.ts:76:            await visit(`/${node.id}`);
tests/acceptance/resolve-guid-test.ts:84:            await visit(`/${node.id}/forks`);
tests/acceptance/resolve-guid-test.ts:92:            await visit(`/${node.id}/analytics`);
tests/acceptance/resolve-guid-test.ts:107:            await visit(`/${node.id}/registrations`);
tests/acceptance/resolve-guid-test.ts:115:            await visit(`/${node.id}/metadata`);
tests/acceptance/resolve-guid-test.ts:123:            const analyticsEngine = await loadEngine('analytics-page', 'guid-registration.analytics');
tests/acceptance/resolve-guid-test.ts:132:                await visit(`/${reg.id}`);
tests/acceptance/resolve-guid-test.ts:141:                await visit(`/${reg.id}/forks`);
tests/acceptance/resolve-guid-test.ts:152:                await visit(url);
tests/acceptance/resolve-guid-test.ts:162:                await visit(`/${reg.id}`);
tests/acceptance/resolve-guid-test.ts:170:                await visit(`/${reg.id}/forks`);
tests/acceptance/resolve-guid-test.ts:180:                await visit(url);
tests/acceptance/resolve-guid-test.ts:188:                await visit(`/${reg.id}/metadata`);
tests/acceptance/resolve-guid-test.ts:205:                await visit(testCase.url);
tests/acceptance/resolve-guid-test.ts:211:            await settled();
tests/acceptance/settings/account/change-password-test.ts:25:        await visit('/settings/account');
tests/acceptance/settings/account/change-password-test.ts:29:        await fillIn('[data-test-current-password] input', currentPassword);
tests/acceptance/settings/account/change-password-test.ts:30:        await fillIn('[data-test-new-password] input', newPassword);
tests/acceptance/settings/account/change-password-test.ts:31:        await fillIn('[data-test-confirm-password] input', newPassword);
tests/acceptance/settings/account/change-password-test.ts:33:        await click('[data-test-update-password-button]');
tests/acceptance/settings/account/change-password-test.ts:42:        await visit('/settings/account');
tests/acceptance/settings/account/change-password-test.ts:47:        await fillIn('[data-test-current-password] input', currentPassword);
tests/acceptance/settings/account/change-password-test.ts:48:        await fillIn('[data-test-new-password] input', newPassword);
tests/acceptance/settings/account/change-password-test.ts:49:        await fillIn('[data-test-confirm-password] input', newPassword);
tests/acceptance/settings/account/change-password-test.ts:51:        await click('[data-test-update-password-button]');
tests/acceptance/settings/account/connected-emails-test.ts:17:        await visit('/settings/account');
tests/acceptance/settings/account/connected-emails-test.ts:18:        await percySnapshot(assert);
tests/acceptance/settings/account/connected-emails-test.ts:27:        await visit('/settings/account');
tests/acceptance/settings/account/connected-emails-test.ts:28:        await percySnapshot(assert);
tests/acceptance/settings/account/connected-emails-test.ts:37:        await visit('/settings/account');
tests/acceptance/settings/account/connected-emails-test.ts:38:        await percySnapshot(assert);
tests/acceptance/settings/account/connected-emails-test.ts:49:        await visit('/settings/account');
tests/acceptance/settings/account/connected-emails-test.ts:53:        await fillIn('[data-test-add-email] input', emailAddress);
tests/acceptance/settings/account/connected-emails-test.ts:54:        await click('[data-test-add-email-button]');
tests/acceptance/settings/account/connected-emails-test.ts:55:        await percySnapshot(assert);
tests/acceptance/settings/account/connected-emails-test.ts:66:        await visit('/settings/account');
tests/acceptance/settings/account/connected-emails-test.ts:70:        await click(`[data-test-alternate-email-item='${emailAddress}']
tests/acceptance/settings/account/connected-emails-test.ts:73:        await percySnapshot(assert);
tests/acceptance/settings/account/connected-emails-test.ts:74:        await click('[data-test-confirm-delete]');
tests/acceptance/settings/account/connected-emails-test.ts:85:        await visit('/settings/account');
tests/acceptance/settings/account/connected-emails-test.ts:88:        await click('[data-test-make-primary]');
tests/acceptance/settings/account/connected-emails-test.ts:89:        await percySnapshot(assert);
tests/acceptance/settings/account/connected-emails-test.ts:109:        await visit('/settings/account');
tests/acceptance/settings/account/connected-emails-test.ts:111:        await click(`[data-test-unconfirmed-email-item='${emailAddress}']
tests/acceptance/settings/account/connected-emails-test.ts:114:        await percySnapshot(assert);
tests/acceptance/settings/account/connected-emails-test.ts:115:        await click('[data-test-resend-confirmation]');
tests/acceptance/settings/account/deactivation-test.ts:36:        await visit('/settings/account');
tests/acceptance/settings/account/deactivation-test.ts:38:        await click('[data-analytics-name="Deactivation request"]');
tests/acceptance/settings/account/deactivation-test.ts:43:        await click('[data-test-deactivation-cancel]');
tests/acceptance/settings/account/deactivation-test.ts:45:        await click('[data-analytics-name="Deactivation request"]');
tests/acceptance/settings/account/deactivation-test.ts:47:        await click('[data-test-confirm-deactivation-submit]');
tests/acceptance/settings/account/deactivation-test.ts:49:        await click('[data-analytics-name="Undo deactivation request"]');
tests/acceptance/settings/account/deactivation-test.ts:52:        await click('[data-test-undo-warning-cancel]');
tests/acceptance/settings/account/deactivation-test.ts:55:        await click('[data-analytics-name="Undo deactivation request"]');
tests/acceptance/settings/account/deactivation-test.ts:57:        await click('[data-test-undo-warning-confirm]');
tests/acceptance/settings/account/deactivation-test.ts:68:        await visit('/settings/account');
tests/acceptance/settings/account/default-region-test.ts:23:        await visit('/settings/account');
tests/acceptance/settings/account/default-region-test.ts:29:        await selectChoose('[data-test-region-selector]', 'Australia - Sydney');
tests/acceptance/settings/account/default-region-test.ts:32:        await click('[data-test-update-region-button]');
tests/acceptance/settings/account/security-test.ts:92:        await visit('/settings/account/');
tests/acceptance/settings/account/security-test.ts:107:        await visit('/settings/account');
tests/acceptance/settings/account/security-test.ts:109:        await percySnapshot(assert);
tests/acceptance/settings/account/security-test.ts:123:        await visit('/settings/account');
tests/acceptance/settings/account/security-test.ts:125:        await percySnapshot(assert);
tests/acceptance/settings/account/security-test.ts:126:        await click('[data-test-two-factor-verify-cancel-button]');
tests/acceptance/settings/account/security-test.ts:140:        await visit('/settings/account');
tests/acceptance/settings/account/security-test.ts:142:        await click('[data-test-verify-button]');
tests/acceptance/settings/account/security-test.ts:147:        await fillIn('[data-test-verification-code-field] input', 'a');
tests/acceptance/settings/account/security-test.ts:148:        await click('[data-test-verify-button]');
tests/acceptance/settings/account/security-test.ts:158:            await fillIn('[data-test-verification-code-field] input', '111');
tests/acceptance/settings/account/security-test.ts:162:            await click('[data-test-verify-button]');
tests/acceptance/settings/account/security-test.ts:166:        await fillIn('[data-test-verification-code-field] input', '123456');
tests/acceptance/settings/account/security-test.ts:167:        await click('[data-test-verify-button]');
tests/acceptance/settings/account/security-test.ts:169:        await percySnapshot(assert);
tests/acceptance/settings/account/security-test.ts:183:        await visit('/settings/account');
tests/acceptance/settings/account/security-test.ts:187:        await click('[data-test-two-factor-enable-button]');
tests/acceptance/settings/account/security-test.ts:188:        await percySnapshot('Acceptance | settings/account | security | Enable warning dialog');
tests/acceptance/settings/account/security-test.ts:189:        await click('[data-test-enable-warning-confirm]');
tests/acceptance/settings/account/security-test.ts:191:        await fillIn('[data-test-verification-code-field] input', '123456');
tests/acceptance/settings/account/security-test.ts:192:        await click('[data-test-verify-button]');
tests/acceptance/settings/account/security-test.ts:194:        await click('[data-test-two-factor-disable-button]');
tests/acceptance/settings/account/security-test.ts:195:        await percySnapshot('Acceptance | settings/account | security | Disable warning dialog');
tests/acceptance/settings/account/security-test.ts:196:        await click('[data-test-disable-warning-confirm]');
tests/acceptance/settings/developer-apps-page-test.ts:14:        await visit('/settings/applications');
tests/acceptance/settings/developer-apps-page-test.ts:21:        await visit('/settings/applications');
tests/acceptance/settings/developer-apps-page-test.ts:29:        await visit('/settings/applications');
tests/acceptance/settings/developer-apps-page-test.ts:38:        await visit('/settings/applications');
tests/acceptance/settings/developer-apps-page-test.ts:41:        await percySnapshot(assert);
tests/acceptance/settings/developer-apps-page-test.ts:48:        await visit('/settings/applications');
tests/acceptance/settings/developer-apps-page-test.ts:52:        await click('[data-test-create-app-link]');
tests/acceptance/settings/developer-apps-page-test.ts:54:        await fillIn('[data-test-developer-app-name] input', appName);
tests/acceptance/settings/developer-apps-page-test.ts:55:        await fillIn('[data-test-developer-app-homepage] input', 'http://osf.io/');
tests/acceptance/settings/developer-apps-page-test.ts:56:        await fillIn('[data-test-developer-app-callback-url] input', 'https://osf.io/');
tests/acceptance/settings/developer-apps-page-test.ts:57:        await percySnapshot(assert);
tests/acceptance/settings/developer-apps-page-test.ts:58:        await click('[data-test-create-developer-app-button]');
tests/acceptance/settings/developer-apps-page-test.ts:59:        await percySnapshot('Acceptance | settings | developer apps | create app | create');
tests/acceptance/settings/developer-apps-page-test.ts:63:        await visit('/settings/applications');
tests/acceptance/settings/developer-apps-page-test.ts:75:        await visit('/settings/applications');
tests/acceptance/settings/developer-apps-page-test.ts:81:        await click(link);
tests/acceptance/settings/developer-apps-page-test.ts:84:        await waitFor(`${input}:enabled`);
tests/acceptance/settings/developer-apps-page-test.ts:91:        await fillIn(input, newName);
tests/acceptance/settings/developer-apps-page-test.ts:92:        await percySnapshot(assert);
tests/acceptance/settings/developer-apps-page-test.ts:93:        await click('[data-test-save-developer-app-button]');
tests/acceptance/settings/developer-apps-page-test.ts:107:        await visit('/settings/applications');
tests/acceptance/settings/developer-apps-page-test.ts:112:        await click(`${card} [data-test-delete-button]`);
tests/acceptance/settings/developer-apps-page-test.ts:113:        await percySnapshot(assert);
tests/acceptance/settings/developer-apps-page-test.ts:114:        await click('[data-test-confirm-delete]');
tests/acceptance/settings/developer-apps-page-test.ts:126:        await visit(`/settings/applications/${app.id}`);
tests/acceptance/settings/developer-apps-page-test.ts:131:        await click('[data-test-toggle-client-secret]');
tests/acceptance/settings/developer-apps-page-test.ts:136:        await click('[data-analytics-scope="Reset client secret"] [data-test-delete-button]');
tests/acceptance/settings/developer-apps-page-test.ts:137:        await click('[data-test-confirm-delete]');
tests/acceptance/settings/developer-apps-page-test.ts:145:        await click('[data-test-toggle-client-secret]');
tests/acceptance/settings/profile/menuing-test.ts:13:        await visit('/settings/');
tests/acceptance/settings/profile/menuing-test.ts:20:        await visit('/settings/profile');
tests/acceptance/settings/profile/names-test.ts:16:        await visit('/settings/profile/name');
tests/acceptance/settings/profile/names-test.ts:22:        await visit('/settings/profile/name');
tests/acceptance/settings/profile/names-test.ts:49:        await visit('/settings/profile/name');
tests/acceptance/settings/profile/names-test.ts:53:        await percySnapshot(assert);
tests/acceptance/settings/profile/names-test.ts:54:        await fillIn('[data-test-given-name-field] input', '');
tests/acceptance/settings/profile/names-test.ts:58:        await fillIn('[data-test-given-name-field] input', 'Peggy');
tests/acceptance/settings/profile/names-test.ts:62:        await fillIn('[data-test-family-name-field] input', '');
tests/acceptance/settings/profile/names-test.ts:66:        await fillIn('[data-test-given-name-field] input', '');
tests/acceptance/settings/profile/names-test.ts:70:        await click('[data-test-discard-changes]');
tests/acceptance/settings/profile/names-test.ts:78:        await fillIn('[data-test-given-name-field] input', 'Maggs');
tests/acceptance/settings/profile/names-test.ts:83:        await click('[data-test-save]');
tests/acceptance/settings/profile/names-test.ts:112:        await visit('/settings/profile/name');
tests/acceptance/settings/profile/names-test.ts:113:        await fillIn('[data-test-full-name-field] input', oneEightySeven);
tests/acceptance/settings/profile/names-test.ts:114:        await fillIn('[data-test-given-name-field] input', twoFiftySix);
tests/acceptance/settings/profile/names-test.ts:115:        await fillIn('[data-test-middle-names-field] input', twoFiftySix);
tests/acceptance/settings/profile/names-test.ts:116:        await fillIn('[data-test-family-name-field] input', twoFiftySix);
tests/acceptance/settings/profile/names-test.ts:117:        await fillIn('[data-test-suffix-field] input', twoFiftySix);
tests/acceptance/settings/profile/names-test.ts:128:        await click('[data-test-save]');
tests/acceptance/settings/profile/names-test.ts:134:        await percySnapshot(assert);
tests/acceptance/settings/profile/names-test.ts:140:        await fillIn('[data-test-full-name-field] input', fullName);
tests/acceptance/settings/profile/names-test.ts:142:        await fillIn('[data-test-given-name-field] input', givenName);
tests/acceptance/settings/profile/names-test.ts:144:        await fillIn('[data-test-middle-names-field] input', middleNames);
tests/acceptance/settings/profile/names-test.ts:146:        await fillIn('[data-test-family-name-field] input', familyName);
tests/acceptance/settings/profile/names-test.ts:148:        await fillIn('[data-test-suffix-field] input', suffix);
tests/acceptance/settings/profile/names-test.ts:150:        await fillIn('[data-test-full-name-field] input', '');
tests/acceptance/settings/profile/names-test.ts:152:        await fillIn('[data-test-full-name-field] input', '12');
tests/acceptance/settings/profile/names-test.ts:154:        await fillIn('[data-test-full-name-field] input', 'And Peggy!');
tests/acceptance/settings/profile/names-test.ts:156:        await click('[data-test-save]');
tests/acceptance/settings/settings-test.ts:48:        await visit('/settings/account');
tests/acceptance/settings/settings-test.ts:50:        await fillIn('[data-test-verification-code-field] input', 'a');
tests/acceptance/settings/settings-test.ts:51:        await click('[data-analytics-name="Deactivation request"]');
tests/acceptance/settings/settings-test.ts:52:        await click('[data-test-confirm-deactivation-submit]');
tests/acceptance/settings/settings-test.ts:54:        await click('[data-test-verify-button]');
tests/acceptance/settings/tokens-page-test.ts:15:        await visit('/settings/tokens');
tests/acceptance/settings/tokens-page-test.ts:23:        await visit('/settings/tokens');
tests/acceptance/settings/tokens-page-test.ts:32:        await visit('/settings/tokens');
tests/acceptance/settings/tokens-page-test.ts:41:        await visit('/settings/tokens');
tests/acceptance/settings/tokens-page-test.ts:44:        await percySnapshot(assert);
tests/acceptance/settings/tokens-page-test.ts:52:        await visit('/settings/tokens');
tests/acceptance/settings/tokens-page-test.ts:56:        await visit('/settings/tokens/create');
tests/acceptance/settings/tokens-page-test.ts:58:        await fillIn('[data-test-token-name] input', tokenName);
tests/acceptance/settings/tokens-page-test.ts:59:        await untrackedClick('[data-test-scope] input[type=checkbox]');
tests/acceptance/settings/tokens-page-test.ts:60:        await percySnapshot(assert);
tests/acceptance/settings/tokens-page-test.ts:61:        await click('[data-analytics-name="Submit button"]');
tests/acceptance/settings/tokens-page-test.ts:65:        await visit('/settings/tokens');
tests/acceptance/settings/tokens-page-test.ts:77:        await visit('/settings/tokens');
tests/acceptance/settings/tokens-page-test.ts:83:        await click(link);
tests/acceptance/settings/tokens-page-test.ts:86:        await waitFor(`${input}:enabled`);
tests/acceptance/settings/tokens-page-test.ts:92:        await fillIn(input, newName);
tests/acceptance/settings/tokens-page-test.ts:93:        await percySnapshot(assert);
tests/acceptance/settings/tokens-page-test.ts:94:        await click('[data-analytics-name="Save"]');
tests/acceptance/settings/tokens-page-test.ts:107:        await visit('/settings/tokens');
tests/acceptance/settings/tokens-page-test.ts:113:        await click(`${card} [data-test-delete-button]`);
tests/acceptance/settings/tokens-page-test.ts:114:        await percySnapshot(assert);
tests/acceptance/settings/tokens-page-test.ts:115:        await click('[data-test-confirm-delete]');
tests/acceptance/status-banner-test.ts:28:        await visit('/');
tests/acceptance/status-banner-test.ts:33:        await percySnapshot(assert);
tests/acceptance/support-test.ts:13:        await visit('/support');
tests/acceptance/support-test.ts:17:        await percySnapshot(assert);
tests/acceptance/verify-email-test.ts:24:        await visit('/dashboard');
tests/acceptance/verify-email-test.ts:33:        await visit('/dashboard');
tests/acceptance/verify-email-test.ts:35:        await percySnapshot(assert);
tests/acceptance/verify-email-test.ts:37:        await click('[data-test-verify-email]');
tests/acceptance/verify-email-test.ts:47:        await visit('/dashboard');
tests/acceptance/verify-email-test.ts:56:            await click('[data-test-verify-email]');
tests/acceptance/verify-email-test.ts:69:        await visit('/dashboard');
tests/acceptance/verify-email-test.ts:72:        await click('[data-test-deny-email]');
tests/acceptance/verify-email-test.ts:84:        await visit('/dashboard');
tests/acceptance/verify-email-test.ts:93:            await click('[data-test-deny-email]');
tests/acceptance/view-only-link-test.ts:29:        await visit(`/?view_only=${viewOnlyToken}`);
tests/acceptance/view-only-link-test.ts:71:        await visit(`/support?view_only=${viewOnlyToken}`);
tests/acceptance/view-only-link-test.ts:75:        await click('[data-test-view-normally]');
tests/acceptance/view-only-link-test.ts:84:        await visit(`/support?view_only=${viewOnlyToken}`);
tests/acceptance/view-only-link-test.ts:89:        await click('[data-test-view-normally]');
tests/acceptance/view-only-link-test.ts:98:        await visit(`/support?view_only=${viewOnlyToken}`);
tests/acceptance/view-only-link-test.ts:103:        await click('[data-test-view-normally]');
tests/acceptance/view-only-link-test.ts:112:        await visit(`/support?view_only=${viewOnlyToken}`);
tests/acceptance/view-only-link-test.ts:117:        await click('[data-test-view-normally]');
tests/acceptance/view-only-link-test.ts:128:        await visit(`/${mirageProject.id}/registrations`);
tests/acceptance/view-only-link-test.ts:129:        await click('[data-test-node-card-heading] a');
tests/engines/app-components/integration/helpers/clip-test.ts:26:            await render(hbs`{{clip text 200}}`);
tests/engines/app-components/integration/helpers/fix-string-test.ts:10:        await render(hbs`
tests/engines/app-components/integration/helpers/get-model-test.ts:20:            await render(hbs`
tests/engines/app-components/integration/helpers/sort-test.ts:19:        await render(hbs`{{#each (sort options) as |option|}} {{option}} {{/each}}`);
tests/engines/app-components/integration/helpers/unescape-xml-entities.ts:26:            await render(hbs`{{unescape-xml-entities text}}`);
tests/engines/collections/acceptance/discover/discover-test.ts:37:        await visit(`/collections/${provider.id}/discover`);
tests/engines/collections/acceptance/discover/discover-test.ts:48:        await percySnapshot(assert);
tests/engines/collections/acceptance/discover/discover-test.ts:91:        await visit(`/collections/${provider.id}/discover`);
tests/engines/collections/acceptance/discover/discover-test.ts:96:        await untrackedClick('[data-test-sort-by-button]');
tests/engines/collections/acceptance/discover/discover-test.ts:97:        await untrackedClick('[data-test-sort-by-item="modified"]');
tests/engines/collections/acceptance/discover/discover-test.ts:102:        await untrackedClick('[data-test-sort-by-button]');
tests/engines/collections/acceptance/discover/discover-test.ts:103:        await untrackedClick('[data-test-sort-by-item="-modified"]');
tests/engines/collections/acceptance/discover/discover-test.ts:137:        await visit(`/collections/${provider.id}/discover`);
tests/engines/collections/acceptance/discover/discover-test.ts:142:        await fillIn('[data-test-search-input] input', 'node1');
tests/engines/collections/acceptance/discover/discover-test.ts:143:        await untrackedClick('[data-test-search-button]');
tests/engines/collections/acceptance/discover/discover-test.ts:158:        const collection: Collection = await store.findRecord('collection', primaryCollection.id);
tests/engines/collections/acceptance/discover/discover-test.ts:195:        await visit(`/collections/${provider.id}/discover`);
tests/engines/collections/acceptance/discover/discover-test.ts:202:        await untrackedClick(`[data-test-checklist-facet-item="${collection.collectedTypeChoices[0]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:207:        await untrackedClick(`[data-test-checklist-facet-item="${collection.collectedTypeChoices[1]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:212:        await untrackedClick(`[data-test-checklist-facet-item="${collection.collectedTypeChoices[0]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:217:        await untrackedClick(`[data-test-checklist-facet-item="${collection.collectedTypeChoices[1]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:228:        await untrackedClick(`[data-test-checklist-facet-item="${collection.issueChoices[0]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:233:        await untrackedClick(`[data-test-checklist-facet-item="${collection.issueChoices[1]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:238:        await untrackedClick(`[data-test-checklist-facet-item="${collection.issueChoices[0]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:243:        await untrackedClick(`[data-test-checklist-facet-item="${collection.issueChoices[1]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:254:        await untrackedClick(`[data-test-checklist-facet-item="${collection.programAreaChoices[0]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:259:        await untrackedClick(`[data-test-checklist-facet-item="${collection.programAreaChoices[1]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:264:        await untrackedClick(`[data-test-checklist-facet-item="${collection.programAreaChoices[0]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:269:        await untrackedClick(`[data-test-checklist-facet-item="${collection.programAreaChoices[1]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:280:        await untrackedClick(`[data-test-checklist-facet-item="${collection.statusChoices[0]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:285:        await untrackedClick(`[data-test-checklist-facet-item="${collection.statusChoices[1]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:290:        await untrackedClick(`[data-test-checklist-facet-item="${collection.statusChoices[0]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:295:        await untrackedClick(`[data-test-checklist-facet-item="${collection.statusChoices[1]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:306:        await untrackedClick(`[data-test-checklist-facet-item="${collection.volumeChoices[0]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:311:        await untrackedClick(`[data-test-checklist-facet-item="${collection.volumeChoices[1]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:316:        await untrackedClick(`[data-test-checklist-facet-item="${collection.volumeChoices[0]}"] input`);
tests/engines/collections/acceptance/discover/discover-test.ts:321:        await untrackedClick(`[data-test-checklist-facet-item="${collection.volumeChoices[1]}"] input`);
tests/engines/collections/acceptance/submit/submit-test.ts:42:        await visit(`/collections/${provider.id}/submit`);
tests/engines/collections/acceptance/submit/submit-test.ts:46:        await percySnapshot('Collections | Acceptance | submit | select project');
tests/engines/collections/acceptance/submit/submit-test.ts:49:        await untrackedClick('[data-test-collections-item-picker] .ember-power-select-trigger');
tests/engines/collections/acceptance/submit/submit-test.ts:55:            await untrackedClick(nodeToBeAddedOption);
tests/engines/collections/acceptance/submit/submit-test.ts:60:        await percySnapshot('Collections | Acceptance | submit | project metadata');
tests/engines/collections/acceptance/submit/submit-test.ts:62:        await fillIn('[data-test-project-metadata-title] input', newTitle);
tests/engines/collections/acceptance/submit/submit-test.ts:63:        await fillIn('[data-test-project-metadata-description] textarea', newDescription);
tests/engines/collections/acceptance/submit/submit-test.ts:65:        await untrackedClick('[data-test-project-metadata-license-picker] .ember-power-select-trigger');
tests/engines/collections/acceptance/submit/submit-test.ts:69:            await untrackedClick(firstLicenseOption);
tests/engines/collections/acceptance/submit/submit-test.ts:72:        await untrackedClick(`[data-test-project-metadata-tag="${nodeToBeAdded.tags[2]}"] + .emberTagInput-remove`);
tests/engines/collections/acceptance/submit/submit-test.ts:73:        await untrackedClick('[data-test-project-metadata-save-button]');
tests/engines/collections/acceptance/submit/submit-test.ts:80:        const licenses = await collectionProvider.get('licensesAcceptable');
tests/engines/collections/acceptance/submit/submit-test.ts:91:        await percySnapshot('Collections | Acceptance | submit | project contributors');
tests/engines/collections/acceptance/submit/submit-test.ts:95:        await fillIn('[data-test-project-contributors-search-box] input', userToAdd.fullName);
tests/engines/collections/acceptance/submit/submit-test.ts:96:        await untrackedClick('[data-test-project-contributors-search-button]');
tests/engines/collections/acceptance/submit/submit-test.ts:100:        await untrackedClick(`${userToAddSelector} [data-test-project-contributors-add-contributor-button]`);
tests/engines/collections/acceptance/submit/submit-test.ts:104:        await untrackedClick('[data-test-collection-project-contributors] [data-test-submit-section-continue]');
tests/engines/collections/acceptance/submit/submit-test.ts:109:        await untrackedClick(
tests/engines/collections/acceptance/submit/submit-test.ts:112:        await untrackedClick(`${contribListSelector} [data-test-project-contributors-list-item-remove-button]`);
tests/engines/collections/acceptance/submit/submit-test.ts:115:        await untrackedClick('[data-test-collection-project-contributors] [data-test-submit-section-continue]');
tests/engines/collections/acceptance/submit/submit-test.ts:121:        await percySnapshot('Collections | Acceptance | submit | collection metadata');
tests/engines/collections/acceptance/submit/submit-test.ts:126:        await untrackedClick('[data-test-metadata-field="collected_type_label"] .ember-power-select-trigger');
tests/engines/collections/acceptance/submit/submit-test.ts:129:            await untrackedClick(firstCollectedTypeOption);
tests/engines/collections/acceptance/submit/submit-test.ts:134:        await untrackedClick('[data-test-metadata-field="issue_label"] .ember-power-select-trigger');
tests/engines/collections/acceptance/submit/submit-test.ts:137:            await untrackedClick(firstIssueOption);
tests/engines/collections/acceptance/submit/submit-test.ts:142:        await untrackedClick('[data-test-metadata-field="program_area_label"] .ember-power-select-trigger');
tests/engines/collections/acceptance/submit/submit-test.ts:145:            await untrackedClick(firstProgramAreaOption);
tests/engines/collections/acceptance/submit/submit-test.ts:150:        await untrackedClick('[data-test-metadata-field="status_label"] .ember-power-select-trigger');
tests/engines/collections/acceptance/submit/submit-test.ts:153:            await untrackedClick(firstStatusOption);
tests/engines/collections/acceptance/submit/submit-test.ts:158:        await untrackedClick('[data-test-metadata-field="volume_label"] .ember-power-select-trigger');
tests/engines/collections/acceptance/submit/submit-test.ts:161:            await untrackedClick(firstVolumeOption);
tests/engines/collections/acceptance/submit/submit-test.ts:167:        await untrackedClick('[data-test-metadata-field="school_type_label"] .ember-power-select-trigger');
tests/engines/collections/acceptance/submit/submit-test.ts:170:            await untrackedClick(firstSchoolTypeOption);
tests/engines/collections/acceptance/submit/submit-test.ts:175:        await untrackedClick('[data-test-metadata-field="study_design_label"] .ember-power-select-trigger');
tests/engines/collections/acceptance/submit/submit-test.ts:178:            await untrackedClick(firstStudyDesignOption);
tests/engines/collections/acceptance/submit/submit-test.ts:185:        await untrackedClick('[data-test-collection-metadata] [data-test-submit-section-continue]');
tests/engines/collections/acceptance/submit/submit-test.ts:188:        const collection = await collectionProvider.get('primaryCollection');
tests/engines/collections/acceptance/submit/submit-test.ts:202:        await click('[data-test-collections-submit-submit-button]');
tests/engines/collections/acceptance/submit/submit-test.ts:206:        await percySnapshot('Collections | Acceptance | submit | confirm public modal');
tests/engines/collections/acceptance/submit/submit-test.ts:208:        await click('[data-test-collection-submission-confirmation-modal-cancel-button]');
tests/engines/collections/acceptance/update/update-test.ts:32:        const collection: Collection = await store.findRecord('collection', primaryCollection.id);
tests/engines/collections/acceptance/update/update-test.ts:58:        await visit(`/collections/${provider.id}/${nodeAdded.id}/edit`);
tests/engines/collections/acceptance/update/update-test.ts:62:        await fillIn('[data-test-project-metadata-title] input', newTitle);
tests/engines/collections/acceptance/update/update-test.ts:63:        await fillIn('[data-test-project-metadata-description] textarea', newDescription);
tests/engines/collections/acceptance/update/update-test.ts:65:        await untrackedClick('[data-test-project-metadata-license-picker] .ember-power-select-trigger');
tests/engines/collections/acceptance/update/update-test.ts:69:            await untrackedClick(firstLicenseOption);
tests/engines/collections/acceptance/update/update-test.ts:72:        await untrackedClick(`[data-test-project-metadata-tag="${nodeAdded.tags[2]}"] + .emberTagInput-remove`);
tests/engines/collections/acceptance/update/update-test.ts:74:        await percySnapshot('Collections | Acceptance | update | project metadata');
tests/engines/collections/acceptance/update/update-test.ts:75:        await untrackedClick('[data-test-project-metadata-save-button]');
tests/engines/collections/acceptance/update/update-test.ts:82:        const licenses = await collectionProvider.get('licensesAcceptable');
tests/engines/collections/acceptance/update/update-test.ts:95:        await fillIn('[data-test-project-contributors-search-box] input', userToAdd.fullName);
tests/engines/collections/acceptance/update/update-test.ts:96:        await untrackedClick('[data-test-project-contributors-search-button]');
tests/engines/collections/acceptance/update/update-test.ts:100:        await untrackedClick(`${userToAddSelector} [data-test-project-contributors-add-contributor-button]`);
tests/engines/collections/acceptance/update/update-test.ts:105:        await percySnapshot('Collections | Acceptance | update | added project contributor');
tests/engines/collections/acceptance/update/update-test.ts:106:        await untrackedClick('[data-test-collection-project-contributors] [data-test-submit-section-continue]');
tests/engines/collections/acceptance/update/update-test.ts:112:        await untrackedClick(
tests/engines/collections/acceptance/update/update-test.ts:115:        await untrackedClick(`${contribListSelector} [data-test-project-contributors-list-item-remove-button]`);
tests/engines/collections/acceptance/update/update-test.ts:119:        await percySnapshot('Collections | Acceptance | update | removed project contributor');
tests/engines/collections/acceptance/update/update-test.ts:120:        await untrackedClick('[data-test-collection-project-contributors] [data-test-submit-section-continue]');
tests/engines/collections/acceptance/update/update-test.ts:126:        await untrackedClick('[data-test-collection-metadata] [data-test-submit-section-continue]');
tests/engines/collections/acceptance/update/update-test.ts:141:        await untrackedClick(
tests/engines/collections/acceptance/update/update-test.ts:146:        await untrackedClick('[data-test-metadata-field="collected_type_label"] .ember-power-select-trigger');
tests/engines/collections/acceptance/update/update-test.ts:149:            await untrackedClick(firstCollectedTypeOption);
tests/engines/collections/acceptance/update/update-test.ts:155:        await untrackedClick('[data-test-metadata-field="issue_label"] .ember-power-select-trigger');
tests/engines/collections/acceptance/update/update-test.ts:158:            await untrackedClick(firstIssueOption);
tests/engines/collections/acceptance/update/update-test.ts:164:        await untrackedClick('[data-test-metadata-field="program_area_label"] .ember-power-select-trigger');
tests/engines/collections/acceptance/update/update-test.ts:167:            await untrackedClick(firstProgramAreaOption);
tests/engines/collections/acceptance/update/update-test.ts:173:        await untrackedClick('[data-test-metadata-field="status_label"] .ember-power-select-trigger');
tests/engines/collections/acceptance/update/update-test.ts:176:            await untrackedClick(firstStatusOption);
tests/engines/collections/acceptance/update/update-test.ts:182:        await untrackedClick('[data-test-metadata-field="volume_label"] .ember-power-select-trigger');
tests/engines/collections/acceptance/update/update-test.ts:185:            await untrackedClick(firstVolumeOption);
tests/engines/collections/acceptance/update/update-test.ts:190:        await percySnapshot('Collections | Acceptance | update | collection metadata');
tests/engines/collections/acceptance/update/update-test.ts:191:        await untrackedClick('[data-test-collection-metadata] [data-test-submit-section-continue]');
tests/engines/collections/acceptance/update/update-test.ts:207:        await percySnapshot('Collections | Acceptance | update | finished');
tests/engines/collections/integration/components/collection-submission-confirmation-modal/component-test.ts:12:        await render(hbs`
tests/engines/collections/integration/components/collection-submission-confirmation-modal/component-test.ts:37:        await render(hbs`
tests/engines/collections/integration/components/collection-submission-confirmation-modal/component-test.ts:43:        await click('[data-test-collection-submission-confirmation-modal-add-button]');
tests/engines/collections/integration/components/collection-submission-confirmation-modal/component-test.ts:52:        await render(hbs`
tests/engines/collections/integration/components/collection-submission-confirmation-modal/component-test.ts:58:        await click('[data-test-collection-submission-confirmation-modal-cancel-button]');
tests/engines/osf-components/integration/components/button/component-test.ts:12:        await render(hbs`
tests/engines/osf-components/integration/components/button/component-test.ts:24:        await render(hbs`
tests/engines/osf-components/integration/components/button/component-test.ts:43:        await render(hbs`
tests/engines/registries/acceptance/branded/discover-test.ts:31:        await visit(`/registries/${this.brandedProvider.id}/discover`);
tests/engines/registries/acceptance/branded/discover-test.ts:32:        await percySnapshot('branded discover page');
tests/engines/registries/acceptance/branded/discover-test.ts:49:        await visit(`/registries/${this.brandedProvider.id}/discover`);
tests/engines/registries/acceptance/branded/discover-test.ts:57:        await visit(`/registries/${this.brandedProvider.id}`);
tests/engines/registries/acceptance/branded/discover-test.ts:69:        await visit(`/registries/${provider.id}/discover`);
tests/engines/registries/acceptance/branded/discover-test.ts:79:        await visit(`/registries/${osfProvider.id}/discover`);
tests/engines/registries/acceptance/branded/discover-test.ts:84:        await visit(`/registries/${osfProvider.id}`);
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:24:        await visit('/registries/mdr8n/moderation/moderators');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:30:        await visit('/registries/mdr8n/moderation/moderators');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:39:        await visit('/registries/mdr8n/moderation/moderators');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:40:        await percySnapshot('moderation moderators page: moderator view');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:58:        await visit('/registries/mdr8n/moderation/moderators');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:59:        await percySnapshot('moderation moderators page: admin view');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:78:        await visit('/registries/empty/moderation/moderators');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:82:        await click('[data-test-add-moderator-button]');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:83:        await selectSearch('[data-test-select-user]', 'Suzy');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:84:        await selectChoose('[data-test-select-user]', 'Bae Suzy');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:85:        await selectChoose('[data-test-select-permission]', 'Moderator');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:86:        await click('[data-test-confirm-add-moderator-button]');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:97:        await click('[data-test-add-moderator-button]');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:98:        await click('[data-test-toggle-invite-form]');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:99:        await click('[data-test-confirm-add-moderator-button]');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:100:        await fillIn('[data-test-email-input]>div>input', 'testing@cos.io');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:101:        await fillIn('[data-test-full-name-input]>div>input', 'Baek Yerin');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:102:        await selectChoose('[data-test-select-permission]', 'Moderator');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:103:        await click('[data-test-confirm-add-moderator-button]');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:113:        await clickTrigger(`[data-test-moderator-row="${suzy.id}"]`);
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:114:        await selectChoose(`[data-test-moderator-row="${suzy.id}"]`, 'Admin');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:127:        await click(`[data-test-delete-moderator-button="${suzy.id}"]>[data-test-delete-button]`);
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:128:        await click('[data-test-confirm-delete]');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:161:        await visit('/registries/empty/moderation/moderators');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:163:        await click('[data-test-add-moderator-button]');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:164:        await selectSearch('[data-test-select-user]', 'Suzy');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:165:        await selectChoose('[data-test-select-user]', 'Bae Suzy');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:166:        await selectChoose('[data-test-select-permission]', 'Moderator');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:167:        await click('[data-test-confirm-add-moderator-button]');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:175:        await timeout(5000);
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:177:        await clickTrigger(`[data-test-moderator-row="${currentUser.id}"]`);
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:178:        await selectChoose(`[data-test-moderator-row="${currentUser.id}"]`, 'Moderator');
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:186:        await timeout(5000);
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:188:        await click(`[data-test-delete-moderator-button="${currentUser.id}"]>[data-test-delete-button]`);
tests/engines/registries/acceptance/branded/moderation/moderators-test.ts:189:        await click('[data-test-confirm-delete]');
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:27:        await visit('/registries/sbmit/moderation/pending');
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:33:        await visit('/registries/sbmit/moderation/pending');
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:45:        await visit('/registries/sbmit/moderation/pending');
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:46:        await percySnapshot('moderation pending page: updates not allowed');
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:64:        await visit('/registries/sbmit/moderation/pending');
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:65:        await percySnapshot('moderation pending page: no registrations');
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:81:        await click('[data-test-submissions-type="revision-pending"]');
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:93:        await click('[data-test-submissions-type="pending-withdraw"]');
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:129:        await visit('/registries/sbmit/moderation/pending');
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:130:        await percySnapshot('moderation pending page: many registrations');
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:143:        await click('[data-test-next-page-button]');
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:149:        await click(toggleActions[0]);
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:154:        await click('[data-test-submissions-type="revision-pending"]');
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:168:        await click('[data-test-submissions-type="pending-withdraw"]');
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:178:        await click('[data-test-registration-list-card-title]>a');
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:192:        await visit('/registries/sbmit/moderation/pending?state=pending_moderation');
tests/engines/registries/acceptance/branded/moderation/pending-test.ts:208:        await visit('/registries/sbmit/moderation/pending?state=donkey_kong');
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:37:        await visit('/registries/mdr8n/moderation/settings');
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:43:        await visit('/registries/mdr8n/moderation/settings');
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:52:        await visit('/registries/mdr8n/moderation/settings');
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:53:        await percySnapshot('moderation settings page for moderators');
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:73:        await visit('/registries/mdr8n/moderation/settings');
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:74:        await percySnapshot('moderation settings page for admins');
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:96:        await visit('/registries/mdr8n/moderation/settings');
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:117:        await visit('/registries/mdr8n/moderation/settings');
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:123:        await triggerFileUpload();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:124:        await settled();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:134:        await triggerFileUpload();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:135:        await settled();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:145:        await click('[data-test-close-dialog]');
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:153:        await triggerFileUpload();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:154:        await settled();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:167:        await click('[data-test-close-dialog]');
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:174:        await triggerFileUpload();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:175:        await settled();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:187:        await click('[data-test-close-dialog]');
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:193:        await triggerFileUpload();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:194:        await settled();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:201:        await click('[data-test-close-dialog]');
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:207:        await triggerFileUpload();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:208:        await settled();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:215:        await click('[data-test-close-dialog]');
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:221:        await triggerFileUpload();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:222:        await settled();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:229:        await click('[data-test-close-dialog]');
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:235:        await triggerFileUpload();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:236:        await settled();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:243:        await click('[data-test-close-dialog]');
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:258:        await triggerFileUpload();
tests/engines/registries/acceptance/branded/moderation/settings-test.ts:259:        await settled();
tests/engines/registries/acceptance/branded/moderation/submitted-test.ts:26:        await visit('/registries/sbmit/moderation/submitted');
tests/engines/registries/acceptance/branded/moderation/submitted-test.ts:32:        await visit('/registries/sbmit/moderation/submitted');
tests/engines/registries/acceptance/branded/moderation/submitted-test.ts:44:        await visit('/registries/sbmit/moderation/submitted');
tests/engines/registries/acceptance/branded/moderation/submitted-test.ts:45:        await percySnapshot('moderation submitted page: no registrations');
tests/engines/registries/acceptance/branded/moderation/submitted-test.ts:60:        await click('[data-test-submissions-type="embargo"]');
tests/engines/registries/acceptance/branded/moderation/submitted-test.ts:70:        await click('[data-test-submissions-type="rejected"]');
tests/engines/registries/acceptance/branded/moderation/submitted-test.ts:80:        await click('[data-test-submissions-type="withdrawn"]');
tests/engines/registries/acceptance/branded/moderation/submitted-test.ts:119:        await visit('/registries/sbmit/moderation/submitted');
tests/engines/registries/acceptance/branded/moderation/submitted-test.ts:120:        await percySnapshot('moderation submitted page: many registrations');
tests/engines/registries/acceptance/branded/moderation/submitted-test.ts:133:        await click('[data-test-next-page-button]');
tests/engines/registries/acceptance/branded/moderation/submitted-test.ts:139:        await click(toggleActions[0]);
tests/engines/registries/acceptance/branded/moderation/submitted-test.ts:144:        await click('[data-test-submissions-type="embargo"]');
tests/engines/registries/acceptance/branded/moderation/submitted-test.ts:156:        await click('[data-test-submissions-type="rejected"]');
tests/engines/registries/acceptance/branded/moderation/submitted-test.ts:166:        await click('[data-test-submissions-type="withdrawn"]');
tests/engines/registries/acceptance/branded/moderation/submitted-test.ts:184:        await visit('/registries/sbmit/moderation/submitted?state=embargo');
tests/engines/registries/acceptance/branded/moderation/submitted-test.ts:199:        await visit('/registries/sbmit/moderation/submitted?state=embargooooo');
tests/engines/registries/acceptance/branded/new-test.ts:23:        await visit(`/registries/${brandedProvider.id}/new`);
tests/engines/registries/acceptance/branded/new-test.ts:24:        await percySnapshot(assert);
tests/engines/registries/acceptance/branded/new-test.ts:36:            await visit(`/registries/${brandedProvider.id}/new`);
tests/engines/registries/acceptance/branded/new-test.ts:37:            await percySnapshot(assert);
tests/engines/registries/acceptance/branded/new-test.ts:45:        await visit(`/registries/${brandedProvider.id}/new`);
tests/engines/registries/acceptance/branded/new-test.ts:58:        await visit(`/registries/${brandedProvider.id}/new`);
tests/engines/registries/acceptance/branded/new-test.ts:62:        await click('[data-test-has-project-button]');
tests/engines/registries/acceptance/branded/new-test.ts:66:        await click('[data-test-project-select] .ember-power-select-trigger');
tests/engines/registries/acceptance/branded/new-test.ts:71:        await click('.ember-power-select-options > li.ember-power-select-option:first-of-type');
tests/engines/registries/acceptance/branded/new-test.ts:76:        await click('[data-test-start-registration-button]');
tests/engines/registries/acceptance/branded/new-test.ts:84:        await visit(`/registries/${brandedProvider.id}/new`);
tests/engines/registries/acceptance/branded/new-test.ts:91:        await click('[data-test-start-registration-button]');
tests/engines/registries/acceptance/branded/new-test.ts:100:        await visit(`/registries/${brandedProvider.id}/new`);
tests/engines/registries/acceptance/branded/new-test.ts:101:        await click('[data-test-no-project-button]');
tests/engines/registries/acceptance/branded/new-test.ts:103:        await click('[data-test-start-registration-button]');
tests/engines/registries/acceptance/discover-page-test.ts:24:        await visit('/registries/discover');
tests/engines/registries/acceptance/discover-page-test.ts:25:        await click('[data-test-sort-dropdown]');
tests/engines/registries/acceptance/discover-page-test.ts:26:        await percySnapshot('happy path');
tests/engines/registries/acceptance/discover-page-test.ts:39:        await fillIn('[data-test-search-box]', searchableReg.title);
tests/engines/registries/acceptance/discover-page-test.ts:42:        await fillIn('[data-test-search-box]', '');
tests/engines/registries/acceptance/discover-page-test.ts:44:        await click(`[data-test-source-filter-id="${osfProvider.shareSource}"]`);
tests/engines/registries/acceptance/discover-page-test.ts:47:        await fillIn('[data-test-search-box]', 'kjafnsdflkjhsdfnasdkndfa random string');
tests/engines/registries/acceptance/discover-page-test.ts:55:        await visit('/registries/discover/');
tests/engines/registries/acceptance/discover-page-test.ts:65:        await click('[data-test-page-number="2"]');
tests/engines/registries/acceptance/discover-page-test.ts:73:        await visit(`/registries/discover?provider=${anotherProvider.shareSource}&q=${searchableReg.title}`);
tests/engines/registries/acceptance/discover-page-test.ts:75:        await percySnapshot('with initial query params');
tests/engines/registries/acceptance/draft/draft-test.ts:65:        await visit(`registries/drafts/${draftRegistration.id}/`);
tests/engines/registries/acceptance/draft/draft-test.ts:66:        await percySnapshot('Branded draft page');
tests/engines/registries/acceptance/draft/draft-test.ts:86:        await visit(`/registries/drafts/${draft.id}/`);
tests/engines/registries/acceptance/draft/draft-test.ts:105:        await visit(`/registries/drafts/${registration.id}/`);
tests/engines/registries/acceptance/draft/draft-test.ts:124:        await percySnapshot('Read-only Review page: Desktop');
tests/engines/registries/acceptance/draft/draft-test.ts:128:        await visit(`/registries/drafts/${registration.id}/metadata`);
tests/engines/registries/acceptance/draft/draft-test.ts:137:        await percySnapshot('Read-only Review page: Mobile');
tests/engines/registries/acceptance/draft/draft-test.ts:152:        await visit(`/registries/drafts/${registration.id}/`);
tests/engines/registries/acceptance/draft/draft-test.ts:170:        await visit(`/registries/drafts/${registration.id}/99/`);
tests/engines/registries/acceptance/draft/draft-test.ts:188:        await visit(`/registries/drafts/${registration.id}/`);
tests/engines/registries/acceptance/draft/draft-test.ts:191:        await click('[data-test-delete-button]');
tests/engines/registries/acceptance/draft/draft-test.ts:192:        await click('[data-test-confirm-delete]');
tests/engines/registries/acceptance/draft/draft-test.ts:207:        await visit(`/registries/drafts/${draftRegistration.id}/`);
tests/engines/registries/acceptance/draft/draft-test.ts:208:        await percySnapshot('Registries | Acceptance | draft form | left nav controls | metadata page');
tests/engines/registries/acceptance/draft/draft-test.ts:227:        await click('[data-test-link="2-this-is-the-second-page"]');
tests/engines/registries/acceptance/draft/draft-test.ts:228:        await percySnapshot('Registries | Acceptance | draft form | left nav controls | second page');
tests/engines/registries/acceptance/draft/draft-test.ts:245:        await click('[data-test-link="1-first-page-of-test-schema"]');
tests/engines/registries/acceptance/draft/draft-test.ts:261:        await click('[data-test-link="metadata"]');
tests/engines/registries/acceptance/draft/draft-test.ts:275:        await click('[data-test-link="review"]');
tests/engines/registries/acceptance/draft/draft-test.ts:276:        await percySnapshot('Registries | Acceptance | draft form | left nav controls | review page');
tests/engines/registries/acceptance/draft/draft-test.ts:305:        await visit(`/registries/drafts/${registration.id}/`);
tests/engines/registries/acceptance/draft/draft-test.ts:318:        await click('[data-test-goto-next-page]');
tests/engines/registries/acceptance/draft/draft-test.ts:328:        await click('[data-test-goto-next-page]');
tests/engines/registries/acceptance/draft/draft-test.ts:343:        await click('[data-test-goto-review]');
tests/engines/registries/acceptance/draft/draft-test.ts:358:        await click('[data-test-goto-previous-page]');
tests/engines/registries/acceptance/draft/draft-test.ts:374:        await visit(`/registries/drafts/${registration.id}/`);
tests/engines/registries/acceptance/draft/draft-test.ts:379:        await percySnapshot('Registries | Acceptance | draft form | mobile navigation | metadata page');
tests/engines/registries/acceptance/draft/draft-test.ts:387:        await click('[data-test-goto-next-page]');
tests/engines/registries/acceptance/draft/draft-test.ts:396:        await click('[data-test-goto-next-page]');
tests/engines/registries/acceptance/draft/draft-test.ts:398:        await percySnapshot('Registries | Acceptance | draft form | mobile navigation | second page');
tests/engines/registries/acceptance/draft/draft-test.ts:408:        await click('[data-test-goto-review]');
tests/engines/registries/acceptance/draft/draft-test.ts:410:        await percySnapshot('Registries | Acceptance | draft form | mobile navigation | review page');
tests/engines/registries/acceptance/draft/draft-test.ts:421:        await click('[data-test-goto-previous-page]');
tests/engines/registries/acceptance/draft/draft-test.ts:447:        await visit(`/registries/drafts/${registration.id}/`);
tests/engines/registries/acceptance/draft/draft-test.ts:449:        await timer.tickAsync(3001); // skip debounce
tests/engines/registries/acceptance/draft/draft-test.ts:454:        await timer.tickAsync(5000); // skip until toast gone
tests/engines/registries/acceptance/draft/draft-test.ts:457:        await click('[data-test-goto-next-page]');
tests/engines/registries/acceptance/draft/draft-test.ts:459:        await timer.tickAsync(3001); // skip debounce
tests/engines/registries/acceptance/draft/draft-test.ts:464:        await timer.tickAsync(5000); // skip until toast gone
tests/engines/registries/acceptance/draft/draft-test.ts:467:        await click('[data-test-delete-button]');
tests/engines/registries/acceptance/draft/draft-test.ts:468:        await click('[data-test-confirm-delete]');
tests/engines/registries/acceptance/draft/draft-test.ts:490:        await visit(`/registries/drafts/${registration.id}/`);
tests/engines/registries/acceptance/draft/draft-test.ts:492:        await click('[data-test-add-new-button]');
tests/engines/registries/acceptance/draft/draft-test.ts:520:        await visit(`/registries/drafts/${registration.id}/review`);
tests/engines/registries/acceptance/draft/draft-test.ts:549:        await visit(`/registries/drafts/${registration.id}/review`);
tests/engines/registries/acceptance/draft/draft-test.ts:569:        await visit(`/registries/drafts/${draftRegistration.id}/review`);
tests/engines/registries/acceptance/draft/draft-test.ts:574:        await click('[data-test-contributor-remove-me] > button');
tests/engines/registries/acceptance/draft/draft-test.ts:578:        await percySnapshot(assert);
tests/engines/registries/acceptance/draft/draft-test.ts:580:        await click('[data-test-confirm-delete]');
tests/engines/registries/acceptance/draft/draft-test.ts:586:        await settled();
tests/engines/registries/acceptance/draft/draft-test.ts:607:        await visit(`/registries/drafts/${draftRegistration.id}/metadata`);
tests/engines/registries/acceptance/draft/draft-test.ts:610:        await click(`[data-test-contributor-remove-self="${thisContributor.id}"] > button`);
tests/engines/registries/acceptance/draft/draft-test.ts:614:        await percySnapshot(assert);
tests/engines/registries/acceptance/draft/draft-test.ts:616:        await click('[data-test-confirm-delete]');
tests/engines/registries/acceptance/draft/draft-test.ts:637:        await visit(`/registries/drafts/${draftRegistration.id}/metadata`);
tests/engines/registries/acceptance/draft/draft-test.ts:640:        await click(`[data-test-contributor-remove-self="${thisContributor.id}"] > button`);
tests/engines/registries/acceptance/draft/draft-test.ts:650:        await click('[data-test-confirm-delete]');
tests/engines/registries/acceptance/draft/draft-test.ts:676:        await visit(`/registries/drafts/${draftRegistration.id}/review`);
tests/engines/registries/acceptance/draft/draft-test.ts:689:        await click('[data-test-contributor-remove-me] > button');
tests/engines/registries/acceptance/draft/draft-test.ts:694:        await click('[data-test-confirm-delete]');
tests/engines/registries/acceptance/draft/draft-test.ts:702:        await settled();
tests/engines/registries/acceptance/draft/draft-test.ts:722:        await visit(`/registries/drafts/${registration.id}/`);
tests/engines/registries/acceptance/draft/draft-test.ts:724:        await click('[data-test-link="review"]');
tests/engines/registries/acceptance/draft/draft-test.ts:760:            await visit(`/registries/drafts/${registration.id}/review`);
tests/engines/registries/acceptance/draft/draft-test.ts:765:            await click('[data-test-goto-register]');
tests/engines/registries/acceptance/draft/draft-test.ts:772:            await click('[data-test-cancel-registration-button]');
tests/engines/registries/acceptance/draft/draft-test.ts:776:            await click('[data-test-goto-register]');
tests/engines/registries/acceptance/draft/draft-test.ts:779:            await click('[data-test-continue-registration-button]');
tests/engines/registries/acceptance/draft/draft-test.ts:785:            await click('[data-test-back-button]');
tests/engines/registries/acceptance/draft/draft-test.ts:791:            await click('[data-test-continue-registration-button]');
tests/engines/registries/acceptance/draft/draft-test.ts:793:            await click('[data-test-immediate-button]');
tests/engines/registries/acceptance/draft/draft-test.ts:796:            await click('[data-test-submit-registration-button]');
tests/engines/registries/acceptance/draft/draft-test.ts:831:            await visit(`/registries/drafts/${registration.id}/review`);
tests/engines/registries/acceptance/draft/draft-test.ts:836:            await click('[data-test-goto-register]');
tests/engines/registries/acceptance/draft/draft-test.ts:841:            await click('[data-test-immediate-button]');
tests/engines/registries/acceptance/draft/draft-test.ts:844:            await click('[data-test-submit-registration-button]');
tests/engines/registries/acceptance/draft/draft-test.ts:864:        await visit(`/registries/drafts/${registration.id}/2`);
tests/engines/registries/acceptance/draft/draft-test.ts:871:        await click('[data-test-goto-review]');
tests/engines/registries/acceptance/draft/draft-test.ts:893:        await visit(`/registries/drafts/${registration.id}/1`);
tests/engines/registries/acceptance/draft/draft-test.ts:898:        await click('[data-test-goto-next-page]');
tests/engines/registries/acceptance/draft/draft-test.ts:924:        await visit(`/registries/drafts/${registration.id}/metadata`);
tests/engines/registries/acceptance/draft/draft-test.ts:932:        await fillIn('textarea[name="description"]', 'The most dangerous game');
tests/engines/registries/acceptance/draft/draft-test.ts:933:        await fillIn('input[name="title"]', '');
tests/engines/registries/acceptance/draft/draft-test.ts:939:        await fillIn('input[name="title"]', 'Skiball');
tests/engines/registries/acceptance/draft/draft-test.ts:940:        await fillIn('textarea[name="description"]', '');
tests/engines/registries/acceptance/draft/draft-test.ts:947:        await click('[data-test-metadata-category] > div');
tests/engines/registries/acceptance/draft/draft-test.ts:948:        await percySnapshot('Registries | Acceptance | draft form | metadata editing | metadata: categories opened');
tests/engines/registries/acceptance/draft/draft-test.ts:950:        await click('[data-option-index="1"]');
tests/engines/registries/acceptance/draft/draft-test.ts:952:        await click('[data-test-metadata-tags]');
tests/engines/registries/acceptance/draft/draft-test.ts:953:        await fillIn('[data-test-metadata-tags] input', 'ragtagbag');
tests/engines/registries/acceptance/draft/draft-test.ts:954:        await triggerKeyEvent('[data-test-metadata-tags] input', 'keydown', 'Enter');
tests/engines/registries/acceptance/draft/draft-test.ts:963:        await click('[data-test-link="review"]');
tests/engines/registries/acceptance/draft/draft-test.ts:978:        await click('[data-test-link="metadata"]');
tests/engines/registries/acceptance/draft/draft-test.ts:986:        await click('[data-test-subject-browse-label="1"] > input');
tests/engines/registries/acceptance/draft/draft-test.ts:991:        await click('[data-test-select-license] > .ember-basic-dropdown-trigger');
tests/engines/registries/acceptance/draft/draft-test.ts:992:        await percySnapshot('Registries | Acceptance | draft form | metadata editing | metadata: licenses opened');
tests/engines/registries/acceptance/draft/draft-test.ts:994:        await click('[data-option-index="2"]'); // This should be MIT License which requires Year and Copyright Holder
tests/engines/registries/acceptance/draft/draft-test.ts:1006:        await fillIn('[data-test-required-field="year"]', '');
tests/engines/registries/acceptance/draft/draft-test.ts:1007:        await blur('[data-test-required-field="year"]');
tests/engines/registries/acceptance/draft/draft-test.ts:1016:        await percySnapshot(
tests/engines/registries/acceptance/draft/draft-test.ts:1021:        await click('[data-test-link="review"]');
tests/engines/registries/acceptance/draft/draft-test.ts:1023:        await percySnapshot('Registries | Acceptance | draft form | metadata editing | review: invalid nodelicense');
tests/engines/registries/acceptance/draft/draft-test.ts:1026:        await click('[data-test-link="metadata"]');
tests/engines/registries/acceptance/draft/draft-test.ts:1028:        await fillIn('[data-test-required-field="year"]', '2222');
tests/engines/registries/acceptance/draft/draft-test.ts:1029:        await fillIn('[data-test-required-field="copyrightHolders"]', 'Twice and BlackPink');
tests/engines/registries/acceptance/draft/draft-test.ts:1034:        await click('[data-test-link="review"]');
tests/engines/registries/acceptance/draft/draft-test.ts:1042:        await click('[data-test-link="metadata"]');
tests/engines/registries/acceptance/draft/draft-test.ts:1044:        await click('[data-test-select-license] > .ember-basic-dropdown-trigger');
tests/engines/registries/acceptance/draft/draft-test.ts:1046:        await click('[data-option-index="1"]'); // This should be General Public which does not require any fields
tests/engines/registries/acceptance/draft/draft-test.ts:1080:        await visit(`/registries/drafts/${draftRegistration.id}/`);
tests/engines/registries/acceptance/draft/draft-test.ts:1081:        await click('[data-test-goto-next-page]');
tests/engines/registries/acceptance/draft/draft-test.ts:1090:        await click(`[data-test-delete-file="${fileOne.id}"] > button`);
tests/engines/registries/acceptance/draft/draft-test.ts:1095:        await click('[data-test-confirm-delete]');
tests/engines/registries/acceptance/draft/draft-test.ts:1106:        await click(`[data-test-file-browser-item="${folderOne.id}"]`);
tests/engines/registries/acceptance/draft/draft-test.ts:1109:        await waitUntil(() => findAll('[data-test-file-row]').length === 2, { timeout: 2000 });
tests/engines/registries/acceptance/draft/draft-test.ts:1120:        await click(`[data-test-delete-current-folder="${folderOne.id}"] > button`);
tests/engines/registries/acceptance/draft/draft-test.ts:1123:        await click('[data-test-confirm-delete]');
tests/engines/registries/acceptance/draft/draft-test.ts:1130:        await settled();
tests/engines/registries/acceptance/draft/draft-test.ts:1146:        await click(`[data-test-delete-file="${fileTwo.id}"] > button`);
tests/engines/registries/acceptance/draft/draft-test.ts:1147:        await click('[data-test-confirm-delete]');
tests/engines/registries/acceptance/draft/draft-test.ts:1169:        await visit(`/registries/drafts/${registration.id}/1`);
tests/engines/registries/acceptance/draft/draft-test.ts:1175:        await click('[data-test-goto-next-page]');
tests/engines/registries/acceptance/draft/draft-test.ts:1180:        await click('[data-test-goto-review]');
tests/engines/registries/acceptance/draft/draft-test.ts:1186:        await click('[data-test-link="1-first-page-of-test-schema"]');
tests/engines/registries/acceptance/draft/draft-test.ts:1190:        await fillIn(`input[name="${shortTextKey}"]`, 'ditto');
tests/engines/registries/acceptance/draft/draft-test.ts:1194:        await click('[data-test-goto-metadata]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:73:        await visit(`/registries/revisions/${revision.id}/`);
tests/engines/registries/acceptance/edit-revision/revision-test.ts:94:        await visit(`/registries/revisions/${revision.id}/`);
tests/engines/registries/acceptance/edit-revision/revision-test.ts:114:        await visit(`/registries/revisions/${revision.id}/`);
tests/engines/registries/acceptance/edit-revision/revision-test.ts:134:        await percySnapshot('Read-only Revision Review page: Desktop');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:138:        await visit(`/registries/revisions/${revision.id}/1-first-page-of-test-schema`);
tests/engines/registries/acceptance/edit-revision/revision-test.ts:147:        await percySnapshot('Read-only Revision Review page: Mobile');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:160:        await visit(`/registries/revisions/${revision.id}/`);
tests/engines/registries/acceptance/edit-revision/revision-test.ts:174:        await visit(`/registries/revisions/${revision.id}/`);
tests/engines/registries/acceptance/edit-revision/revision-test.ts:176:        await click('[data-test-delete-button]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:177:        await click('[data-test-confirm-delete]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:191:        await visit(`/registries/revisions/${revision.id}/`);
tests/engines/registries/acceptance/edit-revision/revision-test.ts:192:        await percySnapshot('Registries | Acceptance | registries revision | left nav controls | justification page');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:209:        await click('[data-test-link="1-first-page-of-test-schema"]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:210:        await percySnapshot('Registries | Acceptance | registries revision | left nav controls | first page');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:225:        await click('[data-test-link="2-this-is-the-second-page"]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:226:        await percySnapshot('Registries | Acceptance | registries revision | left nav controls | second page');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:242:        await click('[data-test-link="1-first-page-of-test-schema"]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:255:        await click('[data-test-link="review"]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:256:        await percySnapshot('Registries | Acceptance | registries revision | left nav controls | review page');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:283:        await visit(`/registries/revisions/${revision.id}/`);
tests/engines/registries/acceptance/edit-revision/revision-test.ts:296:        await click('[data-test-goto-next-page]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:309:        await click('[data-test-goto-next-page]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:325:        await click('[data-test-goto-review]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:340:        await click('[data-test-goto-previous-page]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:355:        await visit(`/registries/revisions/${revision.id}/`);
tests/engines/registries/acceptance/edit-revision/revision-test.ts:362:        await percySnapshot('Registries | Acceptance | registries revision | mobile nav controls | justification page');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:368:        await click('[data-test-goto-next-page]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:372:        await percySnapshot('Registries | Acceptance | registries revisions | mobile navigation | first page');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:378:        await click('[data-test-goto-next-page]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:381:        await percySnapshot('Registries | Acceptance | registries revisions | mobile navigation | second page');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:390:        await click('[data-test-goto-review]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:392:        await percySnapshot('Registries | Acceptance | registries revisions | mobile navigation | review page');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:403:        await click('[data-test-goto-previous-page]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:428:        await visit(`/registries/revisions/${revision.id}/`);
tests/engines/registries/acceptance/edit-revision/revision-test.ts:430:        await timer.tickAsync(3001); // skip debounce
tests/engines/registries/acceptance/edit-revision/revision-test.ts:435:        await timer.tickAsync(5000); // skip until toast gone
tests/engines/registries/acceptance/edit-revision/revision-test.ts:438:        await click('[data-test-goto-next-page]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:440:        await timer.tickAsync(3001); // skip debounce
tests/engines/registries/acceptance/edit-revision/revision-test.ts:445:        await timer.tickAsync(5000); // skip until toast gone
tests/engines/registries/acceptance/edit-revision/revision-test.ts:448:        await click('[data-test-delete-button]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:449:        await click('[data-test-confirm-delete]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:470:        await visit(`/registries/revisions/${revision.id}/`);
tests/engines/registries/acceptance/edit-revision/revision-test.ts:473:        await click('[data-test-add-new-button]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:493:        await visit(`/registries/revisions/${revision.id}`);
tests/engines/registries/acceptance/edit-revision/revision-test.ts:498:        await click('[data-test-goto-next-page]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:514:        await click('[data-test-link="review"]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:531:        await click('[data-test-link="1-first-page-of-test-schema"]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:536:        await fillIn(`input[name="${deserializeResponseKey('page-one_short-text')}"]`, 'ditto');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:541:        await click('[data-test-link="justification"]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:542:        await fillIn('textarea[name="revisionJustification"]', 'Tell the world that ditto is the best');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:546:        await click('[data-test-link="review"]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:573:        await visit(`/registries/revisions/${revision.id}/review`);
tests/engines/registries/acceptance/edit-revision/revision-test.ts:574:        await click('[data-test-submit-revision]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:583:        await click('[data-test-continue-editing]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:586:        await click('[data-test-submit-continue-button]');
tests/engines/registries/acceptance/edit-revision/revision-test.ts:606:        await visit(`/registries/revisions/${revision.id}`);
tests/engines/registries/acceptance/index/index-test.ts:20:        await visit('/registries');
tests/engines/registries/acceptance/index/index-test.ts:21:        await percySnapshot(assert);
tests/engines/registries/acceptance/landing-page-test.ts:27:        await visit('/registries/');
tests/engines/registries/acceptance/landing-page-test.ts:29:        await percySnapshot(assert);
tests/engines/registries/acceptance/landing-page-test.ts:33:        await visit('/registries/discover/');
tests/engines/registries/acceptance/landing-page-test.ts:35:        await percySnapshot(assert);
tests/engines/registries/acceptance/my-registrations-page-test.ts:26:        await visit('/registries/my-registrations');
tests/engines/registries/acceptance/my-registrations-page-test.ts:36:        await percySnapshot(assert);
tests/engines/registries/acceptance/my-registrations-page-test.ts:38:        await click('[data-test-my-registrations-nav="drafts"]');
tests/engines/registries/acceptance/my-registrations-page-test.ts:47:        await percySnapshot(
tests/engines/registries/acceptance/overview/comments-test.ts:21:        await visit(`/${registration.id}/comments`);
tests/engines/registries/acceptance/overview/comments-test.ts:22:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/files-test.ts:22:        await visit(`/${registration.id}/files/osfstowage`);
tests/engines/registries/acceptance/overview/files-test.ts:37:        await visit(`/${registration.id}/files`);
tests/engines/registries/acceptance/overview/files-test.ts:38:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/files-test.ts:61:        await click('[data-test-file-download-share-trigger]');
tests/engines/registries/acceptance/overview/files-test.ts:75:        await visit(`/${registration.id}/files`);
tests/engines/registries/acceptance/overview/files-test.ts:76:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/form-schemas-test.ts:21:            await visit(`/${registration.id}`);
tests/engines/registries/acceptance/overview/form-schemas-test.ts:25:            await percySnapshot(msg);
tests/engines/registries/acceptance/overview/index-test.ts:44:        await visit(`/${this.registration.id}/`);
tests/engines/registries/acceptance/overview/index-test.ts:45:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/index-test.ts:52:        const analyticsEngine = await loadEngine('analytics-page', 'guid-registration.analytics');
tests/engines/registries/acceptance/overview/index-test.ts:83:            await visit(`/${this.registration.id}/`);
tests/engines/registries/acceptance/overview/index-test.ts:85:            await click(`[data-analytics-name="${testCase.name}"]`);
tests/engines/registries/acceptance/overview/index-test.ts:86:            await percySnapshot(`Registries sidenav - ${testCase.name}`);
tests/engines/registries/acceptance/overview/index-test.ts:99:            await visit(`/${this.registration.id}/`);
tests/engines/registries/acceptance/overview/index-test.ts:114:        await visit(`/${this.registration.id}`);
tests/engines/registries/acceptance/overview/index-test.ts:121:        await visit(`/${this.registration.id}`);
tests/engines/registries/acceptance/overview/index-test.ts:125:        await visit(`/${this.registration.id}`);
tests/engines/registries/acceptance/overview/index-test.ts:134:        await visit(url);
tests/engines/registries/acceptance/overview/index-test.ts:135:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/index-test.ts:150:        await visit(url);
tests/engines/registries/acceptance/overview/index-test.ts:151:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:45:        await visit(`/${registration.id}?mode=moderator`);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:55:        await click('[data-test-moderation-dropdown-button]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:71:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:72:        await click('[data-test-moderation-dropdown-decision-checkbox="accept_submission"]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:73:        await click('[data-test-moderation-dropdown-submit]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:74:        await click('[data-test-state-button]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:94:        await visit(`/${registration.id}?mode=moderator`);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:95:        await click('[data-test-moderation-dropdown-button]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:96:        await click('[data-test-moderation-dropdown-decision-checkbox="reject_submission"]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:97:        await click('[data-test-moderation-dropdown-submit]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:116:        await visit(`/${registration.id}?mode=moderator`);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:128:        await click('[data-test-moderation-dropdown-button]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:140:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:141:        await click('[data-test-moderation-dropdown-decision-checkbox="force_withdraw"]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:142:        await click('[data-test-moderation-dropdown-submit]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:154:        await visit(`/${registration.id}?mode=moderator`);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:166:        await click('[data-test-moderation-dropdown-button]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:182:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:183:        await click('[data-test-moderation-dropdown-decision-checkbox="accept_withdrawal"]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:184:        await click('[data-test-moderation-dropdown-submit]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:196:        await visit(`/${registration.id}?mode=moderator`);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:197:        await click('[data-test-moderation-dropdown-button]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:198:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:199:        await click('[data-test-moderation-dropdown-decision-checkbox="reject_withdrawal"]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:200:        await click('[data-test-moderation-dropdown-submit]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:201:        await click('[data-test-state-button]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:221:        await visit(`/${registration.id}?mode=moderator`);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:222:        await click('[data-test-state-button]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:234:        await click('[data-test-moderation-dropdown-button]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:246:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:247:        await click('[data-test-moderation-dropdown-decision-checkbox="force_withdraw"]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:248:        await click('[data-test-moderation-dropdown-submit]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:260:        await visit(`/${registration.id}?mode=moderator`);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:261:        await click('[data-test-state-button]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:277:        await click('[data-test-moderation-dropdown-button]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:289:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:290:        await click('[data-test-moderation-dropdown-decision-checkbox="force_withdraw"]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:291:        await click('[data-test-moderation-dropdown-submit]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:303:        await visit(`/${registration.id}?mode=moderator`);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:319:        await click('[data-test-moderation-dropdown-button]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:331:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:332:        await click('[data-test-moderation-dropdown-decision-checkbox="force_withdraw"]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:333:        await click('[data-test-moderation-dropdown-submit]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:359:        await visit(`/${registration.id}?mode=moderator&revisionId=${revision.id}`);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:363:        await click('[data-test-moderation-dropdown-button]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:376:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:377:        await click('[data-test-moderation-dropdown-decision-checkbox="accept"]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:378:        await click('[data-test-moderation-dropdown-submit]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:407:        await visit(`/${registration.id}?mode=moderator&revisionId=${revision.id}`);
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:411:        await click('[data-test-moderation-dropdown-button]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:412:        await click('[data-test-moderation-dropdown-decision-checkbox="moderator_reject"]');
tests/engines/registries/acceptance/overview/moderator-mode-test.ts:413:        await click('[data-test-moderation-dropdown-submit]');
tests/engines/registries/acceptance/overview/overview-test.ts:87:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:93:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/overview-test.ts:100:            await visit(`/${this.registration.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:111:            await visit(`/${this.registration.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:121:                await visit(`/${this.registration.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:131:                await visit(`/${this.registration.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:146:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:149:        await click('[data-test-edit-button="tags"]');
tests/engines/registries/acceptance/overview/overview-test.ts:156:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:161:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:179:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:188:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:193:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:198:        await click('[data-test-edit-button="affiliated institutions"]');
tests/engines/registries/acceptance/overview/overview-test.ts:203:        await click(`[data-test-institution-button="add-${user.institutionIds[0]}"]`);
tests/engines/registries/acceptance/overview/overview-test.ts:204:        await click(`[data-test-institution-button="add-${user.institutionIds[1]}"]`);
tests/engines/registries/acceptance/overview/overview-test.ts:207:        await click('[data-test-save-edits]');
tests/engines/registries/acceptance/overview/overview-test.ts:213:        await click('[data-test-edit-button="affiliated institutions"]');
tests/engines/registries/acceptance/overview/overview-test.ts:215:        await click(`[data-test-institution-button="remove-${user.institutionIds[0]}"]`);
tests/engines/registries/acceptance/overview/overview-test.ts:216:        await click(`[data-test-institution-button="remove-${user.institutionIds[1]}"]`);
tests/engines/registries/acceptance/overview/overview-test.ts:219:        await click('[data-test-save-edits]');
tests/engines/registries/acceptance/overview/overview-test.ts:225:        await click('[data-test-edit-button="affiliated institutions"]');
tests/engines/registries/acceptance/overview/overview-test.ts:227:        await click(`[data-test-institution-button="add-${user.institutionIds[0]}"]`);
tests/engines/registries/acceptance/overview/overview-test.ts:228:        await click(`[data-test-institution-button="add-${user.institutionIds[1]}"]`);
tests/engines/registries/acceptance/overview/overview-test.ts:231:        await click('[data-test-discard-edits]');
tests/engines/registries/acceptance/overview/overview-test.ts:250:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:255:        await click('[data-test-toggle-anchor-nav-button]');
tests/engines/registries/acceptance/overview/overview-test.ts:270:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:290:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:294:        await click('[data-test-edit-button="description"]');
tests/engines/registries/acceptance/overview/overview-test.ts:299:        await fillIn('[data-test-description-input] textarea', newDescription);
tests/engines/registries/acceptance/overview/overview-test.ts:301:        await click('[data-test-save-edits]');
tests/engines/registries/acceptance/overview/overview-test.ts:309:        await click('[data-test-node-description-button]');
tests/engines/registries/acceptance/overview/overview-test.ts:315:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:319:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:329:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:331:        await click('[data-test-edit-button="category"]');
tests/engines/registries/acceptance/overview/overview-test.ts:335:        await untrackedClick('[data-test-select-category] div[class~="ember-power-select-trigger"]');
tests/engines/registries/acceptance/overview/overview-test.ts:338:        await selectChoose('[data-test-select-category]', capitalize(NodeCategory.Instrumentation));
tests/engines/registries/acceptance/overview/overview-test.ts:339:        await click('[data-test-save-edits]');
tests/engines/registries/acceptance/overview/overview-test.ts:347:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:353:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:362:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:364:        await click('[data-test-edit-button="publication DOI"]');
tests/engines/registries/acceptance/overview/overview-test.ts:370:        await fillIn('[data-test-publication-doi-input] input', invalidDoi);
tests/engines/registries/acceptance/overview/overview-test.ts:371:        await click('[data-test-save-publication-doi]');
tests/engines/registries/acceptance/overview/overview-test.ts:374:        await untrackedClick('[data-test-cancel-publication-doi]');
tests/engines/registries/acceptance/overview/overview-test.ts:376:        await click('[data-test-edit-button="publication DOI"]');
tests/engines/registries/acceptance/overview/overview-test.ts:380:        await fillIn('[data-test-publication-doi-input] input', publicationDoi);
tests/engines/registries/acceptance/overview/overview-test.ts:381:        await click('[data-test-save-publication-doi]');
tests/engines/registries/acceptance/overview/overview-test.ts:388:        await click('[data-test-edit-button="publication DOI"]');
tests/engines/registries/acceptance/overview/overview-test.ts:389:        await fillIn('[data-test-publication-doi-input] input', '');
tests/engines/registries/acceptance/overview/overview-test.ts:390:        await click('[data-test-save-publication-doi]');
tests/engines/registries/acceptance/overview/overview-test.ts:398:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:404:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:413:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:418:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:423:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:428:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:429:        await click('[data-test-edit-button="doi"]');
tests/engines/registries/acceptance/overview/overview-test.ts:433:        await click('[data-test-edit-button="doi"]');
tests/engines/registries/acceptance/overview/overview-test.ts:440:        await click('[data-test-create-doi]');
tests/engines/registries/acceptance/overview/overview-test.ts:452:        await visit(`/${nonPublicReg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:466:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:468:        await click('[data-test-edit-button="subjects"]');
tests/engines/registries/acceptance/overview/overview-test.ts:475:        await untrackedClick('[data-test-subject-browse-label="1"]');
tests/engines/registries/acceptance/overview/overview-test.ts:479:        await untrackedClick('[data-test-subject-widget-search-tab]');
tests/engines/registries/acceptance/overview/overview-test.ts:483:        await fillIn('[data-test-subject-searchbox]', 'Soda');
tests/engines/registries/acceptance/overview/overview-test.ts:485:        await settled();
tests/engines/registries/acceptance/overview/overview-test.ts:488:        await untrackedClick('[data-test-subject-search-result-checkbox="Soda and soft drink studies"]');
tests/engines/registries/acceptance/overview/overview-test.ts:490:        await click('[data-test-save-edits]');
tests/engines/registries/acceptance/overview/overview-test.ts:526:        await visit(`/${regOne.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:539:        await visit(`/${regTwo.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:551:        await click('[data-test-edit-button="metadata"]');
tests/engines/registries/acceptance/overview/overview-test.ts:554:        await fillIn('[data-test-provider-metadata-edit-input="Field 1"]', 'Value 1');
tests/engines/registries/acceptance/overview/overview-test.ts:555:        await fillIn('[data-test-provider-metadata-edit-input="Field 2"]', 'Value 2');
tests/engines/registries/acceptance/overview/overview-test.ts:556:        await click('[data-test-save-edits]');
tests/engines/registries/acceptance/overview/overview-test.ts:561:        await click('[data-test-edit-button="metadata"]');
tests/engines/registries/acceptance/overview/overview-test.ts:564:        await fillIn('[data-test-provider-metadata-edit-input="Field 1"]', 'Bad valu 1');
tests/engines/registries/acceptance/overview/overview-test.ts:565:        await fillIn('[data-test-provider-metadata-edit-input="Field 2"]', 'Bad valu 2');
tests/engines/registries/acceptance/overview/overview-test.ts:566:        await click('[data-test-discard-edits]');
tests/engines/registries/acceptance/overview/overview-test.ts:572:        await visit(`/${regThree.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:576:        await visit(`/${regFour.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:592:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:597:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:601:        await click('[data-test-edit-button="license"]');
tests/engines/registries/acceptance/overview/overview-test.ts:604:        await selectSearch('[data-test-power-select-dropdown]', 'Mozilla');
tests/engines/registries/acceptance/overview/overview-test.ts:606:        await selectSearch('[data-test-power-select-dropdown]', 'No');
tests/engines/registries/acceptance/overview/overview-test.ts:608:        await selectChoose('[data-test-power-select-dropdown]', 'No license');
tests/engines/registries/acceptance/overview/overview-test.ts:615:        await fillIn('[data-test-required-field="copyrightHolders"]', 'Jane Doe, John Doe');
tests/engines/registries/acceptance/overview/overview-test.ts:616:        await click('[data-test-save-license]');
tests/engines/registries/acceptance/overview/overview-test.ts:642:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/overview-test.ts:668:        await visit(`/--node/${registeredFrom.id}/registrations`);
tests/engines/registries/acceptance/overview/overview-test.ts:672:        await click(`[data-test-node-title="${reg.id}"]`);
tests/engines/registries/acceptance/overview/overview-test.ts:691:        await visit(`/${reg.id}`);
tests/engines/registries/acceptance/overview/overview-test.ts:694:        await click('[data-test-unregistered-contributor-name]');
tests/engines/registries/acceptance/overview/overview-test.ts:695:        await percySnapshot('Claim unregistered contributor for logged out users, no validation errors');
tests/engines/registries/acceptance/overview/overview-test.ts:698:        await fillIn('[data-test-email-input]', 'lmnop');
tests/engines/registries/acceptance/overview/overview-test.ts:701:        await percySnapshot('Claim unregistered contributor for logged out users, with validation errors');
tests/engines/registries/acceptance/overview/overview-test.ts:702:        await fillIn('[data-test-email-input]', 'lmnop@abd.xyz');
tests/engines/registries/acceptance/overview/overview-test.ts:705:        await click('[data-test-modal-cancel-button]');
tests/engines/registries/acceptance/overview/overview-test.ts:721:        await visit(`/${reg.id}`);
tests/engines/registries/acceptance/overview/overview-test.ts:723:        await click('[data-test-unregistered-contributor-name]');
tests/engines/registries/acceptance/overview/overview-test.ts:724:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/overview-test.ts:729:        await click('[data-test-modal-cancel-button]');
tests/engines/registries/acceptance/overview/revision-test.ts:41:        await visit(`/${registration.id}?revisionId=${revision.id}`);
tests/engines/registries/acceptance/overview/revision-test.ts:44:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/topbar-test.ts:99:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/topbar-test.ts:108:        await visit(`/${withdrawnReg.id}/`);
tests/engines/registries/acceptance/overview/topbar-test.ts:117:        await visit(`/${archivingReg.id}/`);
tests/engines/registries/acceptance/overview/topbar-test.ts:128:        await visit(`/${anonymousReg.id}/`);
tests/engines/registries/acceptance/overview/topbar-test.ts:129:        await percySnapshot(assert);
tests/engines/registries/acceptance/overview/topbar-test.ts:146:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/topbar-test.ts:152:        await triggerEvent('[data-test-bookmarks-button]', 'mouseenter');
tests/engines/registries/acceptance/overview/topbar-test.ts:157:        await click('[data-test-bookmarks-button]');
tests/engines/registries/acceptance/overview/topbar-test.ts:164:        await triggerEvent('[data-test-bookmarks-button]', 'mouseenter');
tests/engines/registries/acceptance/overview/topbar-test.ts:169:        await click('[data-test-bookmarks-button]');
tests/engines/registries/acceptance/overview/topbar-test.ts:181:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/topbar-test.ts:185:        await triggerEvent('[data-test-social-sharing-button]', 'mouseenter');
tests/engines/registries/acceptance/overview/topbar-test.ts:191:        await click('[data-test-social-sharing-button]');
tests/engines/registries/acceptance/overview/topbar-test.ts:204:        await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/topbar-test.ts:208:        await triggerEvent('[data-test-forks-dropdown-button]', 'mouseenter');
tests/engines/registries/acceptance/overview/topbar-test.ts:214:        await click('[data-test-forks-dropdown-button]');
tests/engines/registries/acceptance/overview/topbar-test.ts:220:        await click('[data-test-fork-registration]');
tests/engines/registries/acceptance/overview/topbar-test.ts:233:            await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/topbar-test.ts:238:                await click('[data-test-state-button]');
tests/engines/registries/acceptance/overview/topbar-test.ts:270:            await visit(`/${reg.id}/`);
tests/engines/registries/acceptance/overview/topbar-test.ts:275:            await click('[data-test-state-button]');
tests/engines/registries/acceptance/overview/topbar-test.ts:300:            await visit(`/${reg.id}?mode=moderator`);
tests/engines/registries/acceptance/overview/topbar-test.ts:313:            await visit(`/${reg.id}`);
tests/engines/registries/acceptance/overview/topbar-test.ts:327:            await visit(`/${reg.id}?mode=moderator`);
tests/engines/registries/acceptance/overview/topbar-test.ts:333:            await click('[data-test-moderation-dropdown-button]');
tests/engines/registries/acceptance/overview/topbar-test.ts:334:            await percySnapshot(assert);
tests/engines/registries/integration/components/make-decision-dropdown/component-test.ts:75:            await render(hbs`<MakeDecisionDropdown @registration={{this.registration}} />`);
tests/engines/registries/integration/components/make-decision-dropdown/component-test.ts:76:            await click('[data-test-moderation-dropdown-button]');
tests/engines/registries/integration/components/navbar/component-test.ts:10:        await render(hbs`
tests/engines/registries/integration/components/navbar/component-test.ts:26:        await render(hbs`
tests/engines/registries/integration/components/navbar/component-test.ts:41:        await click('[data-test-id="1"]');
tests/engines/registries/integration/components/navbar/component-test.ts:42:        await click('[data-test-id="2"]');
tests/engines/registries/integration/components/page-link/component-test.ts:50:        await render(hbs`
tests/engines/registries/integration/components/page-link/component-test.ts:75:        await render(hbs`
tests/engines/registries/integration/components/page-link/component-test.ts:100:        await render(hbs`
tests/engines/registries/integration/components/page-link/component-test.ts:125:        await render(hbs`
tests/engines/registries/integration/components/page-link/component-test.ts:142:        await render(hbs`
tests/engines/registries/integration/components/page-link/component-test.ts:159:        await render(hbs`
tests/engines/registries/integration/components/registries-navbar/component-test.ts:96:        await render(hbs`<RegistriesNavbar />`);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:104:        await render(hbs`<RegistriesNavbar />`);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:105:        await percySnapshot(assert);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:124:        await render(hbs`<RegistriesNavbar @campaign="osf-registries" />`);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:125:        await percySnapshot(assert);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:144:        await render(hbs`<RegistriesNavbar />`);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:145:        await percySnapshot(assert);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:159:        await render(hbs`<RegistriesNavbar />`);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:160:        await percySnapshot(assert);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:178:        await render(hbs`<RegistriesNavbar />`);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:179:        await percySnapshot(assert);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:194:        await render(hbs`<RegistriesNavbar />`);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:195:        await percySnapshot(assert);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:208:        await render(hbs`<RegistriesNavbar />`);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:210:        await click('[data-test-gravatar]');
tests/engines/registries/integration/components/registries-navbar/component-test.ts:211:        await percySnapshot(assert);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:221:        await render(hbs`<RegistriesNavbar />`);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:223:        await click('[data-test-toggle-navbar]');
tests/engines/registries/integration/components/registries-navbar/component-test.ts:224:        await percySnapshot(assert);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:240:        await render(hbs`<RegistriesNavbar />`);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:241:        await percySnapshot(assert);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:251:        await render(hbs`<RegistriesNavbar />`);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:255:        await click('[data-test-service]');
tests/engines/registries/integration/components/registries-navbar/component-test.ts:256:        await percySnapshot(assert);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:264:        await render(hbs`<RegistriesNavbar />`);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:268:        await click('[data-test-gravatar]');
tests/engines/registries/integration/components/registries-navbar/component-test.ts:269:        await percySnapshot(assert);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:281:        await render(hbs`<RegistriesNavbar @provider={{this.provider}} />`);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:282:        await percySnapshot(assert);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:295:        await render(hbs`<RegistriesNavbar @provider={{this.provider}} />`);
tests/engines/registries/integration/components/registries-navbar/component-test.ts:296:        await percySnapshot(assert);
tests/engines/registries/integration/components/side-nav/component-test.ts:42:        await render(hbs`<SideNav />`);
tests/engines/registries/integration/components/side-nav/component-test.ts:48:        await render(hbs`<OpenResource @hasResource={{this.registration.hasData}}
tests/engines/registries/integration/components/side-nav/component-test.ts:58:        await render(hbs`<OpenResource @hasResource={{this.registration.hasAnalyticCode}}
tests/engines/registries/integration/components/side-nav/component-test.ts:68:        await render(hbs`<OpenResource @hasResource={{this.registration.hasMaterials}}
tests/engines/registries/integration/components/side-nav/component-test.ts:78:        await render(hbs`<OpenResource @hasResource={{this.registration.hasPapers}}
tests/engines/registries/integration/components/side-nav/component-test.ts:88:        await render(hbs`<OpenResource @hasResource={{this.registration.hasSupplements}}
tests/engines/registries/integration/components/side-nav/component-test.ts:98:        await render(hbs`<SideNav data-for-a-test="foo" />`);
tests/engines/registries/integration/components/side-nav/component-test.ts:104:        await render(hbs`
tests/engines/registries/integration/components/x-dummy/component-test.ts:13:        await render(hbs`
tests/engines/registries/integration/components/x-dummy/component-test.ts:23:        await waitFor('[data-attr="foo"]');
tests/engines/registries/integration/components/x-dummy/component-test.ts:29:        await render(hbs`
tests/engines/registries/integration/components/x-dummy/component-test.ts:39:        await render(hbs`
tests/engines/registries/integration/discover/discover-test.ts:147:        const engine = await loadEngine('registries', 'registries');
tests/engines/registries/integration/discover/discover-test.ts:159:        await visit('/registries/discover');
tests/engines/registries/integration/discover/discover-test.ts:175:                await visit(`${url}?${params}`);
tests/engines/registries/integration/discover/discover-test.ts:203:        await visit('/registries/discover?page=10');
tests/engines/registries/integration/discover/discover-test.ts:215:        await click('[data-test-source-filter-id="OSF Registries"]');
tests/engines/registries/integration/discover/discover-test.ts:239:        await visit('/registries/discover?page=10');
tests/engines/registries/integration/discover/discover-test.ts:251:        await click('[data-test-sort-dropdown]');
tests/engines/registries/integration/discover/discover-test.ts:252:        await click('[data-test-sort-option-id="1"]');
tests/engines/registries/integration/discover/discover-test.ts:277:        await visit('/registries/discover?page=10');
tests/engines/registries/integration/discover/discover-test.ts:289:        await fillIn('[data-test-search-box]', 'Test Query');
tests/engines/registries/integration/discover/discover-test.ts:315:        await visit('/registries/discover?page=10&q=Testing');
tests/engines/registries/integration/discover/discover-test.ts:327:        await triggerEvent('[data-test-search-form]', 'submit');
tests/engines/registries/integration/discover/discover-test.ts:359:        await visit('/registries/discover');
tests/engines/registries/integration/discover/discover-test.ts:367:        await click('[data-test-page-number="2"]');
tests/engines/registries/integration/index/index-test.ts:43:                        await fillIn('[data-test-search-box]', 'My Query');
tests/engines/registries/integration/index/index-test.ts:44:                        await click('[data-test-search-button]');
tests/engines/registries/integration/index/index-test.ts:56:                        await fillIn('[data-test-search-box]', 'My Query');
tests/engines/registries/integration/index/index-test.ts:57:                        await triggerKeyEvent('[data-test-search-box]', 'keydown', 13);
tests/engines/registries/integration/index/index-test.ts:144:            await visit('/registries');
tests/engines/registries/integration/index/index-test.ts:146:            await testCase.action();
tests/helpers/engines.ts:45:    const instance: EngineInstance = await router._loadEngineInstance(
tests/helpers/engines.ts:50:    await instance.boot();
tests/helpers/engines.ts:63:        await loadEngine(engine, mountPoint || engine);
tests/helpers/index.ts:19:        await _visit(url);
tests/helpers/index.ts:31:    await settled();
tests/helpers/index.ts:49:    await _click(target);
tests/helpers/require-auth.ts:9:// await visit('settings/profile/name');
tests/integration/analytics-test.ts:21:        await render(hbs`
tests/integration/analytics-test.ts:27:        await click('button');
tests/integration/analytics-test.ts:41:        await render(hbs`
tests/integration/analytics-test.ts:50:        await click('button');
tests/integration/analytics-test.ts:64:        await render(hbs`
tests/integration/analytics-test.ts:70:        await click('button');
tests/integration/analytics-test.ts:71:        await click('button');
tests/integration/analytics-test.ts:91:        await render(hbs`
tests/integration/analytics-test.ts:109:        await click('button');
tests/integration/analytics-test.ts:123:        await render(hbs`
tests/integration/analytics-test.ts:134:        await click('a');
tests/integration/analytics-test.ts:135:        await click('button');
tests/integration/analytics-test.ts:155:        await render(hbs`
tests/integration/analytics-test.ts:170:        await click('button');
tests/integration/analytics-test.ts:171:        await click('a');
tests/integration/analytics-test.ts:172:        await click('a[role="button"]');
tests/integration/analytics-test.ts:173:        await click('input[type="checkbox"]');
tests/integration/analytics-test.ts:174:        await click('#explicit-category');
tests/integration/analytics-test.ts:216:        await render(hbs`
tests/integration/analytics-test.ts:222:        await click('button');
tests/integration/analytics-test.ts:228:        await render(hbs`
tests/integration/analytics-test.ts:234:        await click('button');
tests/integration/components/ancestry-display/component-test.ts:35:        const root = await this.store.findRecord('node', node.id);
tests/integration/components/ancestry-display/component-test.ts:38:        await render(hbs`<AncestryDisplay @node={{this.node}} />`);
tests/integration/components/ancestry-display/component-test.ts:46:        const childNode = await this.store.findRecord('node', child.id);
tests/integration/components/ancestry-display/component-test.ts:49:        await render(hbs`<AncestryDisplay @node={{this.node}} />`);
tests/integration/components/ancestry-display/component-test.ts:53:        await render(hbs`<AncestryDisplay @node={{this.node}} @useLinks={{true}} />`);
tests/integration/components/ancestry-display/component-test.ts:63:        const childNode = await this.store.findRecord('node', child.id);
tests/integration/components/ancestry-display/component-test.ts:69:        await render(hbs`<AncestryDisplay @node={{this.node}} @onAncestorSelect={{this.onAncestorSelect}} />`);
tests/integration/components/ancestry-display/component-test.ts:71:        await click('[data-test-ancestor-button="0"]');
tests/integration/components/ancestry-display/component-test.ts:80:        const childNode = await this.store.findRecord('node', child.id);
tests/integration/components/ancestry-display/component-test.ts:85:        await render(hbs`<AncestryDisplay @node={{this.node}} @delimiter={{this.delimiter}} />`);
tests/integration/components/ancestry-display/component-test.ts:95:        const grandChildNode = await this.store.findRecord('node', grandChild.id);
tests/integration/components/ancestry-display/component-test.ts:97:        await render(hbs`<AncestryDisplay @node={{this.node}} @useLinks={{true}} />`);
tests/integration/components/ancestry-display/component-test.ts:111:        const greatGrandChildNode = await this.store.findRecord('node', greatGrandChild.id);
tests/integration/components/ancestry-display/component-test.ts:113:        await render(hbs`<AncestryDisplay @node={{this.node}} @useLinks={{true}} />`);
tests/integration/components/banners/view-only-link/component-test.ts:10:        await render(hbs`{{banners/view-only-link}}`);
tests/integration/components/carousel/component-test.ts:43:        await render(hbs`<Carousel as |container|>
tests/integration/components/carousel/component-test.ts:79:        await click('[data-test-carousel-button-next]');
tests/integration/components/carousel/component-test.ts:81:        await click('[data-test-carousel-button-next]');
tests/integration/components/carousel/component-test.ts:83:        await click('[data-test-carousel-button-next]');
tests/integration/components/carousel/component-test.ts:89:        await click('[data-test-carousel-button-previous]');
tests/integration/components/carousel/component-test.ts:91:        await click('[data-test-carousel-button-previous]');
tests/integration/components/carousel/component-test.ts:93:        await click('[data-test-carousel-button-previous]');
tests/integration/components/carousel/component-test.ts:99:        await click('[data-test-navigation-item]:nth-of-type(2) > [data-test-navigation-button]');
tests/integration/components/carousel/component-test.ts:101:        await click('[data-test-navigation-item]:nth-of-type(3) > [data-test-navigation-button]');
tests/integration/components/carousel/component-test.ts:103:        await click('[data-test-navigation-item]:nth-of-type(1) > [data-test-navigation-button]');
tests/integration/components/citation-viewer/component-test.ts:25:        const reg = await this.store.findRecord('registration', mirageReg.id);
tests/integration/components/citation-viewer/component-test.ts:28:        await render(hbs`<CitationViewer @citable={{this.node}} />`);
tests/integration/components/citation-viewer/component-test.ts:42:        const reg = await this.store.findRecord('registration', mirageReg.id);
tests/integration/components/citation-viewer/component-test.ts:45:        await render(hbs`<CitationViewer @citable={{this.node}} />`);
tests/integration/components/citation-viewer/component-test.ts:47:        await clickTrigger();
tests/integration/components/citation-viewer/component-test.ts:48:        await typeInSearch(mirageCitationStyle.title!);
tests/integration/components/citation-viewer/component-test.ts:52:        await click('[data-test-citation-search-result]');
tests/integration/components/contributor-list/component-test.ts:44:        const nodeWithContribs = await this.store.findRecord('node', node.id);
tests/integration/components/contributor-list/component-test.ts:47:        await render(hbs`<ContributorList @model={{this.node}} @shouldLinkUsers={{true}} />`);
tests/integration/components/contributor-list/component-test.ts:68:        this.set('node', await reloadNode());
tests/integration/components/contributor-list/component-test.ts:69:        await render(hbs`<ContributorList @model={{this.node}} />`);
tests/integration/components/contributor-list/component-test.ts:73:        this.set('node', await reloadNode());
tests/integration/components/contributor-list/component-test.ts:74:        await render(hbs`<ContributorList @model={{this.node}} />`);
tests/integration/components/contributor-list/component-test.ts:78:        this.set('node', await reloadNode());
tests/integration/components/contributor-list/component-test.ts:79:        await render(hbs`<ContributorList @model={{this.node}} />`);
tests/integration/components/contributor-list/component-test.ts:83:        this.set('node', await reloadNode());
tests/integration/components/contributor-list/component-test.ts:84:        await render(hbs`<ContributorList @model={{this.node}} />`);
tests/integration/components/contributor-list/component-test.ts:90:        this.set('node', await reloadNode());
tests/integration/components/contributor-list/component-test.ts:91:        await render(hbs`<ContributorList @model={{this.node}} />`);
tests/integration/components/contributor-list/component-test.ts:111:        const nodeWithContribs = await this.store.findRecord('node', node.id);
tests/integration/components/contributor-list/component-test.ts:114:        await render(hbs`<ContributorList @model={{this.node}} @shouldTruncate={{false}} />`);
tests/integration/components/contributor-list/component-test.ts:117:        await click('[data-test-load-more-contribs]');
tests/integration/components/contributor-list/component-test.ts:119:        await click('[data-test-load-more-contribs]');
tests/integration/components/contributor-list/component-test.ts:134:        const node = await this.store.findRecord('node', mirageNode.id);
tests/integration/components/contributor-list/component-test.ts:141:        await render(hbs`<ContributorList @model={{this.node}} @shouldTruncate={{false}} />`);
tests/integration/components/contributor-list/component-test.ts:147:        await render(hbs`<ContributorList @model={{this.node}} @shouldTruncate={{true}} />`);
tests/integration/components/contributor-list/component-test.ts:160:        const user = await this.store.findRecord('user', mirageUser.id);
tests/integration/components/contributor-list/component-test.ts:161:        const node = await this.store.findRecord('node', mirageNode.id);
tests/integration/components/contributor-list/component-test.ts:165:        await render(hbs`<ContributorList @model={{this.node}}
tests/integration/components/contributor-list/component-test.ts:174:        this.set('node', await node.reload());
tests/integration/components/contributor-list/component-test.ts:176:        await render(hbs`<ContributorList @model={{this.node}}
tests/integration/components/contributor-list/contributor/component-test.ts:19:        await render(hbs`{{contributor-list/contributor contributor=this.contrib}}`);
tests/integration/components/contributor-list/contributor/component-test.ts:23:        await render(hbs`{{contributor-list/contributor contributor=this.contrib shouldShortenName=true}}`);
tests/integration/components/contributor-list/contributor/component-test.ts:27:        await render(hbs`{{contributor-list/contributor contributor=this.contrib shouldLinkUser=true}}`);
tests/integration/components/contributor-list/unregistered-user/component-test.ts:32:        const user = await this.store.findRecord('user', mirageUser.id);
tests/integration/components/contributor-list/unregistered-user/component-test.ts:35:        await render(hbs`<ContributorList::UnregisteredContributor
tests/integration/components/contributor-list/unregistered-user/component-test.ts:39:        await click('[data-test-unregistered-contributor-name]');
tests/integration/components/contributor-list/unregistered-user/component-test.ts:53:        await render(hbs`<ContributorList::UnregisteredContributor
tests/integration/components/contributor-list/unregistered-user/component-test.ts:57:        await click('[data-test-unregistered-contributor-name]');
tests/integration/components/contributor-list/unregistered-user/component-test.ts:69:        await click('[data-test-modal-claim-button]');
tests/integration/components/contributor-list/unregistered-user/component-test.ts:74:        await fillIn('[data-test-email-input]', 'lou.bega@bega.lou');
tests/integration/components/contributor-list/unregistered-user/component-test.ts:78:        await fillIn('[data-test-email-input]', 'lou bega');
tests/integration/components/contributors/component-test.ts:43:        const registrationModel = await this.store.findRecord('draft-registration', registration.id);
tests/integration/components/contributors/component-test.ts:46:        await render(hbs`<Contributors::Widget @draftRegistration={{this.draftRegistration}} />`);
tests/integration/components/contributors/component-test.ts:48:        await a11yAudit(this.element);
tests/integration/components/contributors/component-test.ts:57:        const registrationModel = await this.store.findRecord('draft-registration', registration.id);
tests/integration/components/contributors/component-test.ts:61:        await render(
tests/integration/components/contributors/component-test.ts:78:        await a11yAudit(this.element);
tests/integration/components/contributors/component-test.ts:87:        const registrationModel = await this.store.findRecord('draft-registration', registration.id);
tests/integration/components/contributors/component-test.ts:90:        await render(
tests/integration/components/contributors/component-test.ts:106:        await a11yAudit(this.element);
tests/integration/components/contributors/component-test.ts:112:        const currentUserModel = await this.store.findRecord('user', 'sprout');
tests/integration/components/contributors/component-test.ts:131:        const registrationModel = await this.store.findRecord('draft-registration', draftRegistration.id);
tests/integration/components/contributors/component-test.ts:133:        await render(
tests/integration/components/contributors/component-test.ts:146:        await click('[data-test-contributor-remove-self="Remove"] > button');
tests/integration/components/contributors/component-test.ts:147:        await click('[data-test-confirm-delete]');
tests/integration/components/contributors/component-test.ts:164:        const registrationModel = await this.store.findRecord('draft-registration', draftRegistration.id);
tests/integration/components/contributors/component-test.ts:167:        await render(
tests/integration/components/contributors/component-test.ts:179:        await clickTrigger();
tests/integration/components/contributors/component-test.ts:180:        await selectChoose('[data-test-contributor-permission]', 'Read');
tests/integration/components/contributors/component-test.ts:181:        await click('[data-test-contributor-citation-checkbox]');
tests/integration/components/contributors/component-test.ts:202:        const registrationModel = await this.store.findRecord('draft-registration', draftRegistration.id);
tests/integration/components/contributors/component-test.ts:204:        await render(
tests/integration/components/contributors/component-test.ts:215:        await click(removeButton);
tests/integration/components/contributors/component-test.ts:216:        await click('[data-test-confirm-delete]');
tests/integration/components/contributors/component-test.ts:240:        const registrationModel = await this.store.findRecord('draft-registration', draftRegistration.id);
tests/integration/components/contributors/component-test.ts:242:        await render(
tests/integration/components/contributors/component-test.ts:248:        await reorder(
tests/integration/components/contributors/component-test.ts:273:        const registrationModel = await this.store.findRecord('draft-registration', draftRegistration.id);
tests/integration/components/contributors/component-test.ts:275:        await render(
tests/integration/components/contributors/component-test.ts:281:        await triggerKeyEvent(
tests/integration/components/contributors/component-test.ts:286:        await triggerKeyEvent(
tests/integration/components/contributors/component-test.ts:291:        await triggerKeyEvent(
tests/integration/components/contributors/component-test.ts:307:        const registrationModel = await this.store.findRecord('draft-registration', draftRegistration.id);
tests/integration/components/contributors/component-test.ts:311:        await render(hbs`
tests/integration/components/contributors/component-test.ts:324:        await fillIn('[data-test-user-search-input]', 'Bae');
tests/integration/components/contributors/component-test.ts:325:        await click('[data-test-user-search-button]');
tests/integration/components/contributors/component-test.ts:326:        await selectChoose(`[data-test-user-permission="${suzy.id}"]`, 'Read');
tests/integration/components/contributors/component-test.ts:327:        await click(`[data-test-user-citation-checkbox="${suzy.id}"]`);
tests/integration/components/contributors/component-test.ts:328:        await click(`[data-test-add-contributor-button="${suzy.id}"`);
tests/integration/components/contributors/component-test.ts:339:        const registrationModel = await this.store.findRecord('draft-registration', draftRegistration.id);
tests/integration/components/contributors/component-test.ts:343:        await render(hbs`
tests/integration/components/contributors/component-test.ts:351:        await click('[data-test-add-unregistered-contributor-button]');
tests/integration/components/contributors/component-test.ts:355:        await click('[data-test-add-button]');
tests/integration/components/contributors/component-test.ts:360:        await fillIn('[data-test-email-input] > div > input', 'some person');
tests/integration/components/contributors/component-test.ts:362:        await fillIn('[data-test-email-input] > div > input', 'unregcontrib@cos.io');
tests/integration/components/contributors/component-test.ts:364:        await fillIn('[data-test-full-name-input] > div > input', '     ');
tests/integration/components/contributors/component-test.ts:366:        await fillIn('[data-test-full-name-input] > div > input', 'Shin Sekyung');
tests/integration/components/contributors/component-test.ts:368:        await selectChoose('[data-test-select-permission]', 'Read');
tests/integration/components/contributors/component-test.ts:369:        await click('[data-test-is-bibliographic]');
tests/integration/components/contributors/component-test.ts:373:        await click('[data-test-add-button]');
tests/integration/components/cookie-banner/component-test.ts:26:        await render(hbs`{{cookie-banner}}`);
tests/integration/components/copyable-text/component-test.ts:10:        await render(hbs`{{copyable-text text='foo'}}`);
tests/integration/components/dashboard-item/component-test.ts:18:        const project = await this.store.findRecord('node', node.id, { include: 'bibliographic_contributors' });
tests/integration/components/dashboard-item/component-test.ts:21:        await render(hbs`<DashboardItem @node={{this.node}} />`);
tests/integration/components/debouncer/component-test.ts:17:        await render(hbs`
tests/integration/components/debouncer/component-test.ts:32:        await click('[data-test-debounced]');
tests/integration/components/delete-button/component-test.ts:10:        await render(hbs`
tests/integration/components/delete-button/component-test.ts:20:        await click('[data-test-delete-button]');
tests/integration/components/delete-button/component-test.ts:25:        await click('[data-test-confirm-delete]');
tests/integration/components/delete-node-modal/component-test.ts:19:        await render(hbs`{{delete-node-modal closeModal=closeModal delete=delete}}`);
tests/integration/components/delete-node-modal/component-test.ts:24:        await render(hbs`{{delete-node-modal closeModal=closeModal delete=delete openModal=true}}`);
tests/integration/components/draft-registration-card/component-test.ts:32:        const draftRegistration = await this.store.findRecord('draft-registration', draft.id);
tests/integration/components/draft-registration-card/component-test.ts:35:        await render(hbs`<DraftRegistrationCard @draftRegistration={{this.draftRegistration}} />`);
tests/integration/components/draft-registration-card/component-test.ts:64:        const draftRegistration = await this.store.findRecord('draft-registration', draft.id);
tests/integration/components/draft-registration-card/component-test.ts:67:        await render(hbs`<DraftRegistrationCard @draftRegistration={{this.draftRegistration}} />`);
tests/integration/components/draft-registration-card/component-test.ts:76:        const draftRegistration = await this.store.findRecord('draft-registration', draft.id);
tests/integration/components/draft-registration-card/component-test.ts:79:        await render(hbs`<DraftRegistrationCard @draftRegistration={{this.draftRegistration}} />`);
tests/integration/components/draft-registration-card/component-test.ts:87:        await render(hbs`<DraftRegistrationCard />`);
tests/integration/components/dropzone-widget/component-test.ts:10:        await render(hbs`{{dropzone-widget}}`);
tests/integration/components/expandable-preview/component-test.ts:15:        await render(hbs`
tests/integration/components/expandable-preview/component-test.ts:26:        await render(hbs`
tests/integration/components/expandable-preview/component-test.ts:40:        await click('[data-test-collapse-button]');
tests/integration/components/expandable-preview/component-test.ts:48:        await render(hbs`
tests/integration/components/file-browser/breadcrumbs/component-test.ts:36:        await render(hbs`
tests/integration/components/file-browser/breadcrumbs/component-test.ts:61:        await render(hbs`
tests/integration/components/file-browser/breadcrumbs/component-test.ts:90:        await render(hbs`
tests/integration/components/file-browser/component-test.ts:49:            const node = await this.store.findRecord('node', this.mirageNode.id);
tests/integration/components/file-browser/component-test.ts:50:            const storageProviders = await node.files;
tests/integration/components/file-browser/component-test.ts:52:            await render(hbs`
tests/integration/components/file-browser/component-test.ts:64:            await click(`[data-test-file-list-link="${this.topLevelFolder.id}"]`);
tests/integration/components/file-browser/component-test.ts:70:            await click('[data-test-go-to-parent]');
tests/integration/components/file-browser/component-test.ts:77:            await click(`[data-test-file-list-link="${this.topLevelFolder.id}"]`);
tests/integration/components/file-browser/component-test.ts:79:            await click('[data-test-breadcrumb="osfstorage"]');
tests/integration/components/file-browser/component-test.ts:89:            const node = await this.store.findRecord('node', this.mirageNode.id);
tests/integration/components/file-browser/component-test.ts:90:            const storageProviders = await node.files;
tests/integration/components/file-browser/component-test.ts:92:            await render(hbs`
tests/integration/components/file-browser/component-test.ts:101:            await click(`[data-test-select-folder="${this.topLevelFolder.id}"]`);
tests/integration/components/file-browser/component-test.ts:102:            await click(`[data-test-select-file="${this.topLevelFiles[0].id}"]`);
tests/integration/components/file-browser/component-test.ts:109:            await click(`[data-test-select-file="${this.topLevelFiles[0].id}"]`);
tests/integration/components/file-browser/component-test.ts:113:            await click('[data-test-clear-file-selection]');
tests/integration/components/file-browser/component-test.ts:123:            const registration = await this.store.findRecord('registration', mirageRegistration.id);
tests/integration/components/file-browser/component-test.ts:124:            const storageProviders = await registration.files;
tests/integration/components/file-browser/component-test.ts:126:            await render(hbs`
tests/integration/components/file-browser/component-test.ts:138:            const node = await this.store.findRecord('node', this.mirageNode.id);
tests/integration/components/file-browser/component-test.ts:139:            const storageProviders = await node.files;
tests/integration/components/file-browser/component-test.ts:141:            await render(hbs`
tests/integration/components/file-browser/component-test.ts:146:            await click('[data-test-file-help]');
tests/integration/components/file-browser/component-test.ts:168:            const registration = await this.store.findRecord('registration', mirageRegistration.id);
tests/integration/components/file-browser/component-test.ts:169:            const storageProviders = await registration.files;
tests/integration/components/file-browser/component-test.ts:171:            await render(hbs`
tests/integration/components/file-browser/component-test.ts:176:            await click('[data-test-file-help]');
tests/integration/components/file-browser/component-test.ts:197:            const node = await this.store.findRecord('node', this.mirageNode.id);
tests/integration/components/file-browser/component-test.ts:198:            const storageProviders = await node.files;
tests/integration/components/file-browser/component-test.ts:200:            await render(hbs`
tests/integration/components/file-browser/component-test.ts:205:            await click('[data-test-add-new-trigger]');
tests/integration/components/file-browser/component-test.ts:208:            await click('[data-test-create-folder]');
tests/integration/components/file-browser/component-test.ts:218:            await fillIn('[data-test-create-folder-main] input', '     ');
tests/integration/components/file-browser/component-test.ts:224:            await fillIn('[data-test-create-folder-main] input', 'new fo/der?');
tests/integration/components/file-browser/component-test.ts:231:            await fillIn('[data-test-create-folder-main] input', 'new folder.');
tests/integration/components/file-browser/component-test.ts:237:            await fillIn('[data-test-create-folder-main] input', 'Shiny New Folder');
tests/integration/components/file-browser/component-test.ts:241:            await click('[data-test-create-folder-button]');
tests/integration/components/file-browser/component-test.ts:251:            const node = await this.store.findRecord('node', this.mirageNode.id);
tests/integration/components/file-browser/component-test.ts:252:            const storageProviders = await node.files;
tests/integration/components/file-browser/component-test.ts:254:            await render(hbs`
tests/integration/components/file-browser/component-test.ts:259:            await click('[data-test-add-new-trigger]');
tests/integration/components/file-browser/component-test.ts:260:            await click('[data-test-create-folder]');
tests/integration/components/file-browser/component-test.ts:266:            await triggerKeyEvent('[data-test-create-folder-main] input', 'keyup', 'Enter');
tests/integration/components/file-browser/component-test.ts:270:            await fillIn('[data-test-create-folder-main] input', '     ');
tests/integration/components/file-browser/component-test.ts:274:            await triggerKeyEvent('[data-test-create-folder-main] input', 'keyup', 'Enter');
tests/integration/components/file-browser/component-test.ts:278:            await fillIn('[data-test-create-folder-main] input', 'Shiny New Folder');
tests/integration/components/file-browser/component-test.ts:281:            await triggerKeyEvent('[data-test-create-folder-main] input', 'keyup', 'Enter');
tests/integration/components/file-browser/file-item/component-test.ts:63:            await render(
tests/integration/components/file-browser/file-item/component-test.ts:74:            await click('[data-test-file-download-share-trigger]');
tests/integration/components/file-browser/file-item/component-test.ts:83:            await render(
tests/integration/components/file-browser/file-item/component-test.ts:94:            await click('[data-test-file-download-share-trigger]');
tests/integration/components/file-browser/file-item/component-test.ts:103:        await render(
tests/integration/components/file-browser/file-item/component-test.ts:116:        await render(
tests/integration/components/file-browser/file-rename-modal/component-test.ts:55:            await render(
tests/integration/components/file-browser/file-rename-modal/component-test.ts:77:            await fillIn('[data-test-user-input]', 'What is the great globe itself but a Loose-Fish?');
tests/integration/components/file-browser/file-rename-modal/component-test.ts:82:            await fillIn('[data-test-user-input]', '      ');
tests/integration/components/file-browser/file-rename-modal/component-test.ts:87:            await fillIn('[data-test-user-input]', 'This will error.');
tests/integration/components/file-browser/file-rename-modal/component-test.ts:92:            await fillIn('[data-test-user-input]', 'Save this file');
tests/integration/components/file-browser/file-rename-modal/component-test.ts:99:            await render(
tests/integration/components/file-browser/file-rename-modal/component-test.ts:108:            await triggerKeyEvent('[data-test-user-input]', 'keydown', 'Enter');
tests/integration/components/file-browser/file-rename-modal/component-test.ts:111:            await fillIn('[data-test-user-input]', '');
tests/integration/components/file-browser/file-rename-modal/component-test.ts:115:            await triggerKeyEvent('[data-test-user-input]', 'keydown', 'Enter');
tests/integration/components/file-browser/file-rename-modal/component-test.ts:118:            await fillIn('[data-test-user-input]', 'New File Name');
tests/integration/components/file-browser/file-rename-modal/component-test.ts:120:            await triggerKeyEvent('[data-test-user-input]', 'keydown', 'Enter');
tests/integration/components/file-browser/folder-item/component-test.ts:58:            await render(hbs`<FileBrowser::FolderItem @manager={{this.manager}} @item={{this.item}} />`);
tests/integration/components/file-browser/folder-item/component-test.ts:63:            await click('[data-test-file-download-share-trigger]');
tests/integration/components/file-browser/folder-item/component-test.ts:70:            await render(hbs`<FileBrowser::FolderItem @manager={{this.manager}} @item={{this.item}} />`);
tests/integration/components/file-browser/folder-item/component-test.ts:75:            await click('[data-test-file-download-share-trigger]');
tests/integration/components/file-editor/component-test.ts:13:        await render(hbs`{{file-editor}}`);
tests/integration/components/file-editor/component-test.ts:20:        await render(hbs`{{file-editor fileText='Test text'}}`);
tests/integration/components/file-editor/component-test.ts:27:        await render(hbs`{{file-editor fileText='Test text'}}`);
tests/integration/components/file-editor/component-test.ts:35:        await click('[data-test-button-revert]');
tests/integration/components/file-editor/component-test.ts:45:        await render(hbs`{{file-editor save=(action externalSaveAction)}}`);
tests/integration/components/file-editor/component-test.ts:51:        await click('[data-test-button-save]');
tests/integration/components/file-embed-menu/component-test.ts:20:        await render(hbs`
tests/integration/components/file-embed-menu/component-test.ts:35:        await click('[data-test-embed-button]');
tests/integration/components/file-icon/component-test.ts:12:        await render(hbs`<FileIcon @item={{this.item}} />`);
tests/integration/components/file-icon/component-test.ts:19:        await render(hbs`<FileIcon @item={{this.item}} />`);
tests/integration/components/file-icon/component-test.ts:26:        await render(hbs`<FileIcon @item={{this.item}} />`);
tests/integration/components/file-icon/component-test.ts:33:        await render(hbs`<FileIcon @item={{this.item}} />`);
tests/integration/components/file-icon/component-test.ts:41:        await render(hbs`<FileIcon @item={{this.item}} />`);
tests/integration/components/file-icon/component-test.ts:49:        await render(hbs`<FileIcon @item={{this.item}} />`);
tests/integration/components/file-icon/component-test.ts:57:        await render(hbs`<FileIcon @item={{this.item}} />`);
tests/integration/components/file-icon/component-test.ts:65:        await render(hbs`<FileIcon @item={{this.item}} />`);
tests/integration/components/file-icon/component-test.ts:73:        await render(hbs`<FileIcon @item={{this.item}} />`);
tests/integration/components/file-icon/component-test.ts:81:        await render(hbs`<FileIcon @item={{this.item}} />`);
tests/integration/components/file-icon/component-test.ts:89:        await render(hbs`<FileIcon @item={{this.item}} />`);
tests/integration/components/file-icon/component-test.ts:97:        await render(hbs`<FileIcon @item={{this.item}} />`);
tests/integration/components/file-icon/component-test.ts:108:        await render(hbs`<FileIcon @item={{this.item}} />`);
tests/integration/components/file-icon/component-test.ts:119:        await render(hbs`<FileIcon @item={{this.item}} />`);
tests/integration/components/file-icon/component-test.ts:130:        await render(hbs`<FileIcon @item={{this.item}} />`);
tests/integration/components/file-renderer/component-test.ts:15:        await render(hbs`
tests/integration/components/file-renderer/component-test.ts:23:        await settled();
tests/integration/components/file-renderer/component-test.ts:40:        await render(hbs`
tests/integration/components/file-renderer/component-test.ts:48:        await settled();
tests/integration/components/file-version/component-test.ts:46:        await render(hbs`
tests/integration/components/file-version/component-test.ts:55:        await click('[data-test-file-version-toggle-button]');
tests/integration/components/file-version/component-test.ts:65:        await percySnapshot(assert);
tests/integration/components/files-widget/component-test.ts:55:        const node = await this.store.findRecord('node', mirageNode.id);
tests/integration/components/files-widget/component-test.ts:57:        await render(hbs`<Files::Widget @node={{this.node}} @canEdit={{true}} />`);
tests/integration/components/files-widget/component-test.ts:65:        const registration = await this.store.findRecord('registration', mirageRegistration.id);
tests/integration/components/files-widget/component-test.ts:69:        await render(hbs`<Files::Widget @node={{this.registration}} @canEdit={{false}} />`);
tests/integration/components/files-widget/component-test.ts:92:        const node = await this.store.findRecord('node', mirageNode.id);
tests/integration/components/files-widget/component-test.ts:94:        await render(hbs`<Files::Widget @node={{this.node}} @canEdit={{true}} />`);
tests/integration/components/files-widget/component-test.ts:99:        await click('[data-test-ascending-sort="name"]');
tests/integration/components/files-widget/component-test.ts:104:        await click('[data-test-descending-sort="name"]');
tests/integration/components/files-widget/component-test.ts:109:        await click('[data-test-ascending-sort="date_modified"]');
tests/integration/components/files-widget/component-test.ts:114:        await click('[data-test-descending-sort="date_modified"]');
tests/integration/components/files-widget/component-test.ts:128:        const node = await this.store.findRecord('node', mirageNode.id);
tests/integration/components/files-widget/component-test.ts:131:        await render(hbs`<Files::Widget @node={{this.node}} @canEdit={{true}} />`);
tests/integration/components/files-widget/component-test.ts:138:        await click(`[data-test-file-browser-item="${folder.id}"]`);
tests/integration/components/files-widget/component-test.ts:139:        await animationsSettled();
tests/integration/components/files-widget/component-test.ts:149:        await click(`[data-test-file-browser-item="${folder.id}"]`);
tests/integration/components/files-widget/component-test.ts:150:        await animationsSettled();
tests/integration/components/files-widget/component-test.ts:164:        const node = await this.store.findRecord('node', mirageNode.id);
tests/integration/components/files-widget/component-test.ts:167:        await render(hbs`<Files::Widget @node={{this.node}} @canEdit={{true}} />`);
tests/integration/components/files-widget/component-test.ts:182:        const node = await this.store.findRecord('node', mirageNode.id);
tests/integration/components/files-widget/component-test.ts:185:        await render(hbs`<Files::Widget @node={{this.node}} @canEdit={{true}} />`);
tests/integration/components/files-widget/component-test.ts:191:        await click('[data-test-load-more-items]');
tests/integration/components/form-controls/component-test.ts:25:        await render(hbs`
tests/integration/components/form-controls/component-test.ts:44:        await a11yAudit(this.element);
tests/integration/components/form-controls/component-test.ts:63:        await render(hbs`
tests/integration/components/form-controls/component-test.ts:89:        await click('[data-test-submit-button]');
tests/integration/components/form-controls/power-select/component-test.ts:19:        await render(hbs`
tests/integration/components/form-controls/power-select/component-test.ts:33:        await click('.ember-power-select-trigger');
tests/integration/components/get-started-button/component-test.ts:20:        await render(hbs`<GetStartedButton />`);
tests/integration/components/get-started-button/component-test.ts:23:        await a11yAudit(this.element);
tests/integration/components/hero-banner/component-test.ts:23:        await render(hbs`<Home::-Components::HeroBanner />`);
tests/integration/components/hero-banner/component-test.ts:32:        await a11yAudit(this.element);
tests/integration/components/hero-banner/component-test.ts:46:        await render(hbs`<Home::-Components::HeroBanner />`);
tests/integration/components/hero-banner/component-test.ts:51:        await a11yAudit(this.element);
tests/integration/components/hyper-link/component-test.ts:12:        await render(hbs`{{osf-navbar/x-links/hyper-link foo}}`);
tests/integration/components/hyper-link/component-test.ts:18:        await render(hbs`{{osf-navbar/x-links/hyper-link 'http://example.com'}}`);
tests/integration/components/hyper-link/component-test.ts:24:        await render(hbs`{{osf-navbar/x-links/hyper-link '/'}}`);
tests/integration/components/hyper-link/component-test.ts:32:        await render(hbs`{{osf-navbar/x-links/hyper-link hidden=isHidden}}`);
tests/integration/components/hyper-link/component-test.ts:44:        await render(hbs`{{osf-navbar/x-links/hyper-link text='This is my text'}}`);
tests/integration/components/hyper-link/component-test.ts:50:        await render(hbs`
tests/integration/components/hyper-link/component-test.ts:60:        await render(hbs`
tests/integration/components/inline-list/component-test.ts:53:            await render(hbs`
tests/integration/components/inline-list/component-test.ts:87:            await render(hbs`
tests/integration/components/institution-carousel/component-test.ts:10:        await render(hbs`{{institution-carousel}}`);
tests/integration/components/institution-select-list/component-test.ts:34:        await render(hbs`<InstitutionSelectList @manager={{this.manager}} />`);
tests/integration/components/institutions-list/component-test.ts:35:        const user = await this.store.findRecord('user', mirageUser.id);
tests/integration/components/institutions-list/component-test.ts:38:        const node = await this.store.findRecord('node', mirageNode.id);
tests/integration/components/institutions-list/component-test.ts:53:        await render(hbs`<InstitutionsList @manager={{this.manager}} />`);
tests/integration/components/institutions-list/component-test.ts:62:        await render(hbs`<InstitutionsList @manager={{this.manager}} />`);
tests/integration/components/institutions-list/component-test.ts:71:        await render(hbs`<InstitutionsList @manager={{this.manager}} />`);
tests/integration/components/institutions-list/component-test.ts:76:        await click('[data-test-next-page-button]');
tests/integration/components/join-osf-banner/component-test.ts:14:        await render(hbs`
tests/integration/components/learn-more-button/component-test.ts:11:        await render(hbs`<Home::-Components::SupportSection::LearnMoreButton />`);
tests/integration/components/learn-more-button/component-test.ts:15:        await a11yAudit(this.element);
tests/integration/components/license-text/licence-text-test.ts:25:        const node = await this.store.findRecord('node', mirageNode.id);
tests/integration/components/license-text/licence-text-test.ts:28:        await render(hbs`<LicenseText @node={{this.node}} />`);
tests/integration/components/license-text/licence-text-test.ts:47:        const node = await this.store.findRecord('node', mirageNode.id);
tests/integration/components/license-text/licence-text-test.ts:50:        await render(hbs`<LicenseText @node={{this.node}} />`);
tests/integration/components/license-text/licence-text-test.ts:69:        const node = await this.store.findRecord('node', mirageNode.id);
tests/integration/components/license-text/licence-text-test.ts:73:        await render(hbs`<LicenseText @node={{this.node}} />`);
tests/integration/components/link-to/component-test.ts:24:        await render(hbs`
tests/integration/components/link-to/component-test.ts:44:        await render(hbs`{{#link-to 'foo' click=(action 'clickAction')}}This is a link!{{/link-to}}`);
tests/integration/components/link-to/component-test.ts:46:        await click(this.element.firstChild as Element);
tests/integration/components/loading-indicator/component-test.ts:10:        await render(hbs`{{loading-indicator}}`);
tests/integration/components/loading-indicator/component-test.ts:16:        await render(hbs`{{loading-indicator dark=true}}`);
tests/integration/components/loading-indicator/component-test.ts:22:        await render(hbs`{{loading-indicator inline=true}}`);
tests/integration/components/loading-indicator/component-test.ts:28:        await render(hbs`{{loading-indicator dark=true inline=true}}`);
tests/integration/components/maintenance-banner/component-test.ts:21:        await render(hbs`{{maintenance-banner}}`);
tests/integration/components/maintenance-banner/component-test.ts:35:        await render(hbs`{{maintenance-banner}}`);
tests/integration/components/moderators/component-test.ts:29:        const providerModel = await this.store.findRecord('registration-provider', 'egap');
tests/integration/components/moderators/component-test.ts:38:        await render(
tests/integration/components/moderators/component-test.ts:50:        await click('[data-test-next-page-button]');
tests/integration/components/moderators/component-test.ts:59:        const currentUserModel = await this.store.findRecord('user', 'sprout');
tests/integration/components/moderators/component-test.ts:72:        await render(
tests/integration/components/moderators/component-test.ts:87:        await clickTrigger(`[data-test-moderator-row="${moderator.id}"]`);
tests/integration/components/moderators/component-test.ts:88:        await selectChoose(`[data-test-moderator-row="${moderator.id}"]`, 'Admin');
tests/integration/components/moderators/component-test.ts:91:        await click(`[data-test-delete-moderator-button="${moderator.id}"]>[data-test-delete-button]`);
tests/integration/components/moderators/component-test.ts:95:        await click('[data-test-confirm-delete]');
tests/integration/components/moderators/component-test.ts:105:        const currentUserModel = await this.store.findRecord('user', 'sprout');
tests/integration/components/moderators/component-test.ts:118:        await render(
tests/integration/components/moderators/component-test.ts:137:        await click(`[data-test-delete-moderator-button="${moderator.id}"]>[data-test-delete-button]`);
tests/integration/components/moderators/component-test.ts:141:        await click('[data-test-confirm-delete]');
tests/integration/components/moderators/component-test.ts:151:        const currentUserModel = await this.store.findRecord('user', 'sprout');
tests/integration/components/moderators/component-test.ts:161:        await render(
tests/integration/components/moderators/component-test.ts:173:        await click('[data-test-add-moderator-button]');
tests/integration/components/moderators/component-test.ts:176:        await click('[data-test-confirm-add-moderator-button]');
tests/integration/components/moderators/component-test.ts:179:        await selectSearch('[data-test-select-user]', 'Yeji');
tests/integration/components/moderators/component-test.ts:180:        await selectChoose('[data-test-select-user]', 'Hwang Yeji');
tests/integration/components/moderators/component-test.ts:181:        await selectChoose('[data-test-select-permission]', 'Moderator');
tests/integration/components/moderators/component-test.ts:184:        await click('[data-test-confirm-add-moderator-button]');
tests/integration/components/moderators/component-test.ts:193:        const currentUserModel = await this.store.findRecord('user', 'sprout');
tests/integration/components/moderators/component-test.ts:202:        await render(
tests/integration/components/moderators/component-test.ts:214:        await click('[data-test-add-moderator-button]');
tests/integration/components/moderators/component-test.ts:216:        await click('[data-test-toggle-invite-form]');
tests/integration/components/moderators/component-test.ts:218:        await click('[data-test-confirm-add-moderator-button]');
tests/integration/components/moderators/component-test.ts:226:        await fillIn('[data-test-email-input]>div>input', 'testing@cos.io');
tests/integration/components/moderators/component-test.ts:227:        await fillIn('[data-test-full-name-input]>div>input', 'Hwang Yeji');
tests/integration/components/moderators/component-test.ts:228:        await selectChoose('[data-test-select-permission]', 'Moderator');
tests/integration/components/moderators/component-test.ts:229:        await click('[data-test-confirm-add-moderator-button]');
tests/integration/components/move-file-modal/component-test.ts:52:        const folder = await this.store.findRecord('file', folderModel.id);
tests/integration/components/move-file-modal/component-test.ts:54:        const grandchild = await this.store.findRecord('node', grandchildModel.id);
tests/integration/components/move-file-modal/component-test.ts:55:        const providers = await grandchild.queryHasMany('files');
tests/integration/components/move-file-modal/component-test.ts:63:        const file = new OsfStorageFile(this.currentUser, await this.store.findRecord('file', fileModel.id));
tests/integration/components/move-file-modal/component-test.ts:68:            targetNode: await this.store.findRecord('node', grandchild.id),
tests/integration/components/move-file-modal/component-test.ts:77:        await render(hbs`
tests/integration/components/move-file-modal/component-test.ts:98:        await percySnapshot('Integration | Component | move-file-modal | move start');
tests/integration/components/move-file-modal/component-test.ts:99:        await click('[data-test-ancestor-button="1"]'); // click parent node (releases)
tests/integration/components/move-file-modal/component-test.ts:110:        await click(`[data-test-move-to-node="${otherGrandchild.id}"]`); // click node (gienger)
tests/integration/components/move-file-modal/component-test.ts:113:        await click('[data-test-move-to-folder="osfstorage"]'); // click folder (osfstorage)
tests/integration/components/move-file-modal/component-test.ts:116:        await click('[data-test-move-files-button]'); // click move files button
tests/integration/components/move-file-modal/component-test.ts:127:        await percySnapshot('Integration | Component | move-file-modal | move finished');
tests/integration/components/move-file-modal/component-test.ts:138:        const folder = await this.store.findRecord('file', folderModel.id);
tests/integration/components/move-file-modal/component-test.ts:140:        const project = await this.store.findRecord('node', projectModel.id);
tests/integration/components/move-file-modal/component-test.ts:141:        const providers = await project.queryHasMany('files');
tests/integration/components/move-file-modal/component-test.ts:148:        const file = new OsfStorageFile(this.currentUser, await this.store.findRecord('file', fileModel.id));
tests/integration/components/move-file-modal/component-test.ts:153:            targetNode: await this.store.findRecord('node', project.id),
tests/integration/components/move-file-modal/component-test.ts:162:        await render(hbs`
tests/integration/components/move-file-modal/component-test.ts:176:        await percySnapshot(assert);
tests/integration/components/move-file-modal/component-test.ts:187:        const folder = await this.store.findRecord('file', folderModel.id);
tests/integration/components/move-file-modal/component-test.ts:189:        const project = await this.store.findRecord('node', projectModel.id);
tests/integration/components/move-file-modal/component-test.ts:190:        const providers = await project.queryHasMany('files');
tests/integration/components/move-file-modal/component-test.ts:197:        const queueFile = new OsfStorageFile(this.currentUser, await this.store.findRecord('file', queueFileModel.id));
tests/integration/components/move-file-modal/component-test.ts:203:            this.currentUser, await this.store.findRecord('file', storageCapFileModel.id),
tests/integration/components/move-file-modal/component-test.ts:210:            this.currentUser, await this.store.findRecord('file', nameConflictFileModel.id),
tests/integration/components/move-file-modal/component-test.ts:223:            targetNode: await this.store.findRecord('node', project.id),
tests/integration/components/move-file-modal/component-test.ts:232:        await render(hbs`
tests/integration/components/move-file-modal/component-test.ts:242:        await click('[data-test-breadcrumb="osfstorage"]');
tests/integration/components/move-file-modal/component-test.ts:243:        await click('[data-test-move-files-button]');
tests/integration/components/move-file-modal/component-test.ts:259:        await percySnapshot(assert);
tests/integration/components/new-feature-popover/component-test.ts:49:            await render(hbs`
tests/integration/components/new-feature-popover/component-test.ts:77:            await click('[data-test-got-it-button]');
tests/integration/components/new-feature-popover/component-test.ts:87:            await render(hbs`
tests/integration/components/new-feature-popover/component-test.ts:116:            await click('[data-test-not-again-checkbox]');
tests/integration/components/new-feature-popover/component-test.ts:117:            await click('[data-test-got-it-button]');
tests/integration/components/new-feature-popover/component-test.ts:126:        await render(hbs`
tests/integration/components/new-project-modal/component-test.ts:23:        await render(hbs`<NewProjectModal />`);
tests/integration/components/new-project-navigation-modal/component-test.ts:28:        await render(hbs`<NewProjectNavigationModal
tests/integration/components/new-project-navigation-modal/component-test.ts:39:        await click('[data-test-stay-here]');
tests/integration/components/node-card/component-test.ts:34:        const registrationModel = await this.store.findRecord(
tests/integration/components/node-card/component-test.ts:39:        await render(hbs`
tests/integration/components/node-card/component-test.ts:123:        const registrationModel = await this.store.findRecord('registration', registration.id);
tests/integration/components/node-card/component-test.ts:126:        await render(hbs`
tests/integration/components/node-card/node-icon/component-test.ts:11:        await render(hbs`{{node-card/node-icon category='hypothesis'}}`);
tests/integration/components/node-card/node-icon/component-test.ts:17:        await render(hbs`{{node-card/node-icon category='not-a-real-category'}}`);
tests/integration/components/node-card/node-icon/component-test.ts:23:        await render(hbs`{{node-card/node-icon category='hypothesis'}}`);
tests/integration/components/node-card/node-icon/component-test.ts:26:        await render(hbs`{{node-card/node-icon category='registration'}}`);
tests/integration/components/node-description/component-test.ts:22:        const project = await this.store.findRecord('node', node.id, { include: 'bibliographic_contributors' });
tests/integration/components/node-description/component-test.ts:28:        await render(hbs`<NodeDescription @manager={{this.manager}} />`);
tests/integration/components/node-description/component-test.ts:36:        await render(hbs`<NodeDescription @manager={{this.manager}}  />`);
tests/integration/components/node-description/component-test.ts:45:        await click('[data-test-node-description-button]');
tests/integration/components/node-navbar/component-test.ts:74:            await render(hbs`{{node-navbar node=this.node renderInPlace=true}}`);
tests/integration/components/node-navbar/component-test.ts:89:            await render(hbs`{{node-navbar node=this.node renderInPlace=true}}`);
tests/integration/components/node-navbar/component-test.ts:107:            await render(hbs`{{node-navbar node=this.node renderInPlace=true}}`);
tests/integration/components/node-navbar/component-test.ts:285:                await render(hbs`{{node-navbar node=this.node renderInPlace=true}}`);
tests/integration/components/node-navbar/link/component-test.ts:21:        await render(hbs`{{node-navbar/link node=this.node destination='registrations'}}`);
tests/integration/components/node-navbar/link/component-test.ts:27:        await render(hbs`
tests/integration/components/noteworthy-and-popular-project/component-test.ts:18:        const project = await this.store.findRecord('node', node.id, { include: 'bibliographic_contributors' });
tests/integration/components/noteworthy-and-popular-project/component-test.ts:21:        await render(hbs`<NoteworthyAndPopularProject @project={{this.project}} />`);
tests/integration/components/open-badges-list/component-test.ts:28:        await render(hbs`<OpenBadgesList
tests/integration/components/open-badges-list/component-test.ts:43:        await render(hbs`<OpenBadgesList
tests/integration/components/open-badges-list/component-test.ts:58:        await render(hbs`<OpenBadgesList
tests/integration/components/open-badges-list/component-test.ts:74:        await triggerEvent('[data-test-badge-icon="data"]', 'mouseenter');
tests/integration/components/open-badges-list/component-test.ts:79:        await triggerEvent('[data-test-badge-icon="data"]', 'mouseleave');
tests/integration/components/open-badges-list/component-test.ts:80:        await triggerEvent('[data-test-badge-icon="materials"]', 'mouseenter');
tests/integration/components/open-badges-list/component-test.ts:104:        await render(hbs`<OpenBadgesList::OpenBadgeCard
tests/integration/components/open-badges-list/component-test.ts:124:        await triggerEvent('[data-test-badge-icon="data"]', 'mouseenter');
tests/integration/components/open-badges-list/component-test.ts:131:        await render(hbs`<OpenBadgesList::OpenBadgeCard
tests/integration/components/open-badges-list/component-test.ts:151:        await triggerEvent('[data-test-badge-icon="materials"]', 'mouseenter');
tests/integration/components/open-badges-list/component-test.ts:159:        await render(hbs`<OpenBadgesList::OpenBadgeCard
tests/integration/components/open-badges-list/component-test.ts:175:        await triggerEvent('[data-test-badge-icon="materials"]', 'mouseenter');
tests/integration/components/osf-dialog/component-test.ts:17:        await render(hbs`<OsfDialog @renderInPlace={{true}} as |dialog|>
tests/integration/components/osf-dialog/component-test.ts:39:        await untrackedClick('[test-open-dialog]');
tests/integration/components/osf-dialog/component-test.ts:46:        await untrackedClick('[test-close-dialog]');
tests/integration/components/osf-dialog/component-test.ts:55:        await render(hbs`<OsfDialog @renderInPlace={{true}} as |dialog|>
tests/integration/components/osf-dialog/component-test.ts:72:        await untrackedClick('[test-open-dialog]');
tests/integration/components/osf-dialog/component-test.ts:75:        await click('[data-test-close-dialog]');
tests/integration/components/osf-dialog/component-test.ts:78:        await untrackedClick('[test-open-dialog]');
tests/integration/components/osf-dialog/component-test.ts:81:        await untrackedClick('[data-test-dialog-background]');
tests/integration/components/osf-dialog/component-test.ts:84:        await untrackedClick('[test-open-dialog]');
tests/integration/components/osf-dialog/component-test.ts:87:        await untrackedClick('[test-heading-close]');
tests/integration/components/osf-dialog/component-test.ts:90:        await untrackedClick('[test-open-dialog]');
tests/integration/components/osf-dialog/component-test.ts:93:        await untrackedClick('[test-main-close]');
tests/integration/components/osf-dialog/component-test.ts:96:        await untrackedClick('[test-open-dialog]');
tests/integration/components/osf-dialog/component-test.ts:99:        await untrackedClick('[test-footer-close]');
tests/integration/components/osf-dialog/component-test.ts:106:        await render(hbs`<OsfDialog @renderInPlace={{true}} @isOpen={{this.isOpen}} as |dialog|>
tests/integration/components/osf-dialog/component-test.ts:114:        await settled();
tests/integration/components/osf-dialog/component-test.ts:118:        await settled();
tests/integration/components/osf-dialog/component-test.ts:123:        await render(hbs`<OsfDialog @renderInPlace={{true}} @closeOnOutsideClick={{false}} as |dialog|>
tests/integration/components/osf-dialog/component-test.ts:132:        await untrackedClick('[test-open-dialog]');
tests/integration/components/osf-dialog/component-test.ts:135:        await untrackedClick('[data-test-dialog-background]');
tests/integration/components/osf-footer/component-test.ts:11:        await render(hbs`{{osf-footer}}`);
tests/integration/components/osf-link/component-test.ts:20:        await render(hbs`
tests/integration/components/osf-link/component-test.ts:41:        await render(hbs`
tests/integration/components/osf-link/component-test.ts:67:        await render(hbs`
tests/integration/components/osf-link/component-test.ts:88:        await render(hbs`
tests/integration/components/osf-link/component-test.ts:107:        await render(hbs`
tests/integration/components/osf-link/component-test.ts:128:        await render(hbs`
tests/integration/components/osf-logo/component-test.ts:10:        await render(hbs`{{osf-logo}}`);
tests/integration/components/osf-navbar/auth-dropdown/component-test.ts:44:        await render(hbs`{{osf-navbar/auth-dropdown}}`);
tests/integration/components/osf-navbar/auth-dropdown/component-test.ts:47:        await click('[data-analytics-name="SignIn"]');
tests/integration/components/osf-navbar/component-test.ts:35:        await render(hbs`<OsfNavbar />`);
tests/integration/components/osf-navbar/component-test.ts:42:        await render(hbs`<OsfNavbar />`);
tests/integration/components/osf-navbar/component-test.ts:46:        await click('[data-test-service-dropdown]');
tests/integration/components/osf-navbar/component-test.ts:47:        await percySnapshot(assert);
tests/integration/components/osf-navbar/component-test.ts:53:        await render(hbs`<OsfNavbar />`);
tests/integration/components/osf-navbar/component-test.ts:56:        await click('[data-test-auth-dropdown-toggle]');
tests/integration/components/osf-navbar/component-test.ts:57:        await percySnapshot(assert);
tests/integration/components/osf-navbar/component-test.ts:63:        await render(hbs`<OsfNavbar />`);
tests/integration/components/osf-navbar/component-test.ts:70:        await click('[data-test-service-dropdown]');
tests/integration/components/osf-navbar/component-test.ts:71:        await percySnapshot(assert);
tests/integration/components/paginated-list/all/component-test.ts:14:        await render(hbs`
tests/integration/components/paginated-list/all/component-test.ts:28:        await render(hbs`
tests/integration/components/paginated-list/all/component-test.ts:45:        await render(hbs`
tests/integration/components/paginated-list/x-header/component-test.ts:10:        await render(hbs`<PaginatedList::XItem />`);
tests/integration/components/paginated-list/x-header/component-test.ts:14:        await render(hbs`
tests/integration/components/paginated-list/x-item/component-test.ts:13:        await render(hbs`{{paginated-list/x-item}}`);
tests/integration/components/paginated-list/x-item/component-test.ts:18:        await render(hbs`
tests/integration/components/paginated-list/x-render/component-test.ts:13:        await render(hbs`{{paginated-list/x-render}}`);
tests/integration/components/paginated-list/x-render/component-test.ts:18:        await render(hbs`
tests/integration/components/panel/component-test.ts:20:            await render(hbs`
tests/integration/components/panel/component-test.ts:63:            await render(hbs`
tests/integration/components/panel/component-test.ts:111:            await render(hbs`
tests/integration/components/password-strength-bar/component-test.ts:18:        await render(hbs`<PasswordStrengthBar @password={{this.password}}/>`);
tests/integration/components/password-strength-bar/component-test.ts:26:        await render(hbs`<PasswordStrengthBar @password={{this.password}}/>`);
tests/integration/components/password-strength-bar/component-test.ts:29:        await settled();
tests/integration/components/password-strength-bar/component-test.ts:38:        await render(hbs`<PasswordStrengthBar @password={{this.password}}/>`);
tests/integration/components/password-strength-bar/component-test.ts:41:        await settled();
tests/integration/components/password-strength-bar/component-test.ts:50:        await render(hbs`<PasswordStrengthBar @password={{this.password}}/>`);
tests/integration/components/password-strength-bar/component-test.ts:54:        await settled();
tests/integration/components/password-strength-bar/component-test.ts:63:        await render(hbs`<PasswordStrengthBar @password={{this.password}}/>`);
tests/integration/components/password-strength-bar/component-test.ts:66:        await settled();
tests/integration/components/password-strength-bar/component-test.ts:75:        await render(hbs`<PasswordStrengthBar @password={{this.password}}/>`);
tests/integration/components/password-strength-bar/component-test.ts:78:        await settled();
tests/integration/components/registries-side-nav/component-test.ts:36:        await render(hbs`<OsfLayout::RegistriesSideNav />`);
tests/integration/components/registries-side-nav/component-test.ts:42:        await render(hbs`<OsfLayout::RegistriesSideNav data-for-a-test="foo" />`);
tests/integration/components/registries-side-nav/component-test.ts:48:        await render(hbs`
tests/integration/components/registries/finalize-registration-modal/component-test.ts:24:        const registrationModel = await this.store.findRecord('registration', registration.id);
tests/integration/components/registries/finalize-registration-modal/component-test.ts:28:        await render(hbs`
tests/integration/components/registries/finalize-registration-modal/component-test.ts:39:        await settled();
tests/integration/components/registries/finalize-registration-modal/component-test.ts:44:        await click('[data-test-immediate-button]');
tests/integration/components/registries/finalize-registration-modal/component-test.ts:50:        await click('[data-test-embargo-button]');
tests/integration/components/registries/finalize-registration-modal/component-test.ts:65:        const registrationModel = await this.store.findRecord('registration', registration.id);
tests/integration/components/registries/finalize-registration-modal/component-test.ts:69:        await render(hbs`
tests/integration/components/registries/finalize-registration-modal/component-test.ts:80:        await settled();
tests/integration/components/registries/finalize-registration-modal/component-test.ts:85:        await click('[data-test-embargo-button]');
tests/integration/components/registries/finalize-registration-modal/component-test.ts:91:        await setFlatpickrDate('[data-test-embargo-date-input] > div > input', moment().format('MM/DD/YYYY'));
tests/integration/components/registries/finalize-registration-modal/component-test.ts:99:        // await fillIn('[data-test-embargo-date-input] > div > input', validDate.format('MM/DD/YYYY'));
tests/integration/components/registries/finalize-registration-modal/component-test.ts:100:        // await blur('[data-test-embargo-date-input] > div > input');
tests/integration/components/registries/finalize-registration-modal/component-test.ts:105:        // await click('[data-test-immediate-button]');
tests/integration/components/registries/finalize-registration-modal/component-test.ts:123:        const registrationModel = await this.store.findRecord('registration', noModRegistration.id);
tests/integration/components/registries/finalize-registration-modal/component-test.ts:131:        await render(hbs`
tests/integration/components/registries/finalize-registration-modal/component-test.ts:141:        await click('[data-test-immediate-button]');
tests/integration/components/registries/finalize-registration-modal/component-test.ts:143:        await click('[data-test-submit-registration-button]');
tests/integration/components/registries/finalize-registration-modal/component-test.ts:165:        const registrationModel = await this.store.findRecord('registration', withModRegistration.id);
tests/integration/components/registries/finalize-registration-modal/component-test.ts:177:        await render(hbs`
tests/integration/components/registries/finalize-registration-modal/component-test.ts:187:        await click('[data-test-immediate-button]');
tests/integration/components/registries/finalize-registration-modal/component-test.ts:189:        await click('[data-test-submit-registration-button]');
tests/integration/components/registries/hierarchical-list/component-test.ts:19:        const rootNode = await this.store.findRecord('node', root.id);
tests/integration/components/registries/hierarchical-list/component-test.ts:20:        const childNode = await this.store.findRecord('node', child.id);
tests/integration/components/registries/hierarchical-list/component-test.ts:21:        const grandChildNode = await this.store.findRecord('node', grandChild.id);
tests/integration/components/registries/hierarchical-list/component-test.ts:36:        await render(hbs`
tests/integration/components/registries/hierarchical-list/component-test.ts:47:        await click(`[data-test-item="${root.id}"] input`);
tests/integration/components/registries/hierarchical-list/component-test.ts:48:        await click(`[data-test-item="${child.id}"] input`);
tests/integration/components/registries/hierarchical-list/component-test.ts:49:        await click(`[data-test-item="${grandChild.id}"] input`);
tests/integration/components/registries/hierarchical-list/component-test.ts:52:        await click(`[data-test-expand-child="${root.id}"]`);
tests/integration/components/registries/hierarchical-list/component-test.ts:55:        await click(`[data-test-expand-child="${root.id}"]`);
tests/integration/components/registries/my-registrations-list/component-test.ts:22:        await render(
tests/integration/components/registries/my-registrations-list/component-test.ts:38:        const currentUserModel = await this.store.findRecord('user', currentUser.id);
tests/integration/components/registries/my-registrations-list/component-test.ts:43:        await render(
tests/integration/components/registries/my-registrations-list/component-test.ts:59:        const currentUserModel = await this.store.findRecord('user', currentUser.id);
tests/integration/components/registries/my-registrations-list/component-test.ts:64:        await render(
tests/integration/components/registries/my-registrations-list/component-test.ts:69:        await click('[data-test-next-page-button]');
tests/integration/components/registries/my-registrations-list/component-test.ts:76:        const currentUserModel = await this.store.findRecord('user', currentUser.id);
tests/integration/components/registries/my-registrations-list/component-test.ts:88:        await render(
tests/integration/components/registries/my-registrations-list/component-test.ts:93:        await click('[data-test-next-page-button]');
tests/integration/components/registries/my-registrations-list/component-test.ts:100:        const currentUserModel = await this.store.findRecord('user', currentUser.id);
tests/integration/components/registries/my-registrations-list/component-test.ts:120:        await render(
tests/integration/components/registries/new-update-modal/component-test.ts:24:        const registration = await this.store.findRecord('registration', mirageRegistration.id);
tests/integration/components/registries/new-update-modal/component-test.ts:26:        await render(
tests/integration/components/registries/new-update-modal/component-test.ts:50:        const registration = await this.store.findRecord('registration', mirageRegistration.id);
tests/integration/components/registries/new-update-modal/component-test.ts:53:        await render(
tests/integration/components/registries/partial-registration-modal/component-test.ts:19:        const rootNode = await this.store.findRecord('node', root.id);
tests/integration/components/registries/partial-registration-modal/component-test.ts:20:        const childNode = await this.store.findRecord('node', child.id);
tests/integration/components/registries/partial-registration-modal/component-test.ts:21:        const grandChildNode = await this.store.findRecord('node', grandChild.id);
tests/integration/components/registries/partial-registration-modal/component-test.ts:42:        await render(hbs`
tests/integration/components/registries/partial-registration-modal/component-test.ts:55:        await settled();
tests/integration/components/registries/partial-registration-modal/component-test.ts:61:        await click('[data-test-continue-registration-button]');
tests/integration/components/registries/partial-registration-modal/component-test.ts:63:        await settled();
tests/integration/components/registries/partial-registration-modal/component-test.ts:73:        const rootNode = await this.store.findRecord('node', root.id);
tests/integration/components/registries/partial-registration-modal/component-test.ts:74:        const childNode = await this.store.findRecord('node', child.id);
tests/integration/components/registries/partial-registration-modal/component-test.ts:75:        const grandChildNode = await this.store.findRecord('node', grandChild.id);
tests/integration/components/registries/partial-registration-modal/component-test.ts:96:        await render(hbs`
tests/integration/components/registries/partial-registration-modal/component-test.ts:109:        await settled();
tests/integration/components/registries/partial-registration-modal/component-test.ts:112:        await click(`[data-test-item="${child.id}"] input`);
tests/integration/components/registries/partial-registration-modal/component-test.ts:115:        await click(`[data-test-item="${grandChild.id}"] input`);
tests/integration/components/registries/partial-registration-modal/component-test.ts:118:        await click('[data-test-continue-registration-button]');
tests/integration/components/registries/partial-registration-modal/component-test.ts:120:        await settled();
tests/integration/components/registries/partial-registration-modal/component-test.ts:130:        const rootNode = await this.store.findRecord('node', root.id);
tests/integration/components/registries/partial-registration-modal/component-test.ts:131:        const childNode = await this.store.findRecord('node', child.id);
tests/integration/components/registries/partial-registration-modal/component-test.ts:132:        const grandChildNode = await this.store.findRecord('node', grandChild.id);
tests/integration/components/registries/partial-registration-modal/component-test.ts:153:        await render(hbs`
tests/integration/components/registries/partial-registration-modal/component-test.ts:166:        await settled();
tests/integration/components/registries/partial-registration-modal/component-test.ts:170:        await click('[data-test-clear-all]');
tests/integration/components/registries/partial-registration-modal/component-test.ts:174:        await click('[data-test-select-all]');
tests/integration/components/registries/partial-registration-modal/component-test.ts:178:        await click('[data-test-continue-registration-button]');
tests/integration/components/registries/partial-registration-modal/component-test.ts:180:        await settled();
tests/integration/components/registries/partial-registration-modal/component-test.ts:190:        const rootNode = await this.store.findRecord('node', root.id);
tests/integration/components/registries/partial-registration-modal/component-test.ts:191:        const childNode = await this.store.findRecord('node', child.id);
tests/integration/components/registries/partial-registration-modal/component-test.ts:192:        const grandChildNode = await this.store.findRecord('node', grandChild.id);
tests/integration/components/registries/partial-registration-modal/component-test.ts:213:        await render(hbs`
tests/integration/components/registries/partial-registration-modal/component-test.ts:226:        await settled();
tests/integration/components/registries/partial-registration-modal/component-test.ts:229:        await click(`[data-test-item="${child.id}"] input`);
tests/integration/components/registries/partial-registration-modal/component-test.ts:232:        await click('[data-test-continue-registration-button]');
tests/integration/components/registries/partial-registration-modal/component-test.ts:234:        await settled();
tests/integration/components/registries/registration-form-navigation-dropdown/component-test.ts:27:        const dr = await this.store.findRecord('draft-registration', draftRegistration.id);
tests/integration/components/registries/registration-form-navigation-dropdown/component-test.ts:28:        const schema = await dr.registrationSchema;
tests/integration/components/registries/registration-form-navigation-dropdown/component-test.ts:29:        const schemaBlocks = await schema.loadAll('schemaBlocks');
tests/integration/components/registries/registration-form-navigation-dropdown/component-test.ts:34:        await render(hbs`
tests/integration/components/registries/registration-form-navigation-dropdown/component-test.ts:40:        await click('[data-test-toggle-anchor-nav-button]');
tests/integration/components/registries/registration-form-navigation-dropdown/component-test.ts:51:        await render(hbs`
tests/integration/components/registries/registration-form-navigation-dropdown/component-test.ts:58:        await click('[data-test-toggle-anchor-nav-button]');
tests/integration/components/registries/registration-list/card/component-test.ts:37:        const mirageRegistration = await this.store.findRecord('registration', this.registration.id);
tests/integration/components/registries/registration-list/card/component-test.ts:39:        await render(hbs`
tests/integration/components/registries/registration-list/card/component-test.ts:44:        await a11yAudit(this.element);
tests/integration/components/registries/registration-list/card/component-test.ts:52:        const mirageRegistration = await this.store.findRecord('registration', this.registration.id);
tests/integration/components/registries/registration-list/card/component-test.ts:54:        await render(hbs`
tests/integration/components/registries/registration-list/card/component-test.ts:59:        await a11yAudit(this.element);
tests/integration/components/registries/registration-list/card/component-test.ts:67:        const mirageRegistration = await this.store.findRecord('registration', this.registration.id);
tests/integration/components/registries/registration-list/card/component-test.ts:69:        await render(hbs`
tests/integration/components/registries/registration-list/card/component-test.ts:74:        await a11yAudit(this.element);
tests/integration/components/registries/registration-list/card/component-test.ts:82:        const mirageRegistration = await this.store.findRecord('registration', this.registration.id);
tests/integration/components/registries/registration-list/card/component-test.ts:84:        await render(hbs`
tests/integration/components/registries/registration-list/card/component-test.ts:89:        await a11yAudit(this.element);
tests/integration/components/registries/registration-list/card/component-test.ts:97:        const mirageRegistration = await this.store.findRecord('registration', this.registration.id);
tests/integration/components/registries/registration-list/card/component-test.ts:99:        await render(hbs`
tests/integration/components/registries/registration-list/card/component-test.ts:104:        await a11yAudit(this.element);
tests/integration/components/registries/registration-list/card/component-test.ts:112:        const mirageRegistration = await this.store.findRecord('registration', this.registration.id);
tests/integration/components/registries/registration-list/card/component-test.ts:114:        await render(hbs`
tests/integration/components/registries/registration-list/card/component-test.ts:120:        await a11yAudit(this.element);
tests/integration/components/registries/registration-list/card/component-test.ts:128:        const mirageRegistration = await this.store.findRecord('registration', this.registration.id);
tests/integration/components/registries/registration-list/card/component-test.ts:131:        await render(hbs`
tests/integration/components/registries/registration-list/card/component-test.ts:136:        await a11yAudit(this.element);
tests/integration/components/registries/registration-list/component-test.ts:26:        await render(hbs`
tests/integration/components/registries/registration-list/component-test.ts:35:        await click('[data-test-next-page-button]');
tests/integration/components/registries/registration-list/component-test.ts:43:        await render(hbs`
tests/integration/components/registries/review-actions-list/component-test.ts:23:        const registration = await this.store.findRecord('registration', registrationModel.id);
tests/integration/components/registries/review-actions-list/component-test.ts:26:        await render(hbs`<Registries::ReviewActionsList @registration={{this.registration}}/>`);
tests/integration/components/registries/review-actions-list/component-test.ts:39:        const noActionRegistration = await this.store.findRecord('registration', noActionRegistrationModel.id);
tests/integration/components/registries/review-actions-list/component-test.ts:42:        await render(hbs`<Registries::ReviewActionsList @registration={{this.registration}}/>`);
tests/integration/components/registries/review-actions-list/component-test.ts:52:        const oneActionRegistration = await this.store.findRecord('registration', oneActionRegistrationModel.id);
tests/integration/components/registries/review-actions-list/component-test.ts:55:        await render(hbs`<Registries::ReviewActionsList @registration={{this.registration}}/>`);
tests/integration/components/registries/review-actions-list/component-test.ts:65:        const oneActionRegistration = await this.store.findRecord('registration', registrationModel.id);
tests/integration/components/registries/review-actions-list/component-test.ts:68:        await render(hbs`<Registries::ReviewActionsList @registration={{this.registration}}/>`);
tests/integration/components/registries/review-actions-list/component-test.ts:77:        await click('[data-test-registration-card-toggle-actions]');
tests/integration/components/registries/review-actions-list/review-action/component-test.ts:26:        const registration = await this.store.findRecord('registration', mirageRegistration.id) as RegistrationModel;
tests/integration/components/registries/review-actions-list/review-action/component-test.ts:27:        const [reviewAction] = await registration.loadAll('reviewActions') as ReviewActionModel[];
tests/integration/components/registries/review-actions-list/review-action/component-test.ts:28:        const creator: UserModel = await reviewAction.creator;
tests/integration/components/registries/review-actions-list/review-action/component-test.ts:45:        await render(hbs`<Registries::ReviewActionsList::ReviewAction @reviewAction={{this.reviewAction}}/>`);
tests/integration/components/registries/review-actions-list/review-action/component-test.ts:69:        await render(hbs`<Registries::ReviewActionsList::ReviewAction
tests/integration/components/registries/review-actions-list/review-action/component-test.ts:94:        await render(hbs`<Registries::ReviewActionsList::ReviewAction @reviewAction={{this.reviewAction}}/>`);
tests/integration/components/registries/review-actions-list/review-action/component-test.ts:113:        await render(hbs`<Registries::ReviewActionsList::ReviewAction @reviewAction={{this.reviewAction}}/>`);
tests/integration/components/registries/review-actions-list/review-action/component-test.ts:133:        await render(hbs`<Registries::ReviewActionsList::ReviewAction
tests/integration/components/registries/review-actions-list/review-action/component-test.ts:159:        await render(hbs`<Registries::ReviewActionsList::ReviewAction
tests/integration/components/registries/review-actions-list/review-action/component-test.ts:187:        const registration = await this.store.findRecord('registration', mirageRegistration.id) as RegistrationModel;
tests/integration/components/registries/review-actions-list/review-action/component-test.ts:188:        const [action] = await registration.loadAll('reviewActions') as ReviewActionModel[];
tests/integration/components/registries/review-actions-list/review-action/component-test.ts:193:        await render(hbs`<Registries::ReviewActionsList::ReviewAction @reviewAction={{this.reviewAction}}/>`);
tests/integration/components/registries/review-actions-list/review-action/component-test.ts:215:        await render(hbs`<Registries::ReviewActionsList::ReviewAction @reviewAction={{this.reviewAction}}/>`);
tests/integration/components/registries/review-actions-list/review-action/component-test.ts:236:        await render(hbs`<Registries::ReviewActionsList::ReviewAction @reviewAction={{this.reviewAction}}/>`);
tests/integration/components/registries/revised-responses-list/component-test.ts:31:        const revision = await this.store.findRecord('schema-response', revisionModel.id);
tests/integration/components/registries/revised-responses-list/component-test.ts:32:        const schema = await revision.registrationSchema;
tests/integration/components/registries/revised-responses-list/component-test.ts:34:        this.blocks = await schema.loadAll('schemaBlocks');
tests/integration/components/registries/revised-responses-list/component-test.ts:38:        await render(hbs`
tests/integration/components/registries/revised-responses-list/component-test.ts:49:        await render(hbs`<Registries::RevisedResponsesList
tests/integration/components/registries/schema-block-group-renderer/component-test.ts:167:        await this.store.findRecord(
tests/integration/components/registries/schema-block-group-renderer/component-test.ts:171:        const draftRegistration = await this.store.findRecord(
tests/integration/components/registries/schema-block-group-renderer/component-test.ts:182:        await render(hbs`
tests/integration/components/registries/update-dropdown/component-test.ts:49:        this.registration = await this.store.findRecord('registration', mirageRegistration.id);
tests/integration/components/registries/update-dropdown/component-test.ts:50:        await render(hbs`
tests/integration/components/registries/update-dropdown/component-test.ts:54:        await click('[data-test-update-button]');
tests/integration/components/registries/update-dropdown/component-test.ts:74:        this.registration = await this.store.findRecord('registration', mirageRegistration.id);
tests/integration/components/registries/update-dropdown/component-test.ts:75:        await render(hbs`
tests/integration/components/registries/update-dropdown/component-test.ts:78:        await click('[data-test-update-button]');
tests/integration/components/registries/update-dropdown/component-test.ts:112:        this.registration = await this.store.findRecord('registration', mirageRegistration.id);
tests/integration/components/registries/update-dropdown/component-test.ts:113:        await render(hbs`
tests/integration/components/registries/update-dropdown/component-test.ts:116:        await click('[data-test-update-button]');
tests/integration/components/registries/version-metadata/component-test.ts:20:        await render(hbs`
tests/integration/components/registries/version-metadata/component-test.ts:45:        await render(hbs`
tests/integration/components/resources-list/component-test.ts:27:        this.registration = await this.store.findRecord('registration', mirageRegistration.id);
tests/integration/components/resources-list/component-test.ts:28:        await render(hbs`<ResourcesList @registration={{this.registration}} />`);
tests/integration/components/resources-list/component-test.ts:37:        this.registration = await this.store.findRecord('registration', mirageRegistration.id);
tests/integration/components/resources-list/component-test.ts:38:        await render(hbs`<ResourcesList @registration={{this.registration}} />`);
tests/integration/components/resources-list/delete-resource/component-test.ts:38:        this.resource = await this.store.findRecord('resource', mirageResource.id);
tests/integration/components/resources-list/delete-resource/component-test.ts:39:        await render(hbs`
tests/integration/components/resources-list/delete-resource/component-test.ts:51:        await untrackedClicked('[data-test-open]');
tests/integration/components/resources-list/delete-resource/component-test.ts:73:        await click('[data-test-confirm-delete]');
tests/integration/components/resources-list/edit-resource/component-test.ts:37:        this.registration = await this.store.findRecord('registration', mirageRegistration.id);
tests/integration/components/resources-list/edit-resource/component-test.ts:38:        await render(hbs`
tests/integration/components/resources-list/edit-resource/component-test.ts:47:        await untrackedClicked('[data-test-open]');
tests/integration/components/resources-list/edit-resource/component-test.ts:53:        await click('[data-test-preview-button]');
tests/integration/components/resources-list/edit-resource/component-test.ts:73:        await fillIn('[data-test-doi-field] > div > div > input', 'invalid_doi');
tests/integration/components/resources-list/edit-resource/component-test.ts:74:        await selectChoose('[data-test-resource-type-field]', this.intl.t('osf-components.resources-list.data'));
tests/integration/components/resources-list/edit-resource/component-test.ts:76:        await click('[data-test-preview-button]');
tests/integration/components/resources-list/edit-resource/component-test.ts:87:        await fillIn('[data-test-doi-field] > div > div > input', '10.101/yeji');
tests/integration/components/resources-list/edit-resource/component-test.ts:88:        await click('[data-test-preview-button]');
tests/integration/components/resources-list/edit-resource/component-test.ts:96:        await click('[data-test-edit-button]');
tests/integration/components/resources-list/edit-resource/component-test.ts:97:        await fillIn('[data-test-doi-field] > div > div > input', '10.101/ryujin');
tests/integration/components/resources-list/edit-resource/component-test.ts:98:        await selectChoose('[data-test-resource-type-field]',
tests/integration/components/resources-list/edit-resource/component-test.ts:100:        await click('[data-test-preview-button]');
tests/integration/components/resources-list/edit-resource/component-test.ts:110:        await click('[data-test-add-button]');
tests/integration/components/resources-list/edit-resource/component-test.ts:124:        this.registration = await this.store.findRecord('registration', mirageRegistration.id);
tests/integration/components/resources-list/edit-resource/component-test.ts:125:        this.resource = await this.store.findRecord('resource', mirageResource.id);
tests/integration/components/resources-list/edit-resource/component-test.ts:126:        await render(hbs`
tests/integration/components/resources-list/edit-resource/component-test.ts:139:        await untrackedClicked('[data-test-open]');
tests/integration/components/resources-list/edit-resource/component-test.ts:148:        await fillIn('[data-test-doi-field] > div > div > input', 'https://invalid_url');
tests/integration/components/resources-list/edit-resource/component-test.ts:151:        await click('[data-test-save-button]');
tests/integration/components/resources-list/edit-resource/component-test.ts:162:        await fillIn('[data-test-doi-field] > div > div > input', '10.101/ryujin');
tests/integration/components/resources-list/edit-resource/component-test.ts:163:        await selectChoose('[data-test-resource-type-field]', this.intl.t('osf-components.resources-list.materials'));
tests/integration/components/resources-list/edit-resource/component-test.ts:164:        await fillIn('[data-test-description-field] > div > textarea', "Actually, I'm lying. It's really Bebe");
tests/integration/components/resources-list/edit-resource/component-test.ts:165:        await click('[data-test-save-button]');
tests/integration/components/resources-list/edit-resource/component-test.ts:178:        this.registration = await this.store.findRecord('registration', mirageRegistration.id);
tests/integration/components/resources-list/edit-resource/component-test.ts:179:        await render(hbs`
tests/integration/components/resources-list/edit-resource/component-test.ts:188:        await untrackedClicked('[data-test-open]');
tests/integration/components/resources-list/edit-resource/component-test.ts:191:        await click('[data-test-cancel-button]');
tests/integration/components/resources-list/edit-resource/component-test.ts:195:        await untrackedClicked('[data-test-open]');
tests/integration/components/resources-list/edit-resource/component-test.ts:198:        await fillIn('[data-test-doi-field] > div > div > input', '10.101/chaeryeong');
tests/integration/components/resources-list/edit-resource/component-test.ts:199:        await selectChoose('[data-test-resource-type-field]', this.intl.t('osf-components.resources-list.data'));
tests/integration/components/resources-list/edit-resource/component-test.ts:200:        await click('[data-test-preview-button]');
tests/integration/components/resources-list/edit-resource/component-test.ts:201:        await click('[data-test-close-dialog]');
tests/integration/components/resources-list/edit-resource/component-test.ts:213:        this.registration = await this.store.findRecord('registration', mirageRegistration.id);
tests/integration/components/resources-list/edit-resource/component-test.ts:214:        this.resource = await this.store.findRecord('resource', mirageResource.id);
tests/integration/components/resources-list/edit-resource/component-test.ts:215:        await render(hbs`
tests/integration/components/resources-list/edit-resource/component-test.ts:228:        await untrackedClicked('[data-test-open]');
tests/integration/components/resources-list/edit-resource/component-test.ts:230:        await fillIn('[data-test-doi-field] > div > div > input', '10.101/julia');
tests/integration/components/resources-list/edit-resource/component-test.ts:231:        await selectChoose('[data-test-resource-type-field]', this.intl.t('osf-components.resources-list.data'));
tests/integration/components/resources-list/edit-resource/component-test.ts:232:        await click('[data-test-close-dialog]');
tests/integration/components/resources-list/edit-resource/component-test.ts:237:        await untrackedClicked('[data-test-open]');
tests/integration/components/resources-list/edit-resource/component-test.ts:239:        await fillIn('[data-test-doi-field] > div > div > input', '01.101/lia');
tests/integration/components/resources-list/edit-resource/component-test.ts:240:        await selectChoose('[data-test-resource-type-field]', this.intl.t('osf-components.resources-list.data'));
tests/integration/components/resources-list/edit-resource/component-test.ts:241:        await click('[data-test-save-button]');
tests/integration/components/resources-list/edit-resource/component-test.ts:243:        await click('[data-test-cancel-button]');
tests/integration/components/resources-list/resource-card/component-test.ts:28:        await render(hbs`<ResourcesList::ResourceCard @resource={{this.resource}} />`);
tests/integration/components/resources-list/resource-card/component-test.ts:45:        await render(hbs`<ResourcesList::ResourceCard @resource={{this.resource}} />`);
tests/integration/components/resources-list/resource-card/component-test.ts:60:        await render(hbs`<ResourcesList::ResourceCard @resource={{this.resource}} />`);
tests/integration/components/search-bar/component-test.ts:14:        await render(hbs`<SearchBar @onSearch={{this.search}} />`);
tests/integration/components/search-bar/component-test.ts:16:        await a11yAudit(this.element);
tests/integration/components/sign-up-form/component-test.ts:10:        await render(hbs`<SignUpForm />`);
tests/integration/components/sign-up-policy/component-test.ts:16:        await render(hbs`{{sign-up-policy}}`);
tests/integration/components/simple-paginator/component-test.ts:16:        await render(hbs`{{simple-paginator nextPage=stubAction previousPage=stubAction maxPage=3 curPage=2}}`);
tests/integration/components/simple-paginator/component-test.ts:21:        await render(hbs`{{simple-paginator nextPage=stubAction previousPage=stubAction maxPage=1 curPage=1}}`);
tests/integration/components/simple-paginator/component-test.ts:27:            await render(hbs`{{simple-paginator nextPage=stubAction previousPage=stubAction maxPage=3 curPage=1}}`);
tests/integration/components/simple-paginator/component-test.ts:35:            await render(hbs`{{simple-paginator nextPage=stubAction previousPage=stubAction maxPage=3 curPage=2}}`);
tests/integration/components/simple-paginator/component-test.ts:43:            await render(hbs`{{simple-paginator nextPage=stubAction previousPage=stubAction maxPage=3 curPage=3}}`);
tests/integration/components/sort-button/component-test.ts:15:        await render(hbs`{{sort-button sortAction=sortAction sortBy='kindness' sort='-kindndess'}}`);
tests/integration/components/status-banner/component-test.ts:11:        await render(hbs`{{status-banner}}`);
tests/integration/components/subscriptions/component-test.ts:29:        await render(hbs`
tests/integration/components/subscriptions/component-test.ts:53:        await render(hbs`
tests/integration/components/subscriptions/component-test.ts:71:        await render(hbs`
tests/integration/components/subscriptions/component-test.ts:77:        await clickTrigger();
tests/integration/components/subscriptions/component-test.ts:78:        await click('[data-test-subscription-option="daily"]');
tests/integration/components/support-item/component-test.ts:19:        await render(hbs`
tests/integration/components/support-item/component-test.ts:32:        await a11yAudit(this.element);
tests/integration/components/support-section/component-test.ts:14:        await render(hbs`<Home::-Components::SupportSection />`);
tests/integration/components/support-section/component-test.ts:24:        await a11yAudit(this.element);
tests/integration/components/tags-widget/component-test.ts:22:        await render(hbs`{{tags-widget
tests/integration/components/tags-widget/component-test.ts:40:        await render(hbs`{{tags-widget taggable=this.node}}`);
tests/integration/components/tags-widget/component-test.ts:55:        await render(hbs`{{tags-widget
tests/integration/components/tags-widget/component-test.ts:62:        await fillIn('[data-test-tags-widget-tag-input] input', newTag);
tests/integration/components/tags-widget/component-test.ts:64:        await triggerKeyEvent('[data-test-tags-widget-tag-input] input', 'keydown', 'Enter');
tests/integration/components/tags-widget/component-test.ts:65:        await triggerKeyEvent('[data-test-tags-widget-tag-input] input', 'keyup', 'Enter');
tests/integration/components/tags-widget/component-test.ts:75:        await render(hbs`{{tags-widget
tests/integration/components/tags-widget/component-test.ts:82:        await untrackedClick(`[data-test-tags-widget-tag="${removeTag}"] + a`);
tests/integration/components/tos-consent-banner/component-test.ts:41:        await render(hbs`<TosConsentBanner />`);
tests/integration/components/tos-consent-banner/component-test.ts:51:        const user = await this.store.findRecord('user', mirageUser.id);
tests/integration/components/tos-consent-banner/component-test.ts:55:        await render(hbs`<TosConsentBanner />`);
tests/integration/components/tos-consent-banner/component-test.ts:66:        await click('[data-test-tos-consent-alert-submit-button]');
tests/integration/components/tos-consent-banner/component-test.ts:81:        const user = await this.store.findRecord('user', mirageUser.id);
tests/integration/components/tos-consent-banner/component-test.ts:85:        await render(hbs`<TosConsentBanner />`);
tests/integration/components/validated-input/component-test.ts:31:        await render(hbs` {{validated-input/text
tests/integration/components/validated-input/component-test.ts:45:        await render(hbs` {{validated-input/text
tests/integration/components/validated-input/component-test.ts:58:        await render(hbs` {{validated-input/text
tests/integration/components/validated-input/component-test.ts:71:        await render(hbs` {{validated-input/text
tests/integration/components/validated-model-form/component-test.ts:13:        await render(hbs`{{validated-model-form}}`);
tests/integration/components/validated-model-form/component-test.ts:18:        await render(hbs`
tests/integration/helpers/array-test.ts:10:        await render(hbs`
tests/integration/helpers/random-text-test.ts:11:        await render(hbs`{{random-text}}`);
tests/integration/helpers/range-test.ts:10:        await render(hbs`{{#each (range 1 5) as | i | }}{{i}}{{/each}}`);
tests/integration/helpers/unique-id-test.ts:14:            await render(hbs`{{unique-id}}`);
tests/integration/helpers/unique-id-test.ts:35:            await render(hbs`{{unique-id this.prefix}}`);
tests/integration/modifiers/before-unload-test.ts:18:        await render(hbs`
tests/integration/modifiers/before-unload-test.ts:37:        await render(hbs`<div {{before-unload this.listener}}></div>`);
tests/integration/routes/institutions/dashboard/-components/institutional-users-list/component-test.ts:23:        const institution = await this.store.findRecord('institution', 'testinstitution');
tests/integration/routes/institutions/dashboard/-components/institutional-users-list/component-test.ts:24:        const departmentMetrics = await institution.get('departmentMetrics');
tests/integration/routes/institutions/dashboard/-components/institutional-users-list/component-test.ts:35:        await render(hbs`
tests/integration/routes/institutions/dashboard/-components/institutional-users-list/component-test.ts:59:        await click('[data-test-next-page-button]');
tests/integration/routes/institutions/dashboard/-components/institutional-users-list/component-test.ts:93:        const institution = await this.store.findRecord('institution', 'testinstitution');
tests/integration/routes/institutions/dashboard/-components/institutional-users-list/component-test.ts:94:        const departmentMetrics = await institution.get('departmentMetrics');
tests/integration/routes/institutions/dashboard/-components/institutional-users-list/component-test.ts:103:        await render(hbs`
tests/integration/routes/institutions/dashboard/-components/institutional-users-list/component-test.ts:112:        await click('[data-test-ascending-sort="user_name"]');
tests/integration/routes/institutions/dashboard/-components/institutional-users-list/component-test.ts:119:        await click('[data-test-descending-sort="user_name"]');
tests/integration/routes/institutions/dashboard/-components/institutional-users-list/component-test.ts:123:        await click('[data-test-ascending-sort="department"]');
tests/integration/routes/institutions/dashboard/-components/institutional-users-list/component-test.ts:127:        await click('[data-test-descending-sort="department"]');
tests/integration/routes/institutions/dashboard/-components/panel/component-test.ts:17:        await render(hbs`
tests/integration/routes/institutions/dashboard/-components/panel/component-test.ts:38:        await render(hbs`
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:24:        const meeting = await this.store.findRecord('meeting', 'testmeeting');
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:26:        await render(hbs`<Meetings::Detail::-Components::MeetingDetailHeader @meeting={{this.meeting}} />`);
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:33:        await click('[data-test-meeting-toggle-panel-button]');
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:53:        const meeting = await this.store.findRecord('meeting', 'testmeeting');
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:55:        await render(hbs`<Meetings::Detail::-Components::MeetingDetailHeader @meeting={{this.meeting}} />`);
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:64:        await click('[data-test-meeting-toggle-panel-button]');
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:84:        const meeting = await this.store.findRecord('meeting', 'testmeeting');
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:86:        await render(hbs`<Meetings::Detail::-Components::MeetingDetailHeader @meeting={{this.meeting}} />`);
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:95:        await click('[data-test-meeting-toggle-panel-button]');
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:116:        const meeting = await this.store.findRecord('meeting', 'testmeeting');
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:118:        await render(hbs`<Meetings::Detail::-Components::MeetingDetailHeader @meeting={{this.meeting}} />`);
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:126:        await settled();
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:135:        await settled();
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:145:        await settled();
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:152:        await settled();
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:160:        await settled();
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:167:        await settled();
tests/integration/routes/meetings/detail/-components/meeting-detail-header/component-test.ts:174:        await settled();
tests/integration/routes/meetings/detail/-components/meeting-submissions-list/component-test.ts:26:        await render(hbs`<Meetings::Detail::-Components::MeetingSubmissionsList @model={{this.model}} />`);
tests/integration/routes/meetings/detail/-components/meeting-submissions-list/component-test.ts:50:        await click('[data-test-next-page-button]');
tests/integration/routes/meetings/detail/-components/meeting-submissions-list/component-test.ts:87:        await render(hbs`<Meetings::Detail::-Components::MeetingSubmissionsList @model={{this.model}} />`);
tests/integration/routes/meetings/detail/-components/meeting-submissions-list/component-test.ts:137:        await render(hbs`<Meetings::Detail::-Components::MeetingSubmissionsList @model={{this.model}} />`);
tests/integration/routes/meetings/detail/-components/meeting-submissions-list/component-test.ts:142:        await click('[data-test-ascending-sort="title"]');
tests/integration/routes/meetings/detail/-components/meeting-submissions-list/component-test.ts:146:        await click('[data-test-descending-sort="title"]');
tests/integration/routes/meetings/detail/-components/meeting-submissions-list/component-test.ts:150:        await click('[data-test-ascending-sort="author_name"]');
tests/integration/routes/meetings/detail/-components/meeting-submissions-list/component-test.ts:154:        await click('[data-test-descending-sort="author_name"]');
tests/integration/routes/meetings/detail/-components/meeting-submissions-list/component-test.ts:158:        await click('[data-test-ascending-sort="meeting_category"]');
tests/integration/routes/meetings/detail/-components/meeting-submissions-list/component-test.ts:162:        await click('[data-test-descending-sort="meeting_category"]');
tests/integration/routes/meetings/detail/-components/meeting-submissions-list/component-test.ts:166:        await click('[data-test-ascending-sort="created"]');
tests/integration/routes/meetings/detail/-components/meeting-submissions-list/component-test.ts:170:        await click('[data-test-descending-sort="created"]');
tests/integration/routes/meetings/detail/-components/meeting-submissions-list/component-test.ts:174:        await click('[data-test-ascending-sort="download_count"]');
tests/integration/routes/meetings/detail/-components/meeting-submissions-list/component-test.ts:178:        await click('[data-test-descending-sort="download_count"]');
tests/integration/routes/meetings/index/-components/meetings-footer/component-test.ts:10:        await render(hbs`<Meetings::Index::-Components::MeetingsFooter />`);
tests/integration/routes/meetings/index/-components/meetings-hero-banner/component-test.ts:10:        await render(hbs`<Meetings::Index::-Components::MeetingsHeroBanner />`);
tests/integration/routes/meetings/index/-components/meetings-hero-banner/component-test.ts:18:        await render(hbs`<Meetings::Index::-Components::MeetingsHeroBanner />`);
tests/integration/routes/meetings/index/-components/meetings-hero-banner/component-test.ts:21:        await click('[data-test-register-button]');
tests/integration/routes/meetings/index/-components/meetings-hero-banner/component-test.ts:22:        await click('[data-test-upload-button]');
tests/integration/routes/meetings/index/-components/meetings-hero-banner/component-test.ts:25:        await click('[data-test-register-button]');
tests/integration/routes/meetings/index/-components/meetings-hero-banner/component-test.ts:26:        await click('[data-test-upload-button]');
tests/integration/routes/meetings/index/-components/meetings-list/component-test.ts:21:        await render(hbs`<Meetings::Index::-Components::MeetingsList />`);
tests/integration/routes/meetings/index/-components/meetings-list/component-test.ts:41:        await click('[data-test-next-page-button]');
tests/integration/routes/meetings/index/-components/meetings-list/component-test.ts:59:        await render(hbs`<Meetings::Index::-Components::MeetingsList @search={{this.search}} />`);
tests/integration/routes/meetings/index/-components/meetings-list/component-test.ts:93:        await render(hbs`<Meetings::Index::-Components::MeetingsList />`);
tests/integration/routes/meetings/index/-components/meetings-list/component-test.ts:98:        await click('[data-test-ascending-sort="name"]');
tests/integration/routes/meetings/index/-components/meetings-list/component-test.ts:102:        await click('[data-test-descending-sort="name"]');
tests/integration/routes/meetings/index/-components/meetings-list/component-test.ts:106:        await click('[data-test-ascending-sort="submissions_count"]');
tests/integration/routes/meetings/index/-components/meetings-list/component-test.ts:110:        await click('[data-test-descending-sort="submissions_count"]');
tests/integration/routes/meetings/index/-components/meetings-list/component-test.ts:114:        await click('[data-test-ascending-sort="location"]');
tests/integration/routes/meetings/index/-components/meetings-list/component-test.ts:118:        await click('[data-test-descending-sort="location"]');
tests/integration/routes/meetings/index/-components/meetings-list/component-test.ts:122:        await click('[data-test-ascending-sort="start_date"]');
tests/integration/routes/meetings/index/-components/meetings-list/component-test.ts:126:        await click('[data-test-descending-sort="start_date"]');
tests/integration/routes/settings/account/-components/change-password-test.ts:13:        await render(hbs`{{settings/account/-components/change-password}}`);
tests/integration/routes/settings/account/-components/change-password-test.ts:17:        await percySnapshot(assert);
tests/integration/routes/settings/account/-components/change-password-test.ts:22:        await render(hbs`{{settings/account/-components/change-password}}`);
tests/integration/routes/settings/account/-components/change-password-test.ts:31:        await click('[data-test-update-password-button]');
tests/integration/routes/settings/account/-components/change-password-test.ts:32:        await percySnapshot(assert);
tests/integration/routes/settings/account/-components/change-password-test.ts:41:        await fillIn('[data-test-current-password] input', oldPassword);
tests/integration/routes/settings/account/-components/change-password-test.ts:42:        await fillIn('[data-test-new-password] input', oldPassword);
tests/integration/routes/settings/account/-components/change-password-test.ts:43:        await fillIn('[data-test-confirm-password] input', confirmPassword);
tests/integration/routes/settings/account/-components/change-password-test.ts:55:        await fillIn('[data-test-new-password] input', newPassword);
tests/integration/routes/settings/account/-components/change-password-test.ts:64:        await fillIn('[data-test-confirm-password] input', newPassword);
tests/integration/routes/settings/account/-components/change-password-test.ts:74:        await render(hbs`{{settings/account/-components/change-password}}`);
tests/integration/routes/settings/account/-components/change-password-test.ts:76:        await click('[data-test-update-password-button]');
tests/integration/routes/settings/account/-components/change-password-test.ts:80:        await fillIn('[data-test-new-password] input', 'abcabcab');
tests/integration/routes/settings/account/-components/connected-identities-test.ts:17:        await render(hbs`{{settings/account/-components/connected-identities}}`);
tests/integration/routes/settings/account/-components/connected-identities-test.ts:40:        await percySnapshot(assert);
tests/integration/routes/settings/account/-components/connected-identities-test.ts:48:        await render(hbs`{{settings/account/-components/connected-identities}}`);
tests/integration/routes/settings/account/-components/connected-identities-test.ts:81:        await percySnapshot(assert);
tests/integration/routes/settings/account/-components/connected-identities-test.ts:87:        await render(hbs`{{settings/account/-components/connected-identities}}`);
tests/integration/routes/settings/account/-components/connected-identities-test.ts:93:        await percySnapshot(
tests/integration/routes/settings/account/-components/connected-identities-test.ts:97:        await click('[data-test-next-page-button]');
tests/integration/routes/settings/account/-components/connected-identities-test.ts:102:        await percySnapshot(
tests/integration/routes/settings/account/-components/connected-identities-test.ts:111:        await render(hbs`{{settings/account/-components/connected-identities}}`);
tests/integration/routes/settings/account/-components/connected-identities-test.ts:117:        await click(`[data-test-connected-identities-item=${identity.id}] [data-test-delete-button]`);
tests/integration/routes/settings/account/-components/connected-identities-test.ts:118:        await percySnapshot(assert);
tests/integration/routes/settings/account/-components/connected-identities-test.ts:119:        await click('[data-test-cancel-delete]');
tests/integration/routes/settings/account/-components/connected-identities-test.ts:125:        await click(`[data-test-connected-identities-item=${identity.id}] [data-test-delete-button]`);
tests/integration/routes/settings/account/-components/connected-identities-test.ts:126:        await click('[data-test-confirm-delete]');
tests/integration/routes/settings/account/-components/connected-identities-test.ts:135:        await render(hbs`{{settings/account/-components/connected-identities}}`);
tests/integration/routes/settings/account/-components/connected-identities-test.ts:141:        await click(`[data-test-connected-identities-item=${identity.id}] [data-test-delete-button]`);
tests/integration/routes/settings/account/-components/connected-identities-test.ts:142:        await click('[data-test-confirm-delete]');
tests/integration/routes/settings/profile/name/-components/citation-preview-test.ts:35:        await render(hbs`{{settings/profile/name/-components/citation-preview user=user}}`);
tests/integration/routes/settings/profile/name/-components/citation-preview-test.ts:52:        await render(hbs`{{settings/profile/name/-components/citation-preview user=user}}`);
tests/integration/routes/settings/profile/name/-components/citation-preview-test.ts:69:        await render(hbs`{{settings/profile/name/-components/citation-preview user=user}}`);
tests/integration/routes/settings/profile/name/-components/citation-preview-test.ts:86:        await render(hbs`{{settings/profile/name/-components/citation-preview user=user}}`);
tests/integration/routes/settings/profile/name/-components/citation-preview-test.ts:103:        await render(hbs`{{settings/profile/name/-components/citation-preview user=user}}`);
tests/integration/routes/settings/profile/name/-components/citation-preview-test.ts:120:        await render(hbs`{{settings/profile/name/-components/citation-preview user=user}}`);
tests/integration/routes/settings/profile/name/-components/citation-preview-test.ts:137:        await render(hbs`{{settings/profile/name/-components/citation-preview user=user}}`);
tests/integration/routes/settings/profile/name/-components/citation-preview-test.ts:154:        await render(hbs`{{settings/profile/name/-components/citation-preview user=user}}`);
tests/integration/routes/settings/profile/name/-components/citation-preview-test.ts:171:        await render(hbs`{{settings/profile/name/-components/citation-preview user=user}}`);
tests/integration/routes/settings/profile/name/-components/citation-preview-test.ts:188:        await render(hbs`{{settings/profile/name/-components/citation-preview user=user}}`);
tests/integration/services/current-user-test.ts:44:        await this.store.findAll('user');
tests/integration/services/current-user-test.ts:45:        await this.store.createRecord('user').save();
tests/integration/services/current-user-test.ts:47:        await this.currentUser.authenticatedAJAX({
tests/integration/services/current-user-test.ts:51:        await this.currentUser.authenticatedAJAX({
tests/test-helper.ts:21:    await preloadAssets(manifest);
tests/unit/adapters/osf-adapter-test.ts:24:        const user = await this.store.findRecord('user', mirageUser.id);
tests/unit/adapters/osf-adapter-test.ts:43:        const user = await this.store.findRecord('user', mirageUser.id);
tests/unit/adapters/osf-adapter-test.ts:64:        const user = await this.store.findRecord('user', mirageUser.id);
tests/unit/instance-initializers/prerender-test.ts:52:        await this.instance.boot();
tests/unit/instance-initializers/router-test.ts:43:        await this.instance.boot();
tests/unit/metrics-adapters/keen-test.ts:42:        const node = await store.findRecord('node', mirageNode.id);
tests/unit/metrics-adapters/keen-test.ts:46:        await adapter.trackPage({ page: 'Foo', title: 'Bar' });
tests/unit/metrics-adapters/keen-test.ts:63:        const node = await store.findRecord('node', mirageNode.id);
tests/unit/metrics-adapters/keen-test.ts:67:        await adapter.trackPage({ page: 'Foo', title: 'Bar' });
tests/unit/metrics-adapters/keen-test.ts:84:        await adapter.trackPage({ page: 'Foo', title: 'Bar' });
tests/unit/models/osf-model-test.ts:26:        await run(async () => {
tests/unit/models/osf-model-test.ts:32:            const user = await store.findRecord('user', userId);
tests/unit/models/osf-model-test.ts:37:            const nodes = await user.queryHasMany('nodes');
tests/unit/models/osf-model-test.ts:54:        await run(async () => {
tests/unit/models/osf-model-test.ts:61:            const user = await store.findRecord('user', userOne.id, { include: 'institutions' });
tests/unit/models/osf-model-test.ts:62:            const registration = await store.findRecord('registration', registrationOne.id);
tests/unit/models/osf-model-test.ts:66:            response = await registration.createM2MRelationship(
tests/unit/models/osf-model-test.ts:72:            response = await registration.deleteM2MRelationship(
tests/unit/models/osf-model-test.ts:186:            const result = await node.sparseHasMany(
tests/unit/models/osf-model-test.ts:232:            const result = await node.sparseLoadAll('contributors', { contributor: ['index'] });
tests/unit/packages/files/dataverse-file-test.ts:13:        const publishedFile = await this.owner.lookup('service:store').findRecord('file', mirageFilePublished.id);
tests/unit/packages/files/dataverse-file-test.ts:22:        const draftFile = await this.owner.lookup('service:store').findRecord('file', mirageFileDraft.id);
tests/unit/services/analytics-test.ts:13:        await service.trackPage();
tests/unit/services/analytics-test.ts:14:        await settled();
tests/unit/services/osf-modal-state-test.ts:15:        await settled(); // enterModalState schedules the change asynchronously
tests/unit/services/osf-modal-state-test.ts:18:        await settled(); // exitModalState schedules the change asynchronously
tests/unit/services/osf-modal-state-test.ts:22:        await settled(); // enterModalState schedules the change asynchronously
tests/unit/services/ready-test.ts:43:        await settled();
tests/unit/services/ready-test.ts:63:        await settled();
tests/unit/services/ready-test.ts:69:        await settled();
tests/unit/services/ready-test.ts:84:        await settled();
tests/unit/services/ready-test.ts:104:        await settled();
tests/unit/services/ready-test.ts:108:        await settled();
tests/unit/validators/password-strength-test.ts:20:            const message = await validator.validate(minima[i], { ...builtOptions });
translations/en-us.yml:1435:            long_description: 'This registration is awaiting a decision by the registry moderators. An email will notify all registration contributors of the decision.'
translations/en-us.yml:1920:        awaiting_move: 'Waiting to move {fileName}'
translations/en-us.yml:1921:        awaiting_copy: 'Waiting to copy {fileName}'
vendor/highlight.pack.js:2:!function(e){var n="object"==typeof window&&window||"object"==typeof self&&self;"undefined"!=typeof exports?e(exports):n&&(n.hljs=e({}),"function"==typeof define&&define.amd&&define([],function(){return n.hljs}))}(function(e){function n(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function t(e){return e.nodeName.toLowerCase()}function r(e,n){var t=e&&e.exec(n);return t&&0===t.index}function a(e){return k.test(e)}function i(e){var n,t,r,i,o=e.className+" ";if(o+=e.parentNode?e.parentNode.className:"",t=B.exec(o))return w(t[1])?t[1]:"no-highlight";for(o=o.split(/\s+/),n=0,r=o.length;r>n;n++)if(i=o[n],a(i)||w(i))return i}function o(e){var n,t={},r=Array.prototype.slice.call(arguments,1);for(n in e)t[n]=e[n];return r.forEach(function(e){for(n in e)t[n]=e[n]}),t}function u(e){var n=[];return function r(e,a){for(var i=e.firstChild;i;i=i.nextSibling)3===i.nodeType?a+=i.nodeValue.length:1===i.nodeType&&(n.push({event:"start",offset:a,node:i}),a=r(i,a),t(i).match(/br|hr|img|input/)||n.push({event:"stop",offset:a,node:i}));return a}(e,0),n}function c(e,r,a){function i(){return e.length&&r.length?e[0].offset!==r[0].offset?e[0].offset<r[0].offset?e:r:"start"===r[0].event?e:r:e.length?e:r}function o(e){function r(e){return" "+e.nodeName+'="'+n(e.value).replace('"',"&quot;")+'"'}s+="<"+t(e)+E.map.call(e.attributes,r).join("")+">"}function u(e){s+="</"+t(e)+">"}function c(e){("start"===e.event?o:u)(e.node)}for(var l=0,s="",f=[];e.length||r.length;){var g=i();if(s+=n(a.substring(l,g[0].offset)),l=g[0].offset,g===e){f.reverse().forEach(u);do c(g.splice(0,1)[0]),g=i();while(g===e&&g.length&&g[0].offset===l);f.reverse().forEach(o)}else"start"===g[0].event?f.push(g[0].node):f.pop(),c(g.splice(0,1)[0])}return s+n(a.substr(l))}function l(e){return e.v&&!e.cached_variants&&(e.cached_variants=e.v.map(function(n){return o(e,{v:null},n)})),e.cached_variants||e.eW&&[o(e)]||[e]}function s(e){function n(e){return e&&e.source||e}function t(t,r){return new RegExp(n(t),"m"+(e.cI?"i":"")+(r?"g":""))}function r(a,i){if(!a.compiled){if(a.compiled=!0,a.k=a.k||a.bK,a.k){var o={},u=function(n,t){e.cI&&(t=t.toLowerCase()),t.split(" ").forEach(function(e){var t=e.split("|");o[t[0]]=[n,t[1]?Number(t[1]):1]})};"string"==typeof a.k?u("keyword",a.k):x(a.k).forEach(function(e){u(e,a.k[e])}),a.k=o}a.lR=t(a.l||/\w+/,!0),i&&(a.bK&&(a.b="\\b("+a.bK.split(" ").join("|")+")\\b"),a.b||(a.b=/\B|\b/),a.bR=t(a.b),a.e||a.eW||(a.e=/\B|\b/),a.e&&(a.eR=t(a.e)),a.tE=n(a.e)||"",a.eW&&i.tE&&(a.tE+=(a.e?"|":"")+i.tE)),a.i&&(a.iR=t(a.i)),null==a.r&&(a.r=1),a.c||(a.c=[]),a.c=Array.prototype.concat.apply([],a.c.map(function(e){return l("self"===e?a:e)})),a.c.forEach(function(e){r(e,a)}),a.starts&&r(a.starts,i);var c=a.c.map(function(e){return e.bK?"\\.?("+e.b+")\\.?":e.b}).concat([a.tE,a.i]).map(n).filter(Boolean);a.t=c.length?t(c.join("|"),!0):{exec:function(){return null}}}}r(e)}function f(e,t,a,i){function o(e,n){var t,a;for(t=0,a=n.c.length;a>t;t++)if(r(n.c[t].bR,e))return n.c[t]}function u(e,n){if(r(e.eR,n)){for(;e.endsParent&&e.parent;)e=e.parent;return e}return e.eW?u(e.parent,n):void 0}function c(e,n){return!a&&r(n.iR,e)}function l(e,n){var t=N.cI?n[0].toLowerCase():n[0];return e.k.hasOwnProperty(t)&&e.k[t]}function p(e,n,t,r){var a=r?"":I.classPrefix,i='<span class="'+a,o=t?"":C;return i+=e+'">',i+n+o}function h(){var e,t,r,a;if(!E.k)return n(k);for(a="",t=0,E.lR.lastIndex=0,r=E.lR.exec(k);r;)a+=n(k.substring(t,r.index)),e=l(E,r),e?(B+=e[1],a+=p(e[0],n(r[0]))):a+=n(r[0]),t=E.lR.lastIndex,r=E.lR.exec(k);return a+n(k.substr(t))}function d(){var e="string"==typeof E.sL;if(e&&!y[E.sL])return n(k);var t=e?f(E.sL,k,!0,x[E.sL]):g(k,E.sL.length?E.sL:void 0);return E.r>0&&(B+=t.r),e&&(x[E.sL]=t.top),p(t.language,t.value,!1,!0)}function b(){L+=null!=E.sL?d():h(),k=""}function v(e){L+=e.cN?p(e.cN,"",!0):"",E=Object.create(e,{parent:{value:E}})}function m(e,n){if(k+=e,null==n)return b(),0;var t=o(n,E);if(t)return t.skip?k+=n:(t.eB&&(k+=n),b(),t.rB||t.eB||(k=n)),v(t,n),t.rB?0:n.length;var r=u(E,n);if(r){var a=E;a.skip?k+=n:(a.rE||a.eE||(k+=n),b(),a.eE&&(k=n));do E.cN&&(L+=C),E.skip||(B+=E.r),E=E.parent;while(E!==r.parent);return r.starts&&v(r.starts,""),a.rE?0:n.length}if(c(n,E))throw new Error('Illegal lexeme "'+n+'" for mode "'+(E.cN||"<unnamed>")+'"');return k+=n,n.length||1}var N=w(e);if(!N)throw new Error('Unknown language: "'+e+'"');s(N);var R,E=i||N,x={},L="";for(R=E;R!==N;R=R.parent)R.cN&&(L=p(R.cN,"",!0)+L);var k="",B=0;try{for(var M,j,O=0;;){if(E.t.lastIndex=O,M=E.t.exec(t),!M)break;j=m(t.substring(O,M.index),M[0]),O=M.index+j}for(m(t.substr(O)),R=E;R.parent;R=R.parent)R.cN&&(L+=C);return{r:B,value:L,language:e,top:E}}catch(T){if(T.message&&-1!==T.message.indexOf("Illegal"))return{r:0,value:n(t)};throw T}}function g(e,t){t=t||I.languages||x(y);var r={r:0,value:n(e)},a=r;return t.filter(w).forEach(function(n){var t=f(n,e,!1);t.language=n,t.r>a.r&&(a=t),t.r>r.r&&(a=r,r=t)}),a.language&&(r.second_best=a),r}function p(e){return I.tabReplace||I.useBR?e.replace(M,function(e,n){return I.useBR&&"\n"===e?"<br>":I.tabReplace?n.replace(/\t/g,I.tabReplace):""}):e}function h(e,n,t){var r=n?L[n]:t,a=[e.trim()];return e.match(/\bhljs\b/)||a.push("hljs"),-1===e.indexOf(r)&&a.push(r),a.join(" ").trim()}function d(e){var n,t,r,o,l,s=i(e);a(s)||(I.useBR?(n=document.createElementNS("http://www.w3.org/1999/xhtml","div"),n.innerHTML=e.innerHTML.replace(/\n/g,"").replace(/<br[ \/]*>/g,"\n")):n=e,l=n.textContent,r=s?f(s,l,!0):g(l),t=u(n),t.length&&(o=document.createElementNS("http://www.w3.org/1999/xhtml","div"),o.innerHTML=r.value,r.value=c(t,u(o),l)),r.value=p(r.value),e.innerHTML=r.value,e.className=h(e.className,s,r.language),e.result={language:r.language,re:r.r},r.second_best&&(e.second_best={language:r.second_best.language,re:r.second_best.r}))}function b(e){I=o(I,e)}function v(){if(!v.called){v.called=!0;var e=document.querySelectorAll("pre code");E.forEach.call(e,d)}}function m(){addEventListener("DOMContentLoaded",v,!1),addEventListener("load",v,!1)}function N(n,t){var r=y[n]=t(e);r.aliases&&r.aliases.forEach(function(e){L[e]=n})}function R(){return x(y)}function w(e){return e=(e||"").toLowerCase(),y[e]||y[L[e]]}var E=[],x=Object.keys,y={},L={},k=/^(no-?highlight|plain|text)$/i,B=/\blang(?:uage)?-([\w-]+)\b/i,M=/((^(<[^>]+>|\t|)+|(?:\n)))/gm,C="</span>",I={classPrefix:"hljs-",tabReplace:null,useBR:!1,languages:void 0};return e.highlight=f,e.highlightAuto=g,e.fixMarkup=p,e.highlightBlock=d,e.configure=b,e.initHighlighting=v,e.initHighlightingOnLoad=m,e.registerLanguage=N,e.listLanguages=R,e.getLanguage=w,e.inherit=o,e.IR="[a-zA-Z]\\w*",e.UIR="[a-zA-Z_]\\w*",e.NR="\\b\\d+(\\.\\d+)?",e.CNR="(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",e.BNR="\\b(0b[01]+)",e.RSR="!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~",e.BE={b:"\\\\[\\s\\S]",r:0},e.ASM={cN:"string",b:"'",e:"'",i:"\\n",c:[e.BE]},e.QSM={cN:"string",b:'"',e:'"',i:"\\n",c:[e.BE]},e.PWM={b:/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/},e.C=function(n,t,r){var a=e.inherit({cN:"comment",b:n,e:t,c:[]},r||{});return a.c.push(e.PWM),a.c.push({cN:"doctag",b:"(?:TODO|FIXME|NOTE|BUG|XXX):",r:0}),a},e.CLCM=e.C("//","$"),e.CBCM=e.C("/\\*","\\*/"),e.HCM=e.C("#","$"),e.NM={cN:"number",b:e.NR,r:0},e.CNM={cN:"number",b:e.CNR,r:0},e.BNM={cN:"number",b:e.BNR,r:0},e.CSSNM={cN:"number",b:e.NR+"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",r:0},e.RM={cN:"regexp",b:/\//,e:/\/[gimuy]*/,i:/\n/,c:[e.BE,{b:/\[/,e:/\]/,r:0,c:[e.BE]}]},e.TM={cN:"title",b:e.IR,r:0},e.UTM={cN:"title",b:e.UIR,r:0},e.METHOD_GUARD={b:"\\.\\s*"+e.UIR,r:0},e});hljs.registerLanguage("scss",function(e){var t="[a-zA-Z-][a-zA-Z0-9_-]*",i={cN:"variable",b:"(\\$"+t+")\\b"},r={cN:"number",b:"#[0-9A-Fa-f]+"};({cN:"attribute",b:"[A-Z\\_\\.\\-]+",e:":",eE:!0,i:"[^\\s]",starts:{eW:!0,eE:!0,c:[r,e.CSSNM,e.QSM,e.ASM,e.CBCM,{cN:"meta",b:"!important"}]}});return{cI:!0,i:"[=/|']",c:[e.CLCM,e.CBCM,{cN:"selector-id",b:"\\#[A-Za-z0-9_-]+",r:0},{cN:"selector-class",b:"\\.[A-Za-z0-9_-]+",r:0},{cN:"selector-attr",b:"\\[",e:"\\]",i:"$"},{cN:"selector-tag",b:"\\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|map|mark|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|rp|rt|ruby|samp|script|section|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\\b",r:0},{b:":(visited|valid|root|right|required|read-write|read-only|out-range|optional|only-of-type|only-child|nth-of-type|nth-last-of-type|nth-last-child|nth-child|not|link|left|last-of-type|last-child|lang|invalid|indeterminate|in-range|hover|focus|first-of-type|first-line|first-letter|first-child|first|enabled|empty|disabled|default|checked|before|after|active)"},{b:"::(after|before|choices|first-letter|first-line|repeat-index|repeat-item|selection|value)"},i,{cN:"attribute",b:"\\b(z-index|word-wrap|word-spacing|word-break|width|widows|white-space|visibility|vertical-align|unicode-bidi|transition-timing-function|transition-property|transition-duration|transition-delay|transition|transform-style|transform-origin|transform|top|text-underline-position|text-transform|text-shadow|text-rendering|text-overflow|text-indent|text-decoration-style|text-decoration-line|text-decoration-color|text-decoration|text-align-last|text-align|tab-size|table-layout|right|resize|quotes|position|pointer-events|perspective-origin|perspective|page-break-inside|page-break-before|page-break-after|padding-top|padding-right|padding-left|padding-bottom|padding|overflow-y|overflow-x|overflow-wrap|overflow|outline-width|outline-style|outline-offset|outline-color|outline|orphans|order|opacity|object-position|object-fit|normal|none|nav-up|nav-right|nav-left|nav-index|nav-down|min-width|min-height|max-width|max-height|mask|marks|margin-top|margin-right|margin-left|margin-bottom|margin|list-style-type|list-style-position|list-style-image|list-style|line-height|letter-spacing|left|justify-content|initial|inherit|ime-mode|image-orientation|image-resolution|image-rendering|icon|hyphens|height|font-weight|font-variant-ligatures|font-variant|font-style|font-stretch|font-size-adjust|font-size|font-language-override|font-kerning|font-feature-settings|font-family|font|float|flex-wrap|flex-shrink|flex-grow|flex-flow|flex-direction|flex-basis|flex|filter|empty-cells|display|direction|cursor|counter-reset|counter-increment|content|column-width|column-span|column-rule-width|column-rule-style|column-rule-color|column-rule|column-gap|column-fill|column-count|columns|color|clip-path|clip|clear|caption-side|break-inside|break-before|break-after|box-sizing|box-shadow|box-decoration-break|bottom|border-width|border-top-width|border-top-style|border-top-right-radius|border-top-left-radius|border-top-color|border-top|border-style|border-spacing|border-right-width|border-right-style|border-right-color|border-right|border-radius|border-left-width|border-left-style|border-left-color|border-left|border-image-width|border-image-source|border-image-slice|border-image-repeat|border-image-outset|border-image|border-color|border-collapse|border-bottom-width|border-bottom-style|border-bottom-right-radius|border-bottom-left-radius|border-bottom-color|border-bottom|border|background-size|background-repeat|background-position|background-origin|background-image|background-color|background-clip|background-attachment|background-blend-mode|background|backface-visibility|auto|animation-timing-function|animation-play-state|animation-name|animation-iteration-count|animation-fill-mode|animation-duration|animation-direction|animation-delay|animation|align-self|align-items|align-content)\\b",i:"[^\\s]"},{b:"\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\b"},{b:":",e:";",c:[i,r,e.CSSNM,e.QSM,e.ASM,{cN:"meta",b:"!important"}]},{b:"@",e:"[{;]",k:"mixin include extend for if else each while charset import debug media page content font-face namespace warn",c:[i,e.QSM,e.ASM,r,e.CSSNM,{b:"\\s[A-Za-z0-9_.-]+",r:0}]}]}});hljs.registerLanguage("xml",function(s){var e="[A-Za-z0-9\\._:-]+",t={eW:!0,i:/</,r:0,c:[{cN:"attr",b:e,r:0},{b:/=\s*/,r:0,c:[{cN:"string",endsParent:!0,v:[{b:/"/,e:/"/},{b:/'/,e:/'/},{b:/[^\s"'=<>`]+/}]}]}]};return{aliases:["html","xhtml","rss","atom","xjb","xsd","xsl","plist"],cI:!0,c:[{cN:"meta",b:"<!DOCTYPE",e:">",r:10,c:[{b:"\\[",e:"\\]"}]},s.C("<!--","-->",{r:10}),{b:"<\\!\\[CDATA\\[",e:"\\]\\]>",r:10},{b:/<\?(php)?/,e:/\?>/,sL:"php",c:[{b:"/\\*",e:"\\*/",skip:!0}]},{cN:"tag",b:"<style(?=\\s|>|$)",e:">",k:{name:"style"},c:[t],starts:{e:"</style>",rE:!0,sL:["css","xml"]}},{cN:"tag",b:"<script(?=\\s|>|$)",e:">",k:{name:"script"},c:[t],starts:{e:"</script>",rE:!0,sL:["actionscript","javascript","handlebars","xml"]}},{cN:"meta",v:[{b:/<\?xml/,e:/\?>/,r:10},{b:/<\?\w+/,e:/\?>/}]},{cN:"tag",b:"</?",e:"/?>",c:[{cN:"name",b:/[^\/><\s]+/,r:0},t]}]}});hljs.registerLanguage("handlebars",function(e){var a={"builtin-name":"each in with if else unless bindattr action collection debugger log outlet template unbound view yield"};return{aliases:["hbs","html.hbs","html.handlebars"],cI:!0,sL:"xml",c:[e.C("{{!(--)?","(--)?}}"),{cN:"template-tag",b:/\{\{[#\/]/,e:/\}\}/,c:[{cN:"name",b:/[a-zA-Z\.-]+/,k:a,starts:{eW:!0,r:0,c:[e.QSM]}}]},{cN:"template-variable",b:/\{\{/,e:/\}\}/,k:a}]}});hljs.registerLanguage("json",function(e){var i={literal:"true false null"},n=[e.QSM,e.CNM],r={e:",",eW:!0,eE:!0,c:n,k:i},t={b:"{",e:"}",c:[{cN:"attr",b:/"/,e:/"/,c:[e.BE],i:"\\n"},e.inherit(r,{b:/:/})],i:"\\S"},c={b:"\\[",e:"\\]",c:[e.inherit(r)],i:"\\S"};return n.splice(n.length,0,t,c),{c:n,k:i,i:"\\S"}});hljs.registerLanguage("htmlbars",function(e){var a="action collection component concat debugger each each-in else get hash if input link-to loc log mut outlet partial query-params render textarea unbound unless with yield view",t={i:/\}\}/,b:/[a-zA-Z0-9_]+=/,rB:!0,r:0,c:[{cN:"attr",b:/[a-zA-Z0-9_]+/}]},i=({i:/\}\}/,b:/\)/,e:/\)/,c:[{b:/[a-zA-Z\.\-]+/,k:{built_in:a},starts:{eW:!0,r:0,c:[e.QSM]}}]},{eW:!0,r:0,k:{keyword:"as",built_in:a},c:[e.QSM,t,e.NM]});return{cI:!0,sL:"xml",c:[e.C("{{!(--)?","(--)?}}"),{cN:"template-tag",b:/\{\{[#\/]/,e:/\}\}/,c:[{cN:"name",b:/[a-zA-Z\.\-]+/,k:{"builtin-name":a},starts:i}]},{cN:"template-variable",b:/\{\{[a-zA-Z][a-zA-Z\-]+/,e:/\}\}/,k:{keyword:"as",built_in:a},c:[e.QSM]}]}});hljs.registerLanguage("css",function(e){var c="[a-zA-Z-][a-zA-Z0-9_-]*",t={b:/[A-Z\_\.\-]+\s*:/,rB:!0,e:";",eW:!0,c:[{cN:"attribute",b:/\S/,e:":",eE:!0,starts:{eW:!0,eE:!0,c:[{b:/[\w-]+\(/,rB:!0,c:[{cN:"built_in",b:/[\w-]+/},{b:/\(/,e:/\)/,c:[e.ASM,e.QSM]}]},e.CSSNM,e.QSM,e.ASM,e.CBCM,{cN:"number",b:"#[0-9A-Fa-f]+"},{cN:"meta",b:"!important"}]}}]};return{cI:!0,i:/[=\/|'\$]/,c:[e.CBCM,{cN:"selector-id",b:/#[A-Za-z0-9_-]+/},{cN:"selector-class",b:/\.[A-Za-z0-9_-]+/},{cN:"selector-attr",b:/\[/,e:/\]/,i:"$"},{cN:"selector-pseudo",b:/:(:)?[a-zA-Z0-9\_\-\+\(\)"'.]+/},{b:"@(font-face|page)",l:"[a-z-]+",k:"font-face page"},{b:"@",e:"[{;]",i:/:/,c:[{cN:"keyword",b:/\w+/},{b:/\s/,eW:!0,eE:!0,r:0,c:[e.ASM,e.QSM,e.CSSNM]}]},{cN:"selector-tag",b:c,r:0},{b:"{",e:"}",i:/\S/,c:[e.CBCM,t]}]}});hljs.registerLanguage("typescript",function(e){var r={keyword:"in if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const class public private protected get set super static implements enum export import declare type namespace abstract as from extends async await",literal:"true false null undefined NaN Infinity",built_in:"eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document any number boolean string void Promise"};return{aliases:["ts"],k:r,c:[{cN:"meta",b:/^\s*['"]use strict['"]/},e.ASM,e.QSM,{cN:"string",b:"`",e:"`",c:[e.BE,{cN:"subst",b:"\\$\\{",e:"\\}"}]},e.CLCM,e.CBCM,{cN:"number",v:[{b:"\\b(0[bB][01]+)"},{b:"\\b(0[oO][0-7]+)"},{b:e.CNR}],r:0},{b:"("+e.RSR+"|\\b(case|return|throw)\\b)\\s*",k:"return throw case",c:[e.CLCM,e.CBCM,e.RM,{cN:"function",b:"(\\(.*?\\)|"+e.IR+")\\s*=>",rB:!0,e:"\\s*=>",c:[{cN:"params",v:[{b:e.IR},{b:/\(\s*\)/},{b:/\(/,e:/\)/,eB:!0,eE:!0,k:r,c:["self",e.CLCM,e.CBCM]}]}]}],r:0},{cN:"function",b:"function",e:/[\{;]/,eE:!0,k:r,c:["self",e.inherit(e.TM,{b:/[A-Za-z$_][0-9A-Za-z$_]*/}),{cN:"params",b:/\(/,e:/\)/,eB:!0,eE:!0,k:r,c:[e.CLCM,e.CBCM],i:/["'\(]/}],i:/%/,r:0},{bK:"constructor",e:/\{/,eE:!0,c:["self",{cN:"params",b:/\(/,e:/\)/,eB:!0,eE:!0,k:r,c:[e.CLCM,e.CBCM],i:/["'\(]/}]},{b:/module\./,k:{built_in:"module"},r:0},{bK:"module",e:/\{/,eE:!0},{bK:"interface",e:/\{/,eE:!0,k:"interface extends"},{b:/\$[(.]/},{b:"\\."+e.IR,r:0},{cN:"meta",b:"@[A-Za-z]+"}]}});hljs.registerLanguage("javascript",function(e){var r="[A-Za-z$_][0-9A-Za-z$_]*",t={keyword:"in of if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const export super debugger as async await static import from as",literal:"true false null undefined NaN Infinity",built_in:"eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect Promise"},a={cN:"number",v:[{b:"\\b(0[bB][01]+)"},{b:"\\b(0[oO][0-7]+)"},{b:e.CNR}],r:0},n={cN:"subst",b:"\\$\\{",e:"\\}",k:t,c:[]},c={cN:"string",b:"`",e:"`",c:[e.BE,n]};n.c=[e.ASM,e.QSM,c,a,e.RM];var s=n.c.concat([e.CBCM,e.CLCM]);return{aliases:["js","jsx"],k:t,c:[{cN:"meta",r:10,b:/^\s*['"]use (strict|asm)['"]/},{cN:"meta",b:/^#!/,e:/$/},e.ASM,e.QSM,c,e.CLCM,e.CBCM,a,{b:/[{,]\s*/,r:0,c:[{b:r+"\\s*:",rB:!0,r:0,c:[{cN:"attr",b:r,r:0}]}]},{b:"("+e.RSR+"|\\b(case|return|throw)\\b)\\s*",k:"return throw case",c:[e.CLCM,e.CBCM,e.RM,{cN:"function",b:"(\\(.*?\\)|"+r+")\\s*=>",rB:!0,e:"\\s*=>",c:[{cN:"params",v:[{b:r},{b:/\(\s*\)/},{b:/\(/,e:/\)/,eB:!0,eE:!0,k:t,c:s}]}]},{b:/</,e:/(\/\w+|\w+\/)>/,sL:"xml",c:[{b:/<\w+\s*\/>/,skip:!0},{b:/<\w+/,e:/(\/\w+|\w+\/)>/,skip:!0,c:[{b:/<\w+\s*\/>/,skip:!0},"self"]}]}],r:0},{cN:"function",bK:"function",e:/\{/,eE:!0,c:[e.inherit(e.TM,{b:r}),{cN:"params",b:/\(/,e:/\)/,eB:!0,eE:!0,c:s}],i:/\[|%/},{b:/\$[(.]/},e.METHOD_GUARD,{cN:"class",bK:"class",e:/[{;=]/,eE:!0,i:/[:"\[\]]/,c:[{bK:"extends"},e.UTM]},{bK:"constructor",e:/\{/,eE:!0}],i:/#(?!!)/}});hljs.registerLanguage("markdown",function(e){return{aliases:["md","mkdown","mkd"],c:[{cN:"section",v:[{b:"^#{1,6}",e:"$"},{b:"^.+?\\n[=-]{2,}$"}]},{b:"<",e:">",sL:"xml",r:0},{cN:"bullet",b:"^([*+-]|(\\d+\\.))\\s+"},{cN:"strong",b:"[*_]{2}.+?[*_]{2}"},{cN:"emphasis",v:[{b:"\\*.+?\\*"},{b:"_.+?_",r:0}]},{cN:"quote",b:"^>\\s+",e:"$"},{cN:"code",v:[{b:"^```w*s*$",e:"^```s*$"},{b:"`.+?`"},{b:"^( {4}|	)",e:"$",r:0}]},{b:"^[-\\*]{3,}",e:"$"},{b:"\\[.+?\\][\\(\\[].*?[\\)\\]]",rB:!0,c:[{cN:"string",b:"\\[",e:"\\]",eB:!0,rE:!0,r:0},{cN:"link",b:"\\]\\(",e:"\\)",eB:!0,eE:!0},{cN:"symbol",b:"\\]\\[",e:"\\]",eB:!0,eE:!0}],r:10},{b:/^\[[^\n]+\]:/,rB:!0,c:[{cN:"symbol",b:/\[/,e:/\]/,eB:!0,eE:!0},{cN:"link",b:/:\s*/,e:/$/,eB:!0}]}]}});
yarn.lock:1285:"@babel/plugin-syntax-top-level-await@^7.12.13":
yarn.lock:1287:  resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.12.13.tgz#c5f0fa6e249f5b739727f923540cf7a806130178"
yarn.lock:1292:"@babel/plugin-syntax-top-level-await@^7.14.5":
yarn.lock:1294:  resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz#c1cfdadc35a646240001f06138247b741c34d94c"
yarn.lock:1952:    "@babel/plugin-syntax-top-level-await" "^7.12.13"
yarn.lock:2033:    "@babel/plugin-syntax-top-level-await" "^7.14.5"
